variables:
  GIT_SUBMODULE_STRATEGY: recursive
  GIT_STRATEGY: fetch
  # GIT_CLEAN_FLAGS: -ffdx -e dealii/build
  GIT_CLEAN_FLAGS: none

build-linux:
  stage: build
  tags:
    - agros
    - linux
  
  # Use ccache transparently, and print stats before/after
  before_script:
    - export PATH="/usr/lib/ccache:$PATH"
    - export CCACHE_BASEDIR="$PWD"
    - export CCACHE_DIR="$PWD/ccache"
    - export CCACHE_COMPILERCHECK=content
    - ccache --zero-stats || true
    - ccache --show-stats || true
  after_script:
    - export CCACHE_DIR="$PWD/ccache"
    - ccache --show-stats  
  script: 
    - git submodule update --init 
    - cd dealii 
    - mkdir -p build 
    - cd build 
    - cmake -DCMAKE_BUILD_TYPE="Release" -DDEAL_II_WITH_ZLIB="ON" -DDEAL_II_WITH_UMFPACK="OFF" -DDEAL_II_FORCE_BUNDLED_BOOST="ON" -DDEAL_II_WITH_TBB="ON" -DDEAL_II_WITH_GMSH="OFF" -DDEAL_II_WITH_MUPARSER="OFF" -DDEAL_II_WITH_ARPACK="OFF" -DDEAL_II_COMPONENT_EXAMPLES="OFF" ..
    - make -j48
    - cd ../../
    # copy deal
    - cp -f dealii/build/lib/libdeal_II.so.9.5.2 libs/libdeal_II.so.9.5.2 
    - cmake . 
    - make -j48    
    # generator
    - ./agros_generator
    - cd plugins
    - cmake .
    - make -j48
    - cd ..
    # pip package
    # create python env
    - cd agros-python 
    - python3 -m venv env
    - source env/bin/activate
    - pip install cython
    - pip install scikit-build
    - pip install pytest
    - pip install numpy
    - pip install agrossuite/. 
    
test-linux:
  stage: test
  needs: ["build-linux"]
  tags:
    - agros
    - linux

  script: 
    - cd agros-python
    - source env/bin/activate    
    - cd tests
    - pytest --junitxml=../../report.xml --disable-warnings --durations=0 -v
    - cd ../..
  artifacts:
    when: always
    reports:
      junit: report.xml
    
deploy-linux:
  stage: deploy
  needs: ["test-linux"]
  tags:
    - agros
    - linux

  script: 
    # rm files
    - rm -rf appimage 

    # create dirs
    - mkdir appimage
    - mkdir appimage/usr
    - mkdir appimage/usr/bin
    - mkdir appimage/usr/lib
    - mkdir appimage/usr/share
    - mkdir appimage/usr/share/agrossuite

    # copy binary files
    - cp agros appimage/usr/bin/
    - cp -r resources appimage/usr/share/agrossuite/resources/
    - cp libs/libagros_*.so appimage/usr/lib/
    - cp libs/libsolver_plugin_*.so appimage/usr/lib/
    - cp libs/libdeal*.so* appimage/usr/lib/

    # copy resources
    - cp -r resources_source/appimage/* appimage

    # strip
    - strip appimage/usr/bin/*
    - strip appimage/usr/lib/*

    # qt 
    - export QMAKE=/usr/bin/qmake6 
    - linuxdeploy-x86_64.AppImage --appdir appimage/ --executable agros --plugin qt --desktop-file resources_source/appimage/usr/share/applications/agros.desktop

    # rm metainfo
    - rm -rf appimage/usr/share/metainfo

    # build appimage
    - appimagetool-x86_64.AppImage  appimage/
    
    # upload to agros2d
    - curl -T Agros_Suite-x86_64.AppImage -u "$agros2d_ftp_user:$agros2d_ftp_password" ftp://agros2d.org/linux/
      
build-windows:
  stage: build
  tags:
    - agros  		
    - win11

  before_script:
    # - $env:CCACHE_BASEDIR="$PWD"
    # - $env:CCACHE_DIR="$PWD/ccache"
    # - $env:CCACHE_COMPILERCHECK="content"
    # - ccache --zero-stats
    # - ccache --show-stats

  after_script:
    - $env:CCACHE_DIR="$PWD/ccache"
    - ccache --show-stats   

  script:   
    - git submodule init
    - git submodule update
    - xcopy "C:\agros_dependencies\source\boost_1_70_0\boost_1_70_0\boost\ptr_container"  "C:\Users\vboxuserREM\Documents\Release\agros2d\dealii\bundled\boost-1.70.0\include\boost\ptr_container\" /s /e /Y 
    # Build DEAL
    - cd dealii
    - mkdir build
    - cd build
    - cmake -DCMAKE_CXX_FLAGS="/std-" -DCMAKE_CXX_FLAGS_RELEASE="/Od" -DCMAKE_BUILD_TYPE="Release" -DDEAL_II_WITH_ZLIB="ON" -DDEAL_II_WITH_UMFPACK="OFF" -DDEAL_II_FORCE_BUNDLED_BOOST="ON" -DDEAL_II_WITH_TBB="OFF" -DDEAL_II_WITH_GMSH="OFF" -DDEAL_II_WITH_MUPARSER="OFF" -DDEAL_II_WITH_ARPACK="OFF" -DDEAL_II_COMPONENT_EXAMPLES="OFF" -DZLIB_INCLUDE_DIR="C:/agros_dependencies/source/zlib131/zlib-1.3.1" -DZLIB_LIBRARY="C:/agros_dependencies/source/zlib131/zlib-1.3.1/Release/zlib.lib" .. | Out-Null
    - cmake --build . --config Release --parallel 12 -j 12 | Out-Null 
    # Build Agros
    - cd ..
    - cd ..
    - cmake . 
    - cmake --build . --config Release --parallel 12  -j 12
    # Generation and build of plugins
    - .\agros_generator.exe
    - cd plugins
    - cmake .
    - cmake --build . --config Release  --parallel 12 -j 12
    - cd ..
    - xcopy ".\dealii\build\lib\deal_II.lib" ".\libs" /Y  
    # deploy
    - iscc.exe agros.iss
    - cd setup
    - curl.exe -T AgrosSuite.exe -u "${agros2d_ftp_user}:${agros2d_ftp_password}" ftp://agros2d.org/windows/
    - cd ..
    
test-windows:
  stage: test
  needs: ["build-windows"]
  tags:
    - agros
    - win11
  
  script:
    - cd agros-python 
    - python -m venv env
    - .\env\Scripts\activate
    - pip install cython
    - pip install scikit-build
    - pip install pytest
    - pip install numpy
    - cd agrossuite
    - pip install .
    - cd ..
    - copy "C:\Users\vboxuser\Documents\Release\install\Qt6Core.dll" .\env\Lib\site-packages\agrossuite
    - copy "C:\Users\vboxuser\Documents\Release\install\Qt6Core5Compat.dll" .\env\Lib\site-packages\agrossuite
    - copy "C:\Users\vboxuser\Documents\Release\agros2d\*.dll" .\env\Lib\site-packages\agrossuite
    - copy "C:\Users\vboxuser\Documents\Release\install\triangle.exe" .\env\Lib\site-packages\agrossuite
    - copy "C:\Users\vboxuser\Documents\Release\install\zlib.dll" .\env\Lib\site-packages\agrossuite
    - cd agrossuite
    - cd tests
    - pytest --junitxml=../../report.xml --disable-warnings --durations=0 -v
    - cd ..
    - cd ..
    # - dir

deploy-windows:
    stage: deploy
    needs: ["test-windows"]
    tags:      
      - agros  		
      - win11

    script:
      - dir
 
