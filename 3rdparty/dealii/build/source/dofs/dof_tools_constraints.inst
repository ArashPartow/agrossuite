template
 void
 DoFTools::make_hanging_node_constraints (const  DoFHandler< 1 >  &dof_handler,
 ConstraintMatrix &constraints);

#if  1  != 1
 template
 void
 DoFTools::make_periodicity_constraints (const  DoFHandler< 1 > ::face_iterator &,
 const  DoFHandler< 1 > ::face_iterator &,
 dealii::ConstraintMatrix &,
 const ComponentMask &,
 bool, bool, bool);

 template
 void
 DoFTools::make_periodicity_constraints(const  DoFHandler< 1 >  &,
 const types::boundary_id,
 const types::boundary_id,
 const int,
 dealii::ConstraintMatrix &,
 const ComponentMask &);

 template
 void
 DoFTools::make_periodicity_constraints(const  DoFHandler< 1 >  &,
 const types::boundary_id,
 const types::boundary_id,
 const int,
 dealii::Tensor<1, DoFHandler< 1 > ::space_dimension> &,
 dealii::ConstraintMatrix &,
 const ComponentMask &);

 template
 void
 DoFTools::make_periodicity_constraints(const  DoFHandler< 1 >  &,
 const types::boundary_id,
 const int,
 dealii::ConstraintMatrix &,
 const ComponentMask &);

 template
 void
 DoFTools::make_periodicity_constraints(const  DoFHandler< 1 >  &,
 const types::boundary_id,
 const int,
 dealii::Tensor<1, DoFHandler< 1 > ::space_dimension> &,
 dealii::ConstraintMatrix &,
 const ComponentMask &);

 template
 void
 DoFTools::make_periodicity_constraints< DoFHandler< 1 > >
 (const std::vector<GridTools::PeriodicFacePair< DoFHandler< 1 > ::cell_iterator> > &,
 dealii::ConstraintMatrix &,
 const ComponentMask &);
 
#endif

template
 void
 DoFTools::make_hanging_node_constraints (const  DoFHandler< 2 >  &dof_handler,
 ConstraintMatrix &constraints);

#if  2  != 1
 template
 void
 DoFTools::make_periodicity_constraints (const  DoFHandler< 2 > ::face_iterator &,
 const  DoFHandler< 2 > ::face_iterator &,
 dealii::ConstraintMatrix &,
 const ComponentMask &,
 bool, bool, bool);

 template
 void
 DoFTools::make_periodicity_constraints(const  DoFHandler< 2 >  &,
 const types::boundary_id,
 const types::boundary_id,
 const int,
 dealii::ConstraintMatrix &,
 const ComponentMask &);

 template
 void
 DoFTools::make_periodicity_constraints(const  DoFHandler< 2 >  &,
 const types::boundary_id,
 const types::boundary_id,
 const int,
 dealii::Tensor<1, DoFHandler< 2 > ::space_dimension> &,
 dealii::ConstraintMatrix &,
 const ComponentMask &);

 template
 void
 DoFTools::make_periodicity_constraints(const  DoFHandler< 2 >  &,
 const types::boundary_id,
 const int,
 dealii::ConstraintMatrix &,
 const ComponentMask &);

 template
 void
 DoFTools::make_periodicity_constraints(const  DoFHandler< 2 >  &,
 const types::boundary_id,
 const int,
 dealii::Tensor<1, DoFHandler< 2 > ::space_dimension> &,
 dealii::ConstraintMatrix &,
 const ComponentMask &);

 template
 void
 DoFTools::make_periodicity_constraints< DoFHandler< 2 > >
 (const std::vector<GridTools::PeriodicFacePair< DoFHandler< 2 > ::cell_iterator> > &,
 dealii::ConstraintMatrix &,
 const ComponentMask &);
 
#endif

template
 void
 DoFTools::make_hanging_node_constraints (const  DoFHandler< 3 >  &dof_handler,
 ConstraintMatrix &constraints);

#if  3  != 1
 template
 void
 DoFTools::make_periodicity_constraints (const  DoFHandler< 3 > ::face_iterator &,
 const  DoFHandler< 3 > ::face_iterator &,
 dealii::ConstraintMatrix &,
 const ComponentMask &,
 bool, bool, bool);

 template
 void
 DoFTools::make_periodicity_constraints(const  DoFHandler< 3 >  &,
 const types::boundary_id,
 const types::boundary_id,
 const int,
 dealii::ConstraintMatrix &,
 const ComponentMask &);

 template
 void
 DoFTools::make_periodicity_constraints(const  DoFHandler< 3 >  &,
 const types::boundary_id,
 const types::boundary_id,
 const int,
 dealii::Tensor<1, DoFHandler< 3 > ::space_dimension> &,
 dealii::ConstraintMatrix &,
 const ComponentMask &);

 template
 void
 DoFTools::make_periodicity_constraints(const  DoFHandler< 3 >  &,
 const types::boundary_id,
 const int,
 dealii::ConstraintMatrix &,
 const ComponentMask &);

 template
 void
 DoFTools::make_periodicity_constraints(const  DoFHandler< 3 >  &,
 const types::boundary_id,
 const int,
 dealii::Tensor<1, DoFHandler< 3 > ::space_dimension> &,
 dealii::ConstraintMatrix &,
 const ComponentMask &);

 template
 void
 DoFTools::make_periodicity_constraints< DoFHandler< 3 > >
 (const std::vector<GridTools::PeriodicFacePair< DoFHandler< 3 > ::cell_iterator> > &,
 dealii::ConstraintMatrix &,
 const ComponentMask &);
 
#endif

template
 void
 DoFTools::make_hanging_node_constraints (const  hp::DoFHandler< 1 >  &dof_handler,
 ConstraintMatrix &constraints);

#if  1  != 1
 template
 void
 DoFTools::make_periodicity_constraints (const  hp::DoFHandler< 1 > ::face_iterator &,
 const  hp::DoFHandler< 1 > ::face_iterator &,
 dealii::ConstraintMatrix &,
 const ComponentMask &,
 bool, bool, bool);

 template
 void
 DoFTools::make_periodicity_constraints(const  hp::DoFHandler< 1 >  &,
 const types::boundary_id,
 const types::boundary_id,
 const int,
 dealii::ConstraintMatrix &,
 const ComponentMask &);

 template
 void
 DoFTools::make_periodicity_constraints(const  hp::DoFHandler< 1 >  &,
 const types::boundary_id,
 const types::boundary_id,
 const int,
 dealii::Tensor<1, hp::DoFHandler< 1 > ::space_dimension> &,
 dealii::ConstraintMatrix &,
 const ComponentMask &);

 template
 void
 DoFTools::make_periodicity_constraints(const  hp::DoFHandler< 1 >  &,
 const types::boundary_id,
 const int,
 dealii::ConstraintMatrix &,
 const ComponentMask &);

 template
 void
 DoFTools::make_periodicity_constraints(const  hp::DoFHandler< 1 >  &,
 const types::boundary_id,
 const int,
 dealii::Tensor<1, hp::DoFHandler< 1 > ::space_dimension> &,
 dealii::ConstraintMatrix &,
 const ComponentMask &);

 template
 void
 DoFTools::make_periodicity_constraints< hp::DoFHandler< 1 > >
 (const std::vector<GridTools::PeriodicFacePair< hp::DoFHandler< 1 > ::cell_iterator> > &,
 dealii::ConstraintMatrix &,
 const ComponentMask &);
 
#endif

template
 void
 DoFTools::make_hanging_node_constraints (const  hp::DoFHandler< 2 >  &dof_handler,
 ConstraintMatrix &constraints);

#if  2  != 1
 template
 void
 DoFTools::make_periodicity_constraints (const  hp::DoFHandler< 2 > ::face_iterator &,
 const  hp::DoFHandler< 2 > ::face_iterator &,
 dealii::ConstraintMatrix &,
 const ComponentMask &,
 bool, bool, bool);

 template
 void
 DoFTools::make_periodicity_constraints(const  hp::DoFHandler< 2 >  &,
 const types::boundary_id,
 const types::boundary_id,
 const int,
 dealii::ConstraintMatrix &,
 const ComponentMask &);

 template
 void
 DoFTools::make_periodicity_constraints(const  hp::DoFHandler< 2 >  &,
 const types::boundary_id,
 const types::boundary_id,
 const int,
 dealii::Tensor<1, hp::DoFHandler< 2 > ::space_dimension> &,
 dealii::ConstraintMatrix &,
 const ComponentMask &);

 template
 void
 DoFTools::make_periodicity_constraints(const  hp::DoFHandler< 2 >  &,
 const types::boundary_id,
 const int,
 dealii::ConstraintMatrix &,
 const ComponentMask &);

 template
 void
 DoFTools::make_periodicity_constraints(const  hp::DoFHandler< 2 >  &,
 const types::boundary_id,
 const int,
 dealii::Tensor<1, hp::DoFHandler< 2 > ::space_dimension> &,
 dealii::ConstraintMatrix &,
 const ComponentMask &);

 template
 void
 DoFTools::make_periodicity_constraints< hp::DoFHandler< 2 > >
 (const std::vector<GridTools::PeriodicFacePair< hp::DoFHandler< 2 > ::cell_iterator> > &,
 dealii::ConstraintMatrix &,
 const ComponentMask &);
 
#endif

template
 void
 DoFTools::make_hanging_node_constraints (const  hp::DoFHandler< 3 >  &dof_handler,
 ConstraintMatrix &constraints);

#if  3  != 1
 template
 void
 DoFTools::make_periodicity_constraints (const  hp::DoFHandler< 3 > ::face_iterator &,
 const  hp::DoFHandler< 3 > ::face_iterator &,
 dealii::ConstraintMatrix &,
 const ComponentMask &,
 bool, bool, bool);

 template
 void
 DoFTools::make_periodicity_constraints(const  hp::DoFHandler< 3 >  &,
 const types::boundary_id,
 const types::boundary_id,
 const int,
 dealii::ConstraintMatrix &,
 const ComponentMask &);

 template
 void
 DoFTools::make_periodicity_constraints(const  hp::DoFHandler< 3 >  &,
 const types::boundary_id,
 const types::boundary_id,
 const int,
 dealii::Tensor<1, hp::DoFHandler< 3 > ::space_dimension> &,
 dealii::ConstraintMatrix &,
 const ComponentMask &);

 template
 void
 DoFTools::make_periodicity_constraints(const  hp::DoFHandler< 3 >  &,
 const types::boundary_id,
 const int,
 dealii::ConstraintMatrix &,
 const ComponentMask &);

 template
 void
 DoFTools::make_periodicity_constraints(const  hp::DoFHandler< 3 >  &,
 const types::boundary_id,
 const int,
 dealii::Tensor<1, hp::DoFHandler< 3 > ::space_dimension> &,
 dealii::ConstraintMatrix &,
 const ComponentMask &);

 template
 void
 DoFTools::make_periodicity_constraints< hp::DoFHandler< 3 > >
 (const std::vector<GridTools::PeriodicFacePair< hp::DoFHandler< 3 > ::cell_iterator> > &,
 dealii::ConstraintMatrix &,
 const ComponentMask &);
 
#endif

#if  1  != 1
 template
 void
 DoFTools::make_hanging_node_constraints (const MGDoFHandler< 1 > &dof_handler,
 ConstraintMatrix &constraints);

#endif

#if  1  < 3

template
void
DoFTools::
make_hanging_node_constraints (const DoFHandler< 1 , 1 +1> &dof_handler,
 ConstraintMatrix &constraints);
#endif

#if  1  == 3
template
void
DoFTools::
make_hanging_node_constraints (const DoFHandler<1,3> &dof_handler,
 ConstraintMatrix &constraints);
#endif

template
void
DoFTools::make_zero_boundary_constraints
(const DoFHandler< 1 > &,
 ConstraintMatrix &,
 const ComponentMask &);

template
void
DoFTools::make_zero_boundary_constraints
(const DoFHandler< 1 > &,
 const types::boundary_id ,
 ConstraintMatrix &,
 const ComponentMask &);

template
void
DoFTools::make_zero_boundary_constraints
(const hp::DoFHandler< 1 > &,
 ConstraintMatrix &,
 const ComponentMask &);

template
void
DoFTools::make_zero_boundary_constraints
(const hp::DoFHandler< 1 > &,
 const types::boundary_id ,
 ConstraintMatrix &,
 const ComponentMask &);

template
void
DoFTools::compute_intergrid_constraints< 1 > (
 const DoFHandler< 1 > &, const unsigned int,
 const DoFHandler< 1 > &, const unsigned int,
 const InterGridMap<DoFHandler< 1 > > &,
 ConstraintMatrix&);

template
void
DoFTools::compute_intergrid_transfer_representation< 1 >
(const DoFHandler< 1 > &, const unsigned int,
 const DoFHandler< 1 > &, const unsigned int,
 const InterGridMap<DoFHandler< 1 > > &,
 std::vector<std::map<types::global_dof_index, float> > &);


#if  2  != 1
 template
 void
 DoFTools::make_hanging_node_constraints (const MGDoFHandler< 2 > &dof_handler,
 ConstraintMatrix &constraints);

#endif

#if  2  < 3

template
void
DoFTools::
make_hanging_node_constraints (const DoFHandler< 2 , 2 +1> &dof_handler,
 ConstraintMatrix &constraints);
#endif

#if  2  == 3
template
void
DoFTools::
make_hanging_node_constraints (const DoFHandler<1,3> &dof_handler,
 ConstraintMatrix &constraints);
#endif

template
void
DoFTools::make_zero_boundary_constraints
(const DoFHandler< 2 > &,
 ConstraintMatrix &,
 const ComponentMask &);

template
void
DoFTools::make_zero_boundary_constraints
(const DoFHandler< 2 > &,
 const types::boundary_id ,
 ConstraintMatrix &,
 const ComponentMask &);

template
void
DoFTools::make_zero_boundary_constraints
(const hp::DoFHandler< 2 > &,
 ConstraintMatrix &,
 const ComponentMask &);

template
void
DoFTools::make_zero_boundary_constraints
(const hp::DoFHandler< 2 > &,
 const types::boundary_id ,
 ConstraintMatrix &,
 const ComponentMask &);

template
void
DoFTools::compute_intergrid_constraints< 2 > (
 const DoFHandler< 2 > &, const unsigned int,
 const DoFHandler< 2 > &, const unsigned int,
 const InterGridMap<DoFHandler< 2 > > &,
 ConstraintMatrix&);

template
void
DoFTools::compute_intergrid_transfer_representation< 2 >
(const DoFHandler< 2 > &, const unsigned int,
 const DoFHandler< 2 > &, const unsigned int,
 const InterGridMap<DoFHandler< 2 > > &,
 std::vector<std::map<types::global_dof_index, float> > &);


#if  3  != 1
 template
 void
 DoFTools::make_hanging_node_constraints (const MGDoFHandler< 3 > &dof_handler,
 ConstraintMatrix &constraints);

#endif

#if  3  < 3

template
void
DoFTools::
make_hanging_node_constraints (const DoFHandler< 3 , 3 +1> &dof_handler,
 ConstraintMatrix &constraints);
#endif

#if  3  == 3
template
void
DoFTools::
make_hanging_node_constraints (const DoFHandler<1,3> &dof_handler,
 ConstraintMatrix &constraints);
#endif

template
void
DoFTools::make_zero_boundary_constraints
(const DoFHandler< 3 > &,
 ConstraintMatrix &,
 const ComponentMask &);

template
void
DoFTools::make_zero_boundary_constraints
(const DoFHandler< 3 > &,
 const types::boundary_id ,
 ConstraintMatrix &,
 const ComponentMask &);

template
void
DoFTools::make_zero_boundary_constraints
(const hp::DoFHandler< 3 > &,
 ConstraintMatrix &,
 const ComponentMask &);

template
void
DoFTools::make_zero_boundary_constraints
(const hp::DoFHandler< 3 > &,
 const types::boundary_id ,
 ConstraintMatrix &,
 const ComponentMask &);

template
void
DoFTools::compute_intergrid_constraints< 3 > (
 const DoFHandler< 3 > &, const unsigned int,
 const DoFHandler< 3 > &, const unsigned int,
 const InterGridMap<DoFHandler< 3 > > &,
 ConstraintMatrix&);

template
void
DoFTools::compute_intergrid_transfer_representation< 3 >
(const DoFHandler< 3 > &, const unsigned int,
 const DoFHandler< 3 > &, const unsigned int,
 const InterGridMap<DoFHandler< 3 > > &,
 std::vector<std::map<types::global_dof_index, float> > &);


