template void
 DoFTools::make_cell_patches<DoFHandler< 1 >, SparsityPattern >
 ( SparsityPattern &, const DoFHandler< 1 >&, const unsigned int, const std::vector<bool>&, types::global_dof_index);

 template void
 DoFTools::make_cell_patches<MGDoFHandler< 1 >, SparsityPattern >
 ( SparsityPattern &, const MGDoFHandler< 1 >&, const unsigned int, const std::vector<bool>&, types::global_dof_index);

template void
 DoFTools::make_cell_patches<DoFHandler< 2 >, SparsityPattern >
 ( SparsityPattern &, const DoFHandler< 2 >&, const unsigned int, const std::vector<bool>&, types::global_dof_index);

 template void
 DoFTools::make_cell_patches<MGDoFHandler< 2 >, SparsityPattern >
 ( SparsityPattern &, const MGDoFHandler< 2 >&, const unsigned int, const std::vector<bool>&, types::global_dof_index);

template void
 DoFTools::make_cell_patches<DoFHandler< 3 >, SparsityPattern >
 ( SparsityPattern &, const DoFHandler< 3 >&, const unsigned int, const std::vector<bool>&, types::global_dof_index);

 template void
 DoFTools::make_cell_patches<MGDoFHandler< 3 >, SparsityPattern >
 ( SparsityPattern &, const MGDoFHandler< 3 >&, const unsigned int, const std::vector<bool>&, types::global_dof_index);

template void
 DoFTools::make_cell_patches<DoFHandler< 1 >, CompressedSparsityPattern >
 ( CompressedSparsityPattern &, const DoFHandler< 1 >&, const unsigned int, const std::vector<bool>&, types::global_dof_index);

 template void
 DoFTools::make_cell_patches<MGDoFHandler< 1 >, CompressedSparsityPattern >
 ( CompressedSparsityPattern &, const MGDoFHandler< 1 >&, const unsigned int, const std::vector<bool>&, types::global_dof_index);

template void
 DoFTools::make_cell_patches<DoFHandler< 2 >, CompressedSparsityPattern >
 ( CompressedSparsityPattern &, const DoFHandler< 2 >&, const unsigned int, const std::vector<bool>&, types::global_dof_index);

 template void
 DoFTools::make_cell_patches<MGDoFHandler< 2 >, CompressedSparsityPattern >
 ( CompressedSparsityPattern &, const MGDoFHandler< 2 >&, const unsigned int, const std::vector<bool>&, types::global_dof_index);

template void
 DoFTools::make_cell_patches<DoFHandler< 3 >, CompressedSparsityPattern >
 ( CompressedSparsityPattern &, const DoFHandler< 3 >&, const unsigned int, const std::vector<bool>&, types::global_dof_index);

 template void
 DoFTools::make_cell_patches<MGDoFHandler< 3 >, CompressedSparsityPattern >
 ( CompressedSparsityPattern &, const MGDoFHandler< 3 >&, const unsigned int, const std::vector<bool>&, types::global_dof_index);

template void
 DoFTools::make_cell_patches<DoFHandler< 1 >, CompressedSetSparsityPattern >
 ( CompressedSetSparsityPattern &, const DoFHandler< 1 >&, const unsigned int, const std::vector<bool>&, types::global_dof_index);

 template void
 DoFTools::make_cell_patches<MGDoFHandler< 1 >, CompressedSetSparsityPattern >
 ( CompressedSetSparsityPattern &, const MGDoFHandler< 1 >&, const unsigned int, const std::vector<bool>&, types::global_dof_index);

template void
 DoFTools::make_cell_patches<DoFHandler< 2 >, CompressedSetSparsityPattern >
 ( CompressedSetSparsityPattern &, const DoFHandler< 2 >&, const unsigned int, const std::vector<bool>&, types::global_dof_index);

 template void
 DoFTools::make_cell_patches<MGDoFHandler< 2 >, CompressedSetSparsityPattern >
 ( CompressedSetSparsityPattern &, const MGDoFHandler< 2 >&, const unsigned int, const std::vector<bool>&, types::global_dof_index);

template void
 DoFTools::make_cell_patches<DoFHandler< 3 >, CompressedSetSparsityPattern >
 ( CompressedSetSparsityPattern &, const DoFHandler< 3 >&, const unsigned int, const std::vector<bool>&, types::global_dof_index);

 template void
 DoFTools::make_cell_patches<MGDoFHandler< 3 >, CompressedSetSparsityPattern >
 ( CompressedSetSparsityPattern &, const MGDoFHandler< 3 >&, const unsigned int, const std::vector<bool>&, types::global_dof_index);

template void
 DoFTools::make_cell_patches<DoFHandler< 1 >, CompressedSimpleSparsityPattern >
 ( CompressedSimpleSparsityPattern &, const DoFHandler< 1 >&, const unsigned int, const std::vector<bool>&, types::global_dof_index);

 template void
 DoFTools::make_cell_patches<MGDoFHandler< 1 >, CompressedSimpleSparsityPattern >
 ( CompressedSimpleSparsityPattern &, const MGDoFHandler< 1 >&, const unsigned int, const std::vector<bool>&, types::global_dof_index);

template void
 DoFTools::make_cell_patches<DoFHandler< 2 >, CompressedSimpleSparsityPattern >
 ( CompressedSimpleSparsityPattern &, const DoFHandler< 2 >&, const unsigned int, const std::vector<bool>&, types::global_dof_index);

 template void
 DoFTools::make_cell_patches<MGDoFHandler< 2 >, CompressedSimpleSparsityPattern >
 ( CompressedSimpleSparsityPattern &, const MGDoFHandler< 2 >&, const unsigned int, const std::vector<bool>&, types::global_dof_index);

template void
 DoFTools::make_cell_patches<DoFHandler< 3 >, CompressedSimpleSparsityPattern >
 ( CompressedSimpleSparsityPattern &, const DoFHandler< 3 >&, const unsigned int, const std::vector<bool>&, types::global_dof_index);

 template void
 DoFTools::make_cell_patches<MGDoFHandler< 3 >, CompressedSimpleSparsityPattern >
 ( CompressedSimpleSparsityPattern &, const MGDoFHandler< 3 >&, const unsigned int, const std::vector<bool>&, types::global_dof_index);

template void
 DoFTools::make_cell_patches<DoFHandler< 1 >, BlockSparsityPattern >
 ( BlockSparsityPattern &, const DoFHandler< 1 >&, const unsigned int, const std::vector<bool>&, types::global_dof_index);

 template void
 DoFTools::make_cell_patches<MGDoFHandler< 1 >, BlockSparsityPattern >
 ( BlockSparsityPattern &, const MGDoFHandler< 1 >&, const unsigned int, const std::vector<bool>&, types::global_dof_index);

template void
 DoFTools::make_cell_patches<DoFHandler< 2 >, BlockSparsityPattern >
 ( BlockSparsityPattern &, const DoFHandler< 2 >&, const unsigned int, const std::vector<bool>&, types::global_dof_index);

 template void
 DoFTools::make_cell_patches<MGDoFHandler< 2 >, BlockSparsityPattern >
 ( BlockSparsityPattern &, const MGDoFHandler< 2 >&, const unsigned int, const std::vector<bool>&, types::global_dof_index);

template void
 DoFTools::make_cell_patches<DoFHandler< 3 >, BlockSparsityPattern >
 ( BlockSparsityPattern &, const DoFHandler< 3 >&, const unsigned int, const std::vector<bool>&, types::global_dof_index);

 template void
 DoFTools::make_cell_patches<MGDoFHandler< 3 >, BlockSparsityPattern >
 ( BlockSparsityPattern &, const MGDoFHandler< 3 >&, const unsigned int, const std::vector<bool>&, types::global_dof_index);

template void
 DoFTools::make_cell_patches<DoFHandler< 1 >, BlockCompressedSparsityPattern >
 ( BlockCompressedSparsityPattern &, const DoFHandler< 1 >&, const unsigned int, const std::vector<bool>&, types::global_dof_index);

 template void
 DoFTools::make_cell_patches<MGDoFHandler< 1 >, BlockCompressedSparsityPattern >
 ( BlockCompressedSparsityPattern &, const MGDoFHandler< 1 >&, const unsigned int, const std::vector<bool>&, types::global_dof_index);

template void
 DoFTools::make_cell_patches<DoFHandler< 2 >, BlockCompressedSparsityPattern >
 ( BlockCompressedSparsityPattern &, const DoFHandler< 2 >&, const unsigned int, const std::vector<bool>&, types::global_dof_index);

 template void
 DoFTools::make_cell_patches<MGDoFHandler< 2 >, BlockCompressedSparsityPattern >
 ( BlockCompressedSparsityPattern &, const MGDoFHandler< 2 >&, const unsigned int, const std::vector<bool>&, types::global_dof_index);

template void
 DoFTools::make_cell_patches<DoFHandler< 3 >, BlockCompressedSparsityPattern >
 ( BlockCompressedSparsityPattern &, const DoFHandler< 3 >&, const unsigned int, const std::vector<bool>&, types::global_dof_index);

 template void
 DoFTools::make_cell_patches<MGDoFHandler< 3 >, BlockCompressedSparsityPattern >
 ( BlockCompressedSparsityPattern &, const MGDoFHandler< 3 >&, const unsigned int, const std::vector<bool>&, types::global_dof_index);

template void
 DoFTools::make_cell_patches<DoFHandler< 1 >, BlockCompressedSetSparsityPattern >
 ( BlockCompressedSetSparsityPattern &, const DoFHandler< 1 >&, const unsigned int, const std::vector<bool>&, types::global_dof_index);

 template void
 DoFTools::make_cell_patches<MGDoFHandler< 1 >, BlockCompressedSetSparsityPattern >
 ( BlockCompressedSetSparsityPattern &, const MGDoFHandler< 1 >&, const unsigned int, const std::vector<bool>&, types::global_dof_index);

template void
 DoFTools::make_cell_patches<DoFHandler< 2 >, BlockCompressedSetSparsityPattern >
 ( BlockCompressedSetSparsityPattern &, const DoFHandler< 2 >&, const unsigned int, const std::vector<bool>&, types::global_dof_index);

 template void
 DoFTools::make_cell_patches<MGDoFHandler< 2 >, BlockCompressedSetSparsityPattern >
 ( BlockCompressedSetSparsityPattern &, const MGDoFHandler< 2 >&, const unsigned int, const std::vector<bool>&, types::global_dof_index);

template void
 DoFTools::make_cell_patches<DoFHandler< 3 >, BlockCompressedSetSparsityPattern >
 ( BlockCompressedSetSparsityPattern &, const DoFHandler< 3 >&, const unsigned int, const std::vector<bool>&, types::global_dof_index);

 template void
 DoFTools::make_cell_patches<MGDoFHandler< 3 >, BlockCompressedSetSparsityPattern >
 ( BlockCompressedSetSparsityPattern &, const MGDoFHandler< 3 >&, const unsigned int, const std::vector<bool>&, types::global_dof_index);

template void
 DoFTools::make_cell_patches<DoFHandler< 1 >, BlockCompressedSimpleSparsityPattern >
 ( BlockCompressedSimpleSparsityPattern &, const DoFHandler< 1 >&, const unsigned int, const std::vector<bool>&, types::global_dof_index);

 template void
 DoFTools::make_cell_patches<MGDoFHandler< 1 >, BlockCompressedSimpleSparsityPattern >
 ( BlockCompressedSimpleSparsityPattern &, const MGDoFHandler< 1 >&, const unsigned int, const std::vector<bool>&, types::global_dof_index);

template void
 DoFTools::make_cell_patches<DoFHandler< 2 >, BlockCompressedSimpleSparsityPattern >
 ( BlockCompressedSimpleSparsityPattern &, const DoFHandler< 2 >&, const unsigned int, const std::vector<bool>&, types::global_dof_index);

 template void
 DoFTools::make_cell_patches<MGDoFHandler< 2 >, BlockCompressedSimpleSparsityPattern >
 ( BlockCompressedSimpleSparsityPattern &, const MGDoFHandler< 2 >&, const unsigned int, const std::vector<bool>&, types::global_dof_index);

template void
 DoFTools::make_cell_patches<DoFHandler< 3 >, BlockCompressedSimpleSparsityPattern >
 ( BlockCompressedSimpleSparsityPattern &, const DoFHandler< 3 >&, const unsigned int, const std::vector<bool>&, types::global_dof_index);

 template void
 DoFTools::make_cell_patches<MGDoFHandler< 3 >, BlockCompressedSimpleSparsityPattern >
 ( BlockCompressedSimpleSparsityPattern &, const MGDoFHandler< 3 >&, const unsigned int, const std::vector<bool>&, types::global_dof_index);

template
 void DoFTools::make_vertex_patches (SparsityPattern&, const DoFHandler< 1 >&,
 unsigned int, bool, bool, bool, bool);

 template
 void DoFTools::make_single_patch (SparsityPattern&, const DoFHandler< 1 >&,
 unsigned int, bool);

 template
 void DoFTools::make_child_patches(SparsityPattern&, const DoFHandler< 1 >&,
 unsigned int, bool, bool);

 template
 void DoFTools::make_vertex_patches (SparsityPattern&, const MGDoFHandler< 1 >&,
 unsigned int, bool, bool, bool, bool);

 template
 void DoFTools::make_single_patch (SparsityPattern&, const MGDoFHandler< 1 >&,
 unsigned int, bool);

 template
 void DoFTools::make_child_patches(SparsityPattern&, const MGDoFHandler< 1 >&,
 unsigned int, bool, bool);




template
void
DoFTools::distribute_cell_to_dof_vector<DoFHandler< 1 > >
(const DoFHandler< 1 > &dof_handler,
 const Vector<float> &cell_data,
 Vector<double> &dof_data,
 const unsigned int component);
template
void
DoFTools::distribute_cell_to_dof_vector<DoFHandler< 1 > >
(const DoFHandler< 1 > &dof_handler,
 const Vector<double> &cell_data,
 Vector<double> &dof_data,
 const unsigned int component);

template
void
DoFTools::distribute_cell_to_dof_vector<hp::DoFHandler< 1 > >
(const hp::DoFHandler< 1 > &dof_handler,
 const Vector<float> &cell_data,
 Vector<double> &dof_data,
 const unsigned int component);
template
void
DoFTools::distribute_cell_to_dof_vector<hp::DoFHandler< 1 > >
(const hp::DoFHandler< 1 > &dof_handler,
 const Vector<double> &cell_data,
 Vector<double> &dof_data,
 const unsigned int component);


template void DoFTools::extract_dofs< 1 >
(const DoFHandler< 1 >&,
 const ComponentMask &,
 std::vector<bool>&);

template void DoFTools::extract_dofs< 1 >
(const DoFHandler< 1 >&,
 const BlockMask &,
 std::vector<bool>&);

template void DoFTools::extract_dofs< 1 >
(const hp::DoFHandler< 1 >&,
 const ComponentMask &,
 std::vector<bool>&);

template void DoFTools::extract_dofs< 1 >
(const hp::DoFHandler< 1 >&,
 const BlockMask &,
 std::vector<bool>&);

template void DoFTools::extract_level_dofs<DoFHandler< 1 > >
(const unsigned int level,
 const DoFHandler< 1 >&,
 const ComponentMask &,
 std::vector<bool>&);

template void DoFTools::extract_level_dofs<DoFHandler< 1 > >
(const unsigned int level,
 const DoFHandler< 1 >&,
 const BlockMask &,
 std::vector<bool>&);

#if  1  > 1
template void DoFTools::extract_level_dofs<DoFHandler<1,  1 > >
(const unsigned int level,
 const DoFHandler<1,  1 >&,
 const BlockMask &,
 std::vector<bool>&);
#endif

#if  1  > 2
template void DoFTools::extract_level_dofs<DoFHandler<2,  1 > >
(const unsigned int level,
 const DoFHandler<2,  1 >&,
 const BlockMask &,
 std::vector<bool>&);
#endif

template void DoFTools::extract_level_dofs<MGDoFHandler< 1 > >
(const unsigned int level,
 const MGDoFHandler< 1 >&,
 const ComponentMask &,
 std::vector<bool>&);

template void DoFTools::extract_level_dofs<MGDoFHandler< 1 > >
(const unsigned int level,
 const MGDoFHandler< 1 >&,
 const BlockMask &,
 std::vector<bool>&);

template
void
DoFTools::extract_boundary_dofs<DoFHandler< 1 > >
(const DoFHandler< 1 > &,
 const ComponentMask &,
 std::vector<bool> &,
 const std::set<types::boundary_id> &);
template
void
DoFTools::extract_boundary_dofs<hp::DoFHandler< 1 > >
(const hp::DoFHandler< 1 > &,
 const ComponentMask &,
 std::vector<bool> &,
 const std::set<types::boundary_id> &);

template
void
DoFTools::extract_dofs_with_support_on_boundary<DoFHandler< 1 > >
(const DoFHandler< 1 > &,
 const ComponentMask &,
 std::vector<bool> &,
 const std::set<types::boundary_id> &);
template
void
DoFTools::extract_dofs_with_support_on_boundary<hp::DoFHandler< 1 > >
(const hp::DoFHandler< 1 > &,
 const ComponentMask &,
 std::vector<bool> &,
 const std::set<types::boundary_id> &);

template
void
DoFTools::extract_hanging_node_dofs
(const DoFHandler< 1 > &dof_handler,
 std::vector<bool> &selected_dofs);

template
void
DoFTools::extract_subdomain_dofs<DoFHandler< 1 > >
(const DoFHandler< 1 > &dof_handler,
 const types::subdomain_id subdomain_id,
 std::vector<bool> &selected_dofs);
template
void
DoFTools::extract_subdomain_dofs<hp::DoFHandler< 1 > >
(const hp::DoFHandler< 1 > &dof_handler,
 const types::subdomain_id subdomain_id,
 std::vector<bool> &selected_dofs);

template
void
DoFTools::extract_locally_owned_dofs<DoFHandler< 1 > >
(const DoFHandler< 1 > & dof_handler,
 IndexSet & dof_set);

template
void
DoFTools::extract_locally_owned_dofs<hp::DoFHandler< 1 > >
(const hp::DoFHandler< 1 > & dof_handler,
 IndexSet & dof_set);

template
void
DoFTools::extract_locally_active_dofs<DoFHandler< 1 > >
(const DoFHandler< 1 > & dof_handler,
 IndexSet & dof_set);

template
void
DoFTools::extract_locally_active_dofs<hp::DoFHandler< 1 > >
(const hp::DoFHandler< 1 > & dof_handler,
 IndexSet & dof_set);

template
void
DoFTools::extract_locally_relevant_dofs<DoFHandler< 1 > >
(const DoFHandler< 1 > & dof_handler,
 IndexSet & dof_set);
 
template
void
DoFTools::extract_locally_relevant_dofs<hp::DoFHandler< 1 > >
(const hp::DoFHandler< 1 > & dof_handler,
 IndexSet & dof_set);

template
void
DoFTools::extract_constant_modes<DoFHandler< 1 > >
(const DoFHandler< 1 > &dof_handler,
 const ComponentMask &selected_components,
 std::vector<std::vector<bool> > &constant_modes);

template
void
DoFTools::extract_constant_modes<hp::DoFHandler< 1 > >
(const hp::DoFHandler< 1 > &dof_handler,
 const ComponentMask &selected_components,
 std::vector<std::vector<bool> > &constant_modes);

template
void
DoFTools::get_active_fe_indices<DoFHandler< 1 > >
(const DoFHandler< 1 > &dof_handler,
 std::vector<unsigned int> &active_fe_indices);

template
void
DoFTools::get_active_fe_indices<hp::DoFHandler< 1 > >
(const hp::DoFHandler< 1 > &dof_handler,
 std::vector<unsigned int> &active_fe_indices);

template
void
DoFTools::get_subdomain_association<DoFHandler< 1 > >
(const DoFHandler< 1 > &dof_handler,
 std::vector<types::subdomain_id> &subdomain_association);
template
void
DoFTools::get_subdomain_association<hp::DoFHandler< 1 > >
(const hp::DoFHandler< 1 > &dof_handler,
 std::vector<types::subdomain_id> &subdomain_association);


template
unsigned int
DoFTools::count_dofs_with_subdomain_association<DoFHandler< 1 > >
(const DoFHandler< 1 > &,
 const types::subdomain_id);
template
IndexSet
DoFTools::dof_indices_with_subdomain_association<DoFHandler< 1 > >
(const DoFHandler< 1 > &,
 const types::subdomain_id);
template
void
DoFTools::count_dofs_with_subdomain_association<DoFHandler< 1 > >
(const DoFHandler< 1 > &,
 const types::subdomain_id,
 std::vector<unsigned int> &);

template
unsigned int
DoFTools::count_dofs_with_subdomain_association<hp::DoFHandler< 1 > >
(const hp::DoFHandler< 1 > &,
 const types::subdomain_id);
template
IndexSet
DoFTools::dof_indices_with_subdomain_association<hp::DoFHandler< 1 > >
(const hp::DoFHandler< 1 > &,
 const types::subdomain_id);
template
void
DoFTools::count_dofs_with_subdomain_association<hp::DoFHandler< 1 > >
(const hp::DoFHandler< 1 > &,
 const types::subdomain_id,
 std::vector<unsigned int> &);

#if  1  < 3
template
void
DoFTools::extract_boundary_dofs<DoFHandler< 1 , 1 +1> >
 (const DoFHandler< 1 , 1 +1> &,
 const ComponentMask &,
 std::vector<bool> &,
 const std::set<types::boundary_id> &);
template
unsigned int
DoFTools::count_dofs_with_subdomain_association<DoFHandler< 1 , 1 +1> >
(const DoFHandler< 1 , 1 +1> &,
 const types::subdomain_id);
template
IndexSet
DoFTools::dof_indices_with_subdomain_association<DoFHandler< 1 , 1 +1> >
(const DoFHandler< 1 , 1 +1> &,
 const types::subdomain_id);
template
void
DoFTools::count_dofs_with_subdomain_association<DoFHandler< 1 , 1 +1> >
(const DoFHandler< 1 , 1 +1> &,
 const types::subdomain_id,
 std::vector<unsigned int> &);

template
unsigned int
DoFTools::count_dofs_with_subdomain_association<hp::DoFHandler< 1 , 1 +1> >
(const hp::DoFHandler< 1 , 1 +1> &,
 const types::subdomain_id);

template
IndexSet
DoFTools::dof_indices_with_subdomain_association<hp::DoFHandler< 1 , 1 +1> >
(const hp::DoFHandler< 1 , 1 +1> &,
 const types::subdomain_id);

template
void
DoFTools::get_subdomain_association<DoFHandler< 1 , 1 +1> >
(const DoFHandler< 1 , 1 +1> &dof_handler,
 std::vector<types::subdomain_id> &subdomain_association);
template
void
DoFTools::get_subdomain_association<hp::DoFHandler< 1 , 1 +1> >
(const hp::DoFHandler< 1 , 1 +1> &dof_handler,
 std::vector<types::subdomain_id> &subdomain_association);

template
void
DoFTools::count_dofs_with_subdomain_association<hp::DoFHandler< 1 , 1 +1> >
(const hp::DoFHandler< 1 , 1 +1> &,
 const types::subdomain_id,
 std::vector<unsigned int> &);
#endif

#if  1  == 3
template
void
DoFTools::extract_boundary_dofs<DoFHandler<1,3> >
 (const DoFHandler<1,3> &,
 const ComponentMask &,
 std::vector<bool> &,
 const std::set<types::boundary_id> &);

template
void
DoFTools::get_subdomain_association<DoFHandler<1,3> >
(const DoFHandler<1,3> &dof_handler,
 std::vector<types::subdomain_id> &subdomain_association);
template
void
DoFTools::get_subdomain_association<hp::DoFHandler<1,3> >
(const hp::DoFHandler<1,3> &dof_handler,
 std::vector<types::subdomain_id> &subdomain_association);

template
unsigned int
DoFTools::count_dofs_with_subdomain_association<DoFHandler<1,3> >
(const DoFHandler<1,3> &,
 const types::subdomain_id);
template
IndexSet
DoFTools::dof_indices_with_subdomain_association<DoFHandler<1,3> >
(const DoFHandler<1,3> &,
 const types::subdomain_id);
template
void
DoFTools::count_dofs_with_subdomain_association<DoFHandler<1,3> >
(const DoFHandler<1,3> &,
 const types::subdomain_id,
 std::vector<unsigned int> &);

template
unsigned int
DoFTools::count_dofs_with_subdomain_association<hp::DoFHandler<1,3> >
(const hp::DoFHandler<1,3> &,
 const types::subdomain_id);
template
IndexSet
DoFTools::dof_indices_with_subdomain_association<hp::DoFHandler<1,3> >
(const hp::DoFHandler<1,3> &,
 const types::subdomain_id);
template
void
DoFTools::count_dofs_with_subdomain_association<hp::DoFHandler<1,3> >
(const hp::DoFHandler<1,3> &,
 const types::subdomain_id,
 std::vector<unsigned int> &);
#endif



template
unsigned int
DoFTools::count_dofs_with_subdomain_association<MGDoFHandler< 1 > >
(const MGDoFHandler< 1 > &,
 const types::subdomain_id);
template
IndexSet
DoFTools::dof_indices_with_subdomain_association<MGDoFHandler< 1 > >
(const MGDoFHandler< 1 > &,
 const types::subdomain_id);
template
void
DoFTools::count_dofs_with_subdomain_association<MGDoFHandler< 1 > >
(const MGDoFHandler< 1 > &,
 const types::subdomain_id,
 std::vector<unsigned int> &);


template
void
DoFTools::count_dofs_per_component<DoFHandler< 1 > > (
 const DoFHandler< 1 >&,
 std::vector<types::global_dof_index>&, bool, std::vector<unsigned int>);

template
void
DoFTools::count_dofs_per_component<hp::DoFHandler< 1 > > (
 const hp::DoFHandler< 1 >&,
 std::vector<types::global_dof_index>&, bool, std::vector<unsigned int>);


#if  1  < 3
template
void
DoFTools::count_dofs_per_component<DoFHandler< 1 ,  1 +1> > (
 const DoFHandler< 1 ,  1 +1>&,
 std::vector<types::global_dof_index>&, bool, std::vector<unsigned int>);

template
void
DoFTools::count_dofs_per_component<hp::DoFHandler< 1 ,  1 +1> > (
 const hp::DoFHandler< 1 ,  1 +1>&,
 std::vector<types::global_dof_index>&, bool, std::vector<unsigned int>);

template
void
DoFTools::extract_level_dofs<DoFHandler< 1 ,  1 +1> >
(const unsigned int level,
 const DoFHandler< 1 ,  1 +1>&,
 const ComponentMask&,
 std::vector<bool>&);

template
void
DoFTools::extract_level_dofs<MGDoFHandler< 1 ,  1 +1> >
(const unsigned int level,
 const MGDoFHandler< 1 ,  1 +1>&,
 const BlockMask&,
 std::vector<bool>&);

#endif


#if  1  == 3
template
void
DoFTools::count_dofs_per_component<DoFHandler<1,3> > (
 const DoFHandler<1,3>&,
 std::vector<types::global_dof_index>&, bool, std::vector<unsigned int>);

template
void
DoFTools::count_dofs_per_component<hp::DoFHandler<1,3> > (
 const hp::DoFHandler<1,3>&,
 std::vector<types::global_dof_index>&, bool, std::vector<unsigned int>);

template
void
DoFTools::extract_level_dofs<DoFHandler<1, 3> >
(const unsigned int level,
 const DoFHandler<1,3>&,
 const ComponentMask &,
 std::vector<bool>&);

template
void
DoFTools::extract_level_dofs<MGDoFHandler<1, 3> >
(const unsigned int level,
 const MGDoFHandler<1,3>&,
 const BlockMask &,
 std::vector<bool>&);

#endif


template
void
DoFTools::count_dofs_per_block<DoFHandler< 1 > > (
 const DoFHandler< 1 >&,
 std::vector<types::global_dof_index>&,
 const std::vector<unsigned int> &);

template
void
DoFTools::count_dofs_per_block<hp::DoFHandler< 1 > > (
 const hp::DoFHandler< 1 >&,
 std::vector<types::global_dof_index>&,
 const std::vector<unsigned int> &);

template
void
DoFTools::count_dofs_per_block<MGDoFHandler< 1 > > (
 const MGDoFHandler< 1 >&,
 std::vector<types::global_dof_index>&,
 const std::vector<unsigned int> &);

template
void
DoFTools::count_dofs_per_component< 1 > (
 const DoFHandler< 1 >&,
 std::vector<types::global_dof_index>&, std::vector<unsigned int>);

template
void
DoFTools::map_dof_to_boundary_indices<DoFHandler< 1 > >
(const DoFHandler< 1 > &,
 const std::set<types::boundary_id> &,
 std::vector<types::global_dof_index> &);

template
void
DoFTools::map_dof_to_boundary_indices<DoFHandler< 1 > >
(const DoFHandler< 1 > &,
 std::vector<types::global_dof_index> &);



template
void
DoFTools::map_dof_to_boundary_indices<hp::DoFHandler< 1 > >
(const hp::DoFHandler< 1 > &,
 const std::set<types::boundary_id> &,
 std::vector<types::global_dof_index> &);

template
void
DoFTools::map_dof_to_boundary_indices<hp::DoFHandler< 1 > >
(const hp::DoFHandler< 1 > &,
 std::vector<types::global_dof_index> &);



template
void
DoFTools::map_dofs_to_support_points< 1 >
(const Mapping< 1 , 1 >&,
 const DoFHandler< 1 >&,
 std::vector<Point< 1 > >&);


template
void
DoFTools::map_dofs_to_support_points< 1 >
(const hp::MappingCollection< 1 , 1 >&,
 const hp::DoFHandler< 1 >&,
 std::vector<Point< 1 > >&);


template
void
DoFTools::map_dofs_to_support_points< 1 >
(const Mapping< 1 , 1 >&,
 const DoFHandler< 1 >&,
 std::map<types::global_dof_index, Point< 1 > >&);


template
void
DoFTools::map_dofs_to_support_points< 1 >
(const hp::MappingCollection< 1 , 1 >&,
 const hp::DoFHandler< 1 >&,
 std::map<types::global_dof_index, Point< 1 > >&);

#if  1  < 3

template
void
DoFTools::map_dofs_to_support_points< 1 , 1 +1>
(const Mapping< 1 , 1 +1>&,
 const DoFHandler< 1 ,  1 +1>&,
 std::vector<Point< 1 +1> >&);

template
void
DoFTools::map_dofs_to_support_points< 1 , 1 +1>
(const hp::MappingCollection< 1 , 1 +1>&,
 const hp::DoFHandler< 1 ,  1 +1>&,
 std::vector<Point< 1 +1> >&);

template
void
DoFTools::map_dofs_to_support_points< 1 , 1 +1>
(const Mapping< 1 , 1 +1>&,
 const DoFHandler< 1 ,  1 +1>&,
 std::map<types::global_dof_index, Point< 1 +1> >&);

template
void
DoFTools::map_dofs_to_support_points< 1 , 1 +1>
(const hp::MappingCollection< 1 , 1 +1>&,
 const hp::DoFHandler< 1 ,  1 +1>&,
 std::map<types::global_dof_index, Point< 1 +1> >&);


template
void
DoFTools::count_dofs_per_block<DoFHandler< 1 , 1 +1> > (
 const DoFHandler< 1 , 1 +1>&,
 std::vector<types::global_dof_index>&,
 const std::vector<unsigned int> &);

template
void
DoFTools::count_dofs_per_block<hp::DoFHandler< 1 , 1 +1> > (
 const hp::DoFHandler< 1 , 1 +1>&,
 std::vector<types::global_dof_index>&,
 const std::vector<unsigned int> &);

template
void
DoFTools::count_dofs_per_block<MGDoFHandler< 1 , 1 +1> > (
 const MGDoFHandler< 1 , 1 +1>&,
 std::vector<types::global_dof_index>&,
 const std::vector<unsigned int> &);

#endif


#if  1  == 3

template
void
DoFTools::map_dofs_to_support_points<1,3>
(const Mapping<1,3>&,
 const DoFHandler<1,3>&,
 std::vector<Point<3> >&);

template
void
DoFTools::count_dofs_per_block<DoFHandler<1,3> > (
 const DoFHandler<1,3>&,
 std::vector<types::global_dof_index>&,
 const std::vector<unsigned int> &);

template
void
DoFTools::count_dofs_per_block<hp::DoFHandler<1,3> > (
 const hp::DoFHandler<1,3>&,
 std::vector<types::global_dof_index>&,
 const std::vector<unsigned int> &);

template
void
DoFTools::count_dofs_per_block<MGDoFHandler<1,3> > (
 const MGDoFHandler<1,3>&,
 std::vector<types::global_dof_index>&,
 const std::vector<unsigned int> &);

#endif

template
void
DoFTools::convert_couplings_to_blocks (
 const DoFHandler< 1 >&, const Table<2, Coupling>&,
 std::vector<Table<2,Coupling> >&);

template
void
DoFTools::convert_couplings_to_blocks (
 const hp::DoFHandler< 1 >&, const Table<2, Coupling>&,
 std::vector<Table<2,Coupling> >&);


#if  1  < 3

template
void
DoFTools::map_dof_to_boundary_indices<DoFHandler< 1 , 1 +1> >
(const DoFHandler< 1 , 1 +1> &,
 const std::set<types::boundary_id> &,
 std::vector<types::global_dof_index> &);

template
void
DoFTools::map_dof_to_boundary_indices<DoFHandler< 1 , 1 +1> >
(const DoFHandler< 1 , 1 +1> &,
 std::vector<types::global_dof_index> &);


template
void
DoFTools::extract_hanging_node_dofs
(const DoFHandler< 1 , 1 +1> &dof_handler,
 std::vector<bool> &selected_dofs);

 template
 void
 DoFTools::map_dof_to_boundary_indices<hp::DoFHandler< 1 , 1 +1> >
 (const hp::DoFHandler< 1 , 1 +1> &,
 const std::set<types::boundary_id> &,
 std::vector<types::global_dof_index> &);

 template
 void
 DoFTools::map_dof_to_boundary_indices<hp::DoFHandler< 1 , 1 +1> >
 (const hp::DoFHandler< 1 , 1 +1> &,
 std::vector<types::global_dof_index> &);

#endif

#if  1  == 3

template
void
DoFTools::map_dof_to_boundary_indices<DoFHandler<1,3> >
(const DoFHandler<1,3> &,
 const std::set<types::boundary_id> &,
 std::vector<types::global_dof_index> &);

template
void
DoFTools::map_dof_to_boundary_indices<DoFHandler<1,3> >
(const DoFHandler<1,3> &,
 std::vector<types::global_dof_index> &);


template
void
DoFTools::extract_hanging_node_dofs
(const DoFHandler<1,3> &dof_handler,
 std::vector<bool> &selected_dofs);

template
void
DoFTools::map_dof_to_boundary_indices<hp::DoFHandler<1,3> >
(const hp::DoFHandler<1,3> &,
 const std::set<unsigned char> &,
 std::vector<types::global_dof_index> &);

template
void
DoFTools::map_dof_to_boundary_indices<hp::DoFHandler<1,3> >
(const hp::DoFHandler<1,3> &,
 std::vector<types::global_dof_index> &);

#endif



template
 void DoFTools::make_vertex_patches (SparsityPattern&, const DoFHandler< 2 >&,
 unsigned int, bool, bool, bool, bool);

 template
 void DoFTools::make_single_patch (SparsityPattern&, const DoFHandler< 2 >&,
 unsigned int, bool);

 template
 void DoFTools::make_child_patches(SparsityPattern&, const DoFHandler< 2 >&,
 unsigned int, bool, bool);

 template
 void DoFTools::make_vertex_patches (SparsityPattern&, const MGDoFHandler< 2 >&,
 unsigned int, bool, bool, bool, bool);

 template
 void DoFTools::make_single_patch (SparsityPattern&, const MGDoFHandler< 2 >&,
 unsigned int, bool);

 template
 void DoFTools::make_child_patches(SparsityPattern&, const MGDoFHandler< 2 >&,
 unsigned int, bool, bool);




template
void
DoFTools::distribute_cell_to_dof_vector<DoFHandler< 2 > >
(const DoFHandler< 2 > &dof_handler,
 const Vector<float> &cell_data,
 Vector<double> &dof_data,
 const unsigned int component);
template
void
DoFTools::distribute_cell_to_dof_vector<DoFHandler< 2 > >
(const DoFHandler< 2 > &dof_handler,
 const Vector<double> &cell_data,
 Vector<double> &dof_data,
 const unsigned int component);

template
void
DoFTools::distribute_cell_to_dof_vector<hp::DoFHandler< 2 > >
(const hp::DoFHandler< 2 > &dof_handler,
 const Vector<float> &cell_data,
 Vector<double> &dof_data,
 const unsigned int component);
template
void
DoFTools::distribute_cell_to_dof_vector<hp::DoFHandler< 2 > >
(const hp::DoFHandler< 2 > &dof_handler,
 const Vector<double> &cell_data,
 Vector<double> &dof_data,
 const unsigned int component);


template void DoFTools::extract_dofs< 2 >
(const DoFHandler< 2 >&,
 const ComponentMask &,
 std::vector<bool>&);

template void DoFTools::extract_dofs< 2 >
(const DoFHandler< 2 >&,
 const BlockMask &,
 std::vector<bool>&);

template void DoFTools::extract_dofs< 2 >
(const hp::DoFHandler< 2 >&,
 const ComponentMask &,
 std::vector<bool>&);

template void DoFTools::extract_dofs< 2 >
(const hp::DoFHandler< 2 >&,
 const BlockMask &,
 std::vector<bool>&);

template void DoFTools::extract_level_dofs<DoFHandler< 2 > >
(const unsigned int level,
 const DoFHandler< 2 >&,
 const ComponentMask &,
 std::vector<bool>&);

template void DoFTools::extract_level_dofs<DoFHandler< 2 > >
(const unsigned int level,
 const DoFHandler< 2 >&,
 const BlockMask &,
 std::vector<bool>&);

#if  2  > 1
template void DoFTools::extract_level_dofs<DoFHandler<1,  2 > >
(const unsigned int level,
 const DoFHandler<1,  2 >&,
 const BlockMask &,
 std::vector<bool>&);
#endif

#if  2  > 2
template void DoFTools::extract_level_dofs<DoFHandler<2,  2 > >
(const unsigned int level,
 const DoFHandler<2,  2 >&,
 const BlockMask &,
 std::vector<bool>&);
#endif

template void DoFTools::extract_level_dofs<MGDoFHandler< 2 > >
(const unsigned int level,
 const MGDoFHandler< 2 >&,
 const ComponentMask &,
 std::vector<bool>&);

template void DoFTools::extract_level_dofs<MGDoFHandler< 2 > >
(const unsigned int level,
 const MGDoFHandler< 2 >&,
 const BlockMask &,
 std::vector<bool>&);

template
void
DoFTools::extract_boundary_dofs<DoFHandler< 2 > >
(const DoFHandler< 2 > &,
 const ComponentMask &,
 std::vector<bool> &,
 const std::set<types::boundary_id> &);
template
void
DoFTools::extract_boundary_dofs<hp::DoFHandler< 2 > >
(const hp::DoFHandler< 2 > &,
 const ComponentMask &,
 std::vector<bool> &,
 const std::set<types::boundary_id> &);

template
void
DoFTools::extract_dofs_with_support_on_boundary<DoFHandler< 2 > >
(const DoFHandler< 2 > &,
 const ComponentMask &,
 std::vector<bool> &,
 const std::set<types::boundary_id> &);
template
void
DoFTools::extract_dofs_with_support_on_boundary<hp::DoFHandler< 2 > >
(const hp::DoFHandler< 2 > &,
 const ComponentMask &,
 std::vector<bool> &,
 const std::set<types::boundary_id> &);

template
void
DoFTools::extract_hanging_node_dofs
(const DoFHandler< 2 > &dof_handler,
 std::vector<bool> &selected_dofs);

template
void
DoFTools::extract_subdomain_dofs<DoFHandler< 2 > >
(const DoFHandler< 2 > &dof_handler,
 const types::subdomain_id subdomain_id,
 std::vector<bool> &selected_dofs);
template
void
DoFTools::extract_subdomain_dofs<hp::DoFHandler< 2 > >
(const hp::DoFHandler< 2 > &dof_handler,
 const types::subdomain_id subdomain_id,
 std::vector<bool> &selected_dofs);

template
void
DoFTools::extract_locally_owned_dofs<DoFHandler< 2 > >
(const DoFHandler< 2 > & dof_handler,
 IndexSet & dof_set);

template
void
DoFTools::extract_locally_owned_dofs<hp::DoFHandler< 2 > >
(const hp::DoFHandler< 2 > & dof_handler,
 IndexSet & dof_set);

template
void
DoFTools::extract_locally_active_dofs<DoFHandler< 2 > >
(const DoFHandler< 2 > & dof_handler,
 IndexSet & dof_set);

template
void
DoFTools::extract_locally_active_dofs<hp::DoFHandler< 2 > >
(const hp::DoFHandler< 2 > & dof_handler,
 IndexSet & dof_set);

template
void
DoFTools::extract_locally_relevant_dofs<DoFHandler< 2 > >
(const DoFHandler< 2 > & dof_handler,
 IndexSet & dof_set);
 
template
void
DoFTools::extract_locally_relevant_dofs<hp::DoFHandler< 2 > >
(const hp::DoFHandler< 2 > & dof_handler,
 IndexSet & dof_set);

template
void
DoFTools::extract_constant_modes<DoFHandler< 2 > >
(const DoFHandler< 2 > &dof_handler,
 const ComponentMask &selected_components,
 std::vector<std::vector<bool> > &constant_modes);

template
void
DoFTools::extract_constant_modes<hp::DoFHandler< 2 > >
(const hp::DoFHandler< 2 > &dof_handler,
 const ComponentMask &selected_components,
 std::vector<std::vector<bool> > &constant_modes);

template
void
DoFTools::get_active_fe_indices<DoFHandler< 2 > >
(const DoFHandler< 2 > &dof_handler,
 std::vector<unsigned int> &active_fe_indices);

template
void
DoFTools::get_active_fe_indices<hp::DoFHandler< 2 > >
(const hp::DoFHandler< 2 > &dof_handler,
 std::vector<unsigned int> &active_fe_indices);

template
void
DoFTools::get_subdomain_association<DoFHandler< 2 > >
(const DoFHandler< 2 > &dof_handler,
 std::vector<types::subdomain_id> &subdomain_association);
template
void
DoFTools::get_subdomain_association<hp::DoFHandler< 2 > >
(const hp::DoFHandler< 2 > &dof_handler,
 std::vector<types::subdomain_id> &subdomain_association);


template
unsigned int
DoFTools::count_dofs_with_subdomain_association<DoFHandler< 2 > >
(const DoFHandler< 2 > &,
 const types::subdomain_id);
template
IndexSet
DoFTools::dof_indices_with_subdomain_association<DoFHandler< 2 > >
(const DoFHandler< 2 > &,
 const types::subdomain_id);
template
void
DoFTools::count_dofs_with_subdomain_association<DoFHandler< 2 > >
(const DoFHandler< 2 > &,
 const types::subdomain_id,
 std::vector<unsigned int> &);

template
unsigned int
DoFTools::count_dofs_with_subdomain_association<hp::DoFHandler< 2 > >
(const hp::DoFHandler< 2 > &,
 const types::subdomain_id);
template
IndexSet
DoFTools::dof_indices_with_subdomain_association<hp::DoFHandler< 2 > >
(const hp::DoFHandler< 2 > &,
 const types::subdomain_id);
template
void
DoFTools::count_dofs_with_subdomain_association<hp::DoFHandler< 2 > >
(const hp::DoFHandler< 2 > &,
 const types::subdomain_id,
 std::vector<unsigned int> &);

#if  2  < 3
template
void
DoFTools::extract_boundary_dofs<DoFHandler< 2 , 2 +1> >
 (const DoFHandler< 2 , 2 +1> &,
 const ComponentMask &,
 std::vector<bool> &,
 const std::set<types::boundary_id> &);
template
unsigned int
DoFTools::count_dofs_with_subdomain_association<DoFHandler< 2 , 2 +1> >
(const DoFHandler< 2 , 2 +1> &,
 const types::subdomain_id);
template
IndexSet
DoFTools::dof_indices_with_subdomain_association<DoFHandler< 2 , 2 +1> >
(const DoFHandler< 2 , 2 +1> &,
 const types::subdomain_id);
template
void
DoFTools::count_dofs_with_subdomain_association<DoFHandler< 2 , 2 +1> >
(const DoFHandler< 2 , 2 +1> &,
 const types::subdomain_id,
 std::vector<unsigned int> &);

template
unsigned int
DoFTools::count_dofs_with_subdomain_association<hp::DoFHandler< 2 , 2 +1> >
(const hp::DoFHandler< 2 , 2 +1> &,
 const types::subdomain_id);

template
IndexSet
DoFTools::dof_indices_with_subdomain_association<hp::DoFHandler< 2 , 2 +1> >
(const hp::DoFHandler< 2 , 2 +1> &,
 const types::subdomain_id);

template
void
DoFTools::get_subdomain_association<DoFHandler< 2 , 2 +1> >
(const DoFHandler< 2 , 2 +1> &dof_handler,
 std::vector<types::subdomain_id> &subdomain_association);
template
void
DoFTools::get_subdomain_association<hp::DoFHandler< 2 , 2 +1> >
(const hp::DoFHandler< 2 , 2 +1> &dof_handler,
 std::vector<types::subdomain_id> &subdomain_association);

template
void
DoFTools::count_dofs_with_subdomain_association<hp::DoFHandler< 2 , 2 +1> >
(const hp::DoFHandler< 2 , 2 +1> &,
 const types::subdomain_id,
 std::vector<unsigned int> &);
#endif

#if  2  == 3
template
void
DoFTools::extract_boundary_dofs<DoFHandler<1,3> >
 (const DoFHandler<1,3> &,
 const ComponentMask &,
 std::vector<bool> &,
 const std::set<types::boundary_id> &);

template
void
DoFTools::get_subdomain_association<DoFHandler<1,3> >
(const DoFHandler<1,3> &dof_handler,
 std::vector<types::subdomain_id> &subdomain_association);
template
void
DoFTools::get_subdomain_association<hp::DoFHandler<1,3> >
(const hp::DoFHandler<1,3> &dof_handler,
 std::vector<types::subdomain_id> &subdomain_association);

template
unsigned int
DoFTools::count_dofs_with_subdomain_association<DoFHandler<1,3> >
(const DoFHandler<1,3> &,
 const types::subdomain_id);
template
IndexSet
DoFTools::dof_indices_with_subdomain_association<DoFHandler<1,3> >
(const DoFHandler<1,3> &,
 const types::subdomain_id);
template
void
DoFTools::count_dofs_with_subdomain_association<DoFHandler<1,3> >
(const DoFHandler<1,3> &,
 const types::subdomain_id,
 std::vector<unsigned int> &);

template
unsigned int
DoFTools::count_dofs_with_subdomain_association<hp::DoFHandler<1,3> >
(const hp::DoFHandler<1,3> &,
 const types::subdomain_id);
template
IndexSet
DoFTools::dof_indices_with_subdomain_association<hp::DoFHandler<1,3> >
(const hp::DoFHandler<1,3> &,
 const types::subdomain_id);
template
void
DoFTools::count_dofs_with_subdomain_association<hp::DoFHandler<1,3> >
(const hp::DoFHandler<1,3> &,
 const types::subdomain_id,
 std::vector<unsigned int> &);
#endif



template
unsigned int
DoFTools::count_dofs_with_subdomain_association<MGDoFHandler< 2 > >
(const MGDoFHandler< 2 > &,
 const types::subdomain_id);
template
IndexSet
DoFTools::dof_indices_with_subdomain_association<MGDoFHandler< 2 > >
(const MGDoFHandler< 2 > &,
 const types::subdomain_id);
template
void
DoFTools::count_dofs_with_subdomain_association<MGDoFHandler< 2 > >
(const MGDoFHandler< 2 > &,
 const types::subdomain_id,
 std::vector<unsigned int> &);


template
void
DoFTools::count_dofs_per_component<DoFHandler< 2 > > (
 const DoFHandler< 2 >&,
 std::vector<types::global_dof_index>&, bool, std::vector<unsigned int>);

template
void
DoFTools::count_dofs_per_component<hp::DoFHandler< 2 > > (
 const hp::DoFHandler< 2 >&,
 std::vector<types::global_dof_index>&, bool, std::vector<unsigned int>);


#if  2  < 3
template
void
DoFTools::count_dofs_per_component<DoFHandler< 2 ,  2 +1> > (
 const DoFHandler< 2 ,  2 +1>&,
 std::vector<types::global_dof_index>&, bool, std::vector<unsigned int>);

template
void
DoFTools::count_dofs_per_component<hp::DoFHandler< 2 ,  2 +1> > (
 const hp::DoFHandler< 2 ,  2 +1>&,
 std::vector<types::global_dof_index>&, bool, std::vector<unsigned int>);

template
void
DoFTools::extract_level_dofs<DoFHandler< 2 ,  2 +1> >
(const unsigned int level,
 const DoFHandler< 2 ,  2 +1>&,
 const ComponentMask&,
 std::vector<bool>&);

template
void
DoFTools::extract_level_dofs<MGDoFHandler< 2 ,  2 +1> >
(const unsigned int level,
 const MGDoFHandler< 2 ,  2 +1>&,
 const BlockMask&,
 std::vector<bool>&);

#endif


#if  2  == 3
template
void
DoFTools::count_dofs_per_component<DoFHandler<1,3> > (
 const DoFHandler<1,3>&,
 std::vector<types::global_dof_index>&, bool, std::vector<unsigned int>);

template
void
DoFTools::count_dofs_per_component<hp::DoFHandler<1,3> > (
 const hp::DoFHandler<1,3>&,
 std::vector<types::global_dof_index>&, bool, std::vector<unsigned int>);

template
void
DoFTools::extract_level_dofs<DoFHandler<1, 3> >
(const unsigned int level,
 const DoFHandler<1,3>&,
 const ComponentMask &,
 std::vector<bool>&);

template
void
DoFTools::extract_level_dofs<MGDoFHandler<1, 3> >
(const unsigned int level,
 const MGDoFHandler<1,3>&,
 const BlockMask &,
 std::vector<bool>&);

#endif


template
void
DoFTools::count_dofs_per_block<DoFHandler< 2 > > (
 const DoFHandler< 2 >&,
 std::vector<types::global_dof_index>&,
 const std::vector<unsigned int> &);

template
void
DoFTools::count_dofs_per_block<hp::DoFHandler< 2 > > (
 const hp::DoFHandler< 2 >&,
 std::vector<types::global_dof_index>&,
 const std::vector<unsigned int> &);

template
void
DoFTools::count_dofs_per_block<MGDoFHandler< 2 > > (
 const MGDoFHandler< 2 >&,
 std::vector<types::global_dof_index>&,
 const std::vector<unsigned int> &);

template
void
DoFTools::count_dofs_per_component< 2 > (
 const DoFHandler< 2 >&,
 std::vector<types::global_dof_index>&, std::vector<unsigned int>);

template
void
DoFTools::map_dof_to_boundary_indices<DoFHandler< 2 > >
(const DoFHandler< 2 > &,
 const std::set<types::boundary_id> &,
 std::vector<types::global_dof_index> &);

template
void
DoFTools::map_dof_to_boundary_indices<DoFHandler< 2 > >
(const DoFHandler< 2 > &,
 std::vector<types::global_dof_index> &);



template
void
DoFTools::map_dof_to_boundary_indices<hp::DoFHandler< 2 > >
(const hp::DoFHandler< 2 > &,
 const std::set<types::boundary_id> &,
 std::vector<types::global_dof_index> &);

template
void
DoFTools::map_dof_to_boundary_indices<hp::DoFHandler< 2 > >
(const hp::DoFHandler< 2 > &,
 std::vector<types::global_dof_index> &);



template
void
DoFTools::map_dofs_to_support_points< 2 >
(const Mapping< 2 , 2 >&,
 const DoFHandler< 2 >&,
 std::vector<Point< 2 > >&);


template
void
DoFTools::map_dofs_to_support_points< 2 >
(const hp::MappingCollection< 2 , 2 >&,
 const hp::DoFHandler< 2 >&,
 std::vector<Point< 2 > >&);


template
void
DoFTools::map_dofs_to_support_points< 2 >
(const Mapping< 2 , 2 >&,
 const DoFHandler< 2 >&,
 std::map<types::global_dof_index, Point< 2 > >&);


template
void
DoFTools::map_dofs_to_support_points< 2 >
(const hp::MappingCollection< 2 , 2 >&,
 const hp::DoFHandler< 2 >&,
 std::map<types::global_dof_index, Point< 2 > >&);

#if  2  < 3

template
void
DoFTools::map_dofs_to_support_points< 2 , 2 +1>
(const Mapping< 2 , 2 +1>&,
 const DoFHandler< 2 ,  2 +1>&,
 std::vector<Point< 2 +1> >&);

template
void
DoFTools::map_dofs_to_support_points< 2 , 2 +1>
(const hp::MappingCollection< 2 , 2 +1>&,
 const hp::DoFHandler< 2 ,  2 +1>&,
 std::vector<Point< 2 +1> >&);

template
void
DoFTools::map_dofs_to_support_points< 2 , 2 +1>
(const Mapping< 2 , 2 +1>&,
 const DoFHandler< 2 ,  2 +1>&,
 std::map<types::global_dof_index, Point< 2 +1> >&);

template
void
DoFTools::map_dofs_to_support_points< 2 , 2 +1>
(const hp::MappingCollection< 2 , 2 +1>&,
 const hp::DoFHandler< 2 ,  2 +1>&,
 std::map<types::global_dof_index, Point< 2 +1> >&);


template
void
DoFTools::count_dofs_per_block<DoFHandler< 2 , 2 +1> > (
 const DoFHandler< 2 , 2 +1>&,
 std::vector<types::global_dof_index>&,
 const std::vector<unsigned int> &);

template
void
DoFTools::count_dofs_per_block<hp::DoFHandler< 2 , 2 +1> > (
 const hp::DoFHandler< 2 , 2 +1>&,
 std::vector<types::global_dof_index>&,
 const std::vector<unsigned int> &);

template
void
DoFTools::count_dofs_per_block<MGDoFHandler< 2 , 2 +1> > (
 const MGDoFHandler< 2 , 2 +1>&,
 std::vector<types::global_dof_index>&,
 const std::vector<unsigned int> &);

#endif


#if  2  == 3

template
void
DoFTools::map_dofs_to_support_points<1,3>
(const Mapping<1,3>&,
 const DoFHandler<1,3>&,
 std::vector<Point<3> >&);

template
void
DoFTools::count_dofs_per_block<DoFHandler<1,3> > (
 const DoFHandler<1,3>&,
 std::vector<types::global_dof_index>&,
 const std::vector<unsigned int> &);

template
void
DoFTools::count_dofs_per_block<hp::DoFHandler<1,3> > (
 const hp::DoFHandler<1,3>&,
 std::vector<types::global_dof_index>&,
 const std::vector<unsigned int> &);

template
void
DoFTools::count_dofs_per_block<MGDoFHandler<1,3> > (
 const MGDoFHandler<1,3>&,
 std::vector<types::global_dof_index>&,
 const std::vector<unsigned int> &);

#endif

template
void
DoFTools::convert_couplings_to_blocks (
 const DoFHandler< 2 >&, const Table<2, Coupling>&,
 std::vector<Table<2,Coupling> >&);

template
void
DoFTools::convert_couplings_to_blocks (
 const hp::DoFHandler< 2 >&, const Table<2, Coupling>&,
 std::vector<Table<2,Coupling> >&);


#if  2  < 3

template
void
DoFTools::map_dof_to_boundary_indices<DoFHandler< 2 , 2 +1> >
(const DoFHandler< 2 , 2 +1> &,
 const std::set<types::boundary_id> &,
 std::vector<types::global_dof_index> &);

template
void
DoFTools::map_dof_to_boundary_indices<DoFHandler< 2 , 2 +1> >
(const DoFHandler< 2 , 2 +1> &,
 std::vector<types::global_dof_index> &);


template
void
DoFTools::extract_hanging_node_dofs
(const DoFHandler< 2 , 2 +1> &dof_handler,
 std::vector<bool> &selected_dofs);

 template
 void
 DoFTools::map_dof_to_boundary_indices<hp::DoFHandler< 2 , 2 +1> >
 (const hp::DoFHandler< 2 , 2 +1> &,
 const std::set<types::boundary_id> &,
 std::vector<types::global_dof_index> &);

 template
 void
 DoFTools::map_dof_to_boundary_indices<hp::DoFHandler< 2 , 2 +1> >
 (const hp::DoFHandler< 2 , 2 +1> &,
 std::vector<types::global_dof_index> &);

#endif

#if  2  == 3

template
void
DoFTools::map_dof_to_boundary_indices<DoFHandler<1,3> >
(const DoFHandler<1,3> &,
 const std::set<types::boundary_id> &,
 std::vector<types::global_dof_index> &);

template
void
DoFTools::map_dof_to_boundary_indices<DoFHandler<1,3> >
(const DoFHandler<1,3> &,
 std::vector<types::global_dof_index> &);


template
void
DoFTools::extract_hanging_node_dofs
(const DoFHandler<1,3> &dof_handler,
 std::vector<bool> &selected_dofs);

template
void
DoFTools::map_dof_to_boundary_indices<hp::DoFHandler<1,3> >
(const hp::DoFHandler<1,3> &,
 const std::set<unsigned char> &,
 std::vector<types::global_dof_index> &);

template
void
DoFTools::map_dof_to_boundary_indices<hp::DoFHandler<1,3> >
(const hp::DoFHandler<1,3> &,
 std::vector<types::global_dof_index> &);

#endif



template
 void DoFTools::make_vertex_patches (SparsityPattern&, const DoFHandler< 3 >&,
 unsigned int, bool, bool, bool, bool);

 template
 void DoFTools::make_single_patch (SparsityPattern&, const DoFHandler< 3 >&,
 unsigned int, bool);

 template
 void DoFTools::make_child_patches(SparsityPattern&, const DoFHandler< 3 >&,
 unsigned int, bool, bool);

 template
 void DoFTools::make_vertex_patches (SparsityPattern&, const MGDoFHandler< 3 >&,
 unsigned int, bool, bool, bool, bool);

 template
 void DoFTools::make_single_patch (SparsityPattern&, const MGDoFHandler< 3 >&,
 unsigned int, bool);

 template
 void DoFTools::make_child_patches(SparsityPattern&, const MGDoFHandler< 3 >&,
 unsigned int, bool, bool);




template
void
DoFTools::distribute_cell_to_dof_vector<DoFHandler< 3 > >
(const DoFHandler< 3 > &dof_handler,
 const Vector<float> &cell_data,
 Vector<double> &dof_data,
 const unsigned int component);
template
void
DoFTools::distribute_cell_to_dof_vector<DoFHandler< 3 > >
(const DoFHandler< 3 > &dof_handler,
 const Vector<double> &cell_data,
 Vector<double> &dof_data,
 const unsigned int component);

template
void
DoFTools::distribute_cell_to_dof_vector<hp::DoFHandler< 3 > >
(const hp::DoFHandler< 3 > &dof_handler,
 const Vector<float> &cell_data,
 Vector<double> &dof_data,
 const unsigned int component);
template
void
DoFTools::distribute_cell_to_dof_vector<hp::DoFHandler< 3 > >
(const hp::DoFHandler< 3 > &dof_handler,
 const Vector<double> &cell_data,
 Vector<double> &dof_data,
 const unsigned int component);


template void DoFTools::extract_dofs< 3 >
(const DoFHandler< 3 >&,
 const ComponentMask &,
 std::vector<bool>&);

template void DoFTools::extract_dofs< 3 >
(const DoFHandler< 3 >&,
 const BlockMask &,
 std::vector<bool>&);

template void DoFTools::extract_dofs< 3 >
(const hp::DoFHandler< 3 >&,
 const ComponentMask &,
 std::vector<bool>&);

template void DoFTools::extract_dofs< 3 >
(const hp::DoFHandler< 3 >&,
 const BlockMask &,
 std::vector<bool>&);

template void DoFTools::extract_level_dofs<DoFHandler< 3 > >
(const unsigned int level,
 const DoFHandler< 3 >&,
 const ComponentMask &,
 std::vector<bool>&);

template void DoFTools::extract_level_dofs<DoFHandler< 3 > >
(const unsigned int level,
 const DoFHandler< 3 >&,
 const BlockMask &,
 std::vector<bool>&);

#if  3  > 1
template void DoFTools::extract_level_dofs<DoFHandler<1,  3 > >
(const unsigned int level,
 const DoFHandler<1,  3 >&,
 const BlockMask &,
 std::vector<bool>&);
#endif

#if  3  > 2
template void DoFTools::extract_level_dofs<DoFHandler<2,  3 > >
(const unsigned int level,
 const DoFHandler<2,  3 >&,
 const BlockMask &,
 std::vector<bool>&);
#endif

template void DoFTools::extract_level_dofs<MGDoFHandler< 3 > >
(const unsigned int level,
 const MGDoFHandler< 3 >&,
 const ComponentMask &,
 std::vector<bool>&);

template void DoFTools::extract_level_dofs<MGDoFHandler< 3 > >
(const unsigned int level,
 const MGDoFHandler< 3 >&,
 const BlockMask &,
 std::vector<bool>&);

template
void
DoFTools::extract_boundary_dofs<DoFHandler< 3 > >
(const DoFHandler< 3 > &,
 const ComponentMask &,
 std::vector<bool> &,
 const std::set<types::boundary_id> &);
template
void
DoFTools::extract_boundary_dofs<hp::DoFHandler< 3 > >
(const hp::DoFHandler< 3 > &,
 const ComponentMask &,
 std::vector<bool> &,
 const std::set<types::boundary_id> &);

template
void
DoFTools::extract_dofs_with_support_on_boundary<DoFHandler< 3 > >
(const DoFHandler< 3 > &,
 const ComponentMask &,
 std::vector<bool> &,
 const std::set<types::boundary_id> &);
template
void
DoFTools::extract_dofs_with_support_on_boundary<hp::DoFHandler< 3 > >
(const hp::DoFHandler< 3 > &,
 const ComponentMask &,
 std::vector<bool> &,
 const std::set<types::boundary_id> &);

template
void
DoFTools::extract_hanging_node_dofs
(const DoFHandler< 3 > &dof_handler,
 std::vector<bool> &selected_dofs);

template
void
DoFTools::extract_subdomain_dofs<DoFHandler< 3 > >
(const DoFHandler< 3 > &dof_handler,
 const types::subdomain_id subdomain_id,
 std::vector<bool> &selected_dofs);
template
void
DoFTools::extract_subdomain_dofs<hp::DoFHandler< 3 > >
(const hp::DoFHandler< 3 > &dof_handler,
 const types::subdomain_id subdomain_id,
 std::vector<bool> &selected_dofs);

template
void
DoFTools::extract_locally_owned_dofs<DoFHandler< 3 > >
(const DoFHandler< 3 > & dof_handler,
 IndexSet & dof_set);

template
void
DoFTools::extract_locally_owned_dofs<hp::DoFHandler< 3 > >
(const hp::DoFHandler< 3 > & dof_handler,
 IndexSet & dof_set);

template
void
DoFTools::extract_locally_active_dofs<DoFHandler< 3 > >
(const DoFHandler< 3 > & dof_handler,
 IndexSet & dof_set);

template
void
DoFTools::extract_locally_active_dofs<hp::DoFHandler< 3 > >
(const hp::DoFHandler< 3 > & dof_handler,
 IndexSet & dof_set);

template
void
DoFTools::extract_locally_relevant_dofs<DoFHandler< 3 > >
(const DoFHandler< 3 > & dof_handler,
 IndexSet & dof_set);
 
template
void
DoFTools::extract_locally_relevant_dofs<hp::DoFHandler< 3 > >
(const hp::DoFHandler< 3 > & dof_handler,
 IndexSet & dof_set);

template
void
DoFTools::extract_constant_modes<DoFHandler< 3 > >
(const DoFHandler< 3 > &dof_handler,
 const ComponentMask &selected_components,
 std::vector<std::vector<bool> > &constant_modes);

template
void
DoFTools::extract_constant_modes<hp::DoFHandler< 3 > >
(const hp::DoFHandler< 3 > &dof_handler,
 const ComponentMask &selected_components,
 std::vector<std::vector<bool> > &constant_modes);

template
void
DoFTools::get_active_fe_indices<DoFHandler< 3 > >
(const DoFHandler< 3 > &dof_handler,
 std::vector<unsigned int> &active_fe_indices);

template
void
DoFTools::get_active_fe_indices<hp::DoFHandler< 3 > >
(const hp::DoFHandler< 3 > &dof_handler,
 std::vector<unsigned int> &active_fe_indices);

template
void
DoFTools::get_subdomain_association<DoFHandler< 3 > >
(const DoFHandler< 3 > &dof_handler,
 std::vector<types::subdomain_id> &subdomain_association);
template
void
DoFTools::get_subdomain_association<hp::DoFHandler< 3 > >
(const hp::DoFHandler< 3 > &dof_handler,
 std::vector<types::subdomain_id> &subdomain_association);


template
unsigned int
DoFTools::count_dofs_with_subdomain_association<DoFHandler< 3 > >
(const DoFHandler< 3 > &,
 const types::subdomain_id);
template
IndexSet
DoFTools::dof_indices_with_subdomain_association<DoFHandler< 3 > >
(const DoFHandler< 3 > &,
 const types::subdomain_id);
template
void
DoFTools::count_dofs_with_subdomain_association<DoFHandler< 3 > >
(const DoFHandler< 3 > &,
 const types::subdomain_id,
 std::vector<unsigned int> &);

template
unsigned int
DoFTools::count_dofs_with_subdomain_association<hp::DoFHandler< 3 > >
(const hp::DoFHandler< 3 > &,
 const types::subdomain_id);
template
IndexSet
DoFTools::dof_indices_with_subdomain_association<hp::DoFHandler< 3 > >
(const hp::DoFHandler< 3 > &,
 const types::subdomain_id);
template
void
DoFTools::count_dofs_with_subdomain_association<hp::DoFHandler< 3 > >
(const hp::DoFHandler< 3 > &,
 const types::subdomain_id,
 std::vector<unsigned int> &);

#if  3  < 3
template
void
DoFTools::extract_boundary_dofs<DoFHandler< 3 , 3 +1> >
 (const DoFHandler< 3 , 3 +1> &,
 const ComponentMask &,
 std::vector<bool> &,
 const std::set<types::boundary_id> &);
template
unsigned int
DoFTools::count_dofs_with_subdomain_association<DoFHandler< 3 , 3 +1> >
(const DoFHandler< 3 , 3 +1> &,
 const types::subdomain_id);
template
IndexSet
DoFTools::dof_indices_with_subdomain_association<DoFHandler< 3 , 3 +1> >
(const DoFHandler< 3 , 3 +1> &,
 const types::subdomain_id);
template
void
DoFTools::count_dofs_with_subdomain_association<DoFHandler< 3 , 3 +1> >
(const DoFHandler< 3 , 3 +1> &,
 const types::subdomain_id,
 std::vector<unsigned int> &);

template
unsigned int
DoFTools::count_dofs_with_subdomain_association<hp::DoFHandler< 3 , 3 +1> >
(const hp::DoFHandler< 3 , 3 +1> &,
 const types::subdomain_id);

template
IndexSet
DoFTools::dof_indices_with_subdomain_association<hp::DoFHandler< 3 , 3 +1> >
(const hp::DoFHandler< 3 , 3 +1> &,
 const types::subdomain_id);

template
void
DoFTools::get_subdomain_association<DoFHandler< 3 , 3 +1> >
(const DoFHandler< 3 , 3 +1> &dof_handler,
 std::vector<types::subdomain_id> &subdomain_association);
template
void
DoFTools::get_subdomain_association<hp::DoFHandler< 3 , 3 +1> >
(const hp::DoFHandler< 3 , 3 +1> &dof_handler,
 std::vector<types::subdomain_id> &subdomain_association);

template
void
DoFTools::count_dofs_with_subdomain_association<hp::DoFHandler< 3 , 3 +1> >
(const hp::DoFHandler< 3 , 3 +1> &,
 const types::subdomain_id,
 std::vector<unsigned int> &);
#endif

#if  3  == 3
template
void
DoFTools::extract_boundary_dofs<DoFHandler<1,3> >
 (const DoFHandler<1,3> &,
 const ComponentMask &,
 std::vector<bool> &,
 const std::set<types::boundary_id> &);

template
void
DoFTools::get_subdomain_association<DoFHandler<1,3> >
(const DoFHandler<1,3> &dof_handler,
 std::vector<types::subdomain_id> &subdomain_association);
template
void
DoFTools::get_subdomain_association<hp::DoFHandler<1,3> >
(const hp::DoFHandler<1,3> &dof_handler,
 std::vector<types::subdomain_id> &subdomain_association);

template
unsigned int
DoFTools::count_dofs_with_subdomain_association<DoFHandler<1,3> >
(const DoFHandler<1,3> &,
 const types::subdomain_id);
template
IndexSet
DoFTools::dof_indices_with_subdomain_association<DoFHandler<1,3> >
(const DoFHandler<1,3> &,
 const types::subdomain_id);
template
void
DoFTools::count_dofs_with_subdomain_association<DoFHandler<1,3> >
(const DoFHandler<1,3> &,
 const types::subdomain_id,
 std::vector<unsigned int> &);

template
unsigned int
DoFTools::count_dofs_with_subdomain_association<hp::DoFHandler<1,3> >
(const hp::DoFHandler<1,3> &,
 const types::subdomain_id);
template
IndexSet
DoFTools::dof_indices_with_subdomain_association<hp::DoFHandler<1,3> >
(const hp::DoFHandler<1,3> &,
 const types::subdomain_id);
template
void
DoFTools::count_dofs_with_subdomain_association<hp::DoFHandler<1,3> >
(const hp::DoFHandler<1,3> &,
 const types::subdomain_id,
 std::vector<unsigned int> &);
#endif



template
unsigned int
DoFTools::count_dofs_with_subdomain_association<MGDoFHandler< 3 > >
(const MGDoFHandler< 3 > &,
 const types::subdomain_id);
template
IndexSet
DoFTools::dof_indices_with_subdomain_association<MGDoFHandler< 3 > >
(const MGDoFHandler< 3 > &,
 const types::subdomain_id);
template
void
DoFTools::count_dofs_with_subdomain_association<MGDoFHandler< 3 > >
(const MGDoFHandler< 3 > &,
 const types::subdomain_id,
 std::vector<unsigned int> &);


template
void
DoFTools::count_dofs_per_component<DoFHandler< 3 > > (
 const DoFHandler< 3 >&,
 std::vector<types::global_dof_index>&, bool, std::vector<unsigned int>);

template
void
DoFTools::count_dofs_per_component<hp::DoFHandler< 3 > > (
 const hp::DoFHandler< 3 >&,
 std::vector<types::global_dof_index>&, bool, std::vector<unsigned int>);


#if  3  < 3
template
void
DoFTools::count_dofs_per_component<DoFHandler< 3 ,  3 +1> > (
 const DoFHandler< 3 ,  3 +1>&,
 std::vector<types::global_dof_index>&, bool, std::vector<unsigned int>);

template
void
DoFTools::count_dofs_per_component<hp::DoFHandler< 3 ,  3 +1> > (
 const hp::DoFHandler< 3 ,  3 +1>&,
 std::vector<types::global_dof_index>&, bool, std::vector<unsigned int>);

template
void
DoFTools::extract_level_dofs<DoFHandler< 3 ,  3 +1> >
(const unsigned int level,
 const DoFHandler< 3 ,  3 +1>&,
 const ComponentMask&,
 std::vector<bool>&);

template
void
DoFTools::extract_level_dofs<MGDoFHandler< 3 ,  3 +1> >
(const unsigned int level,
 const MGDoFHandler< 3 ,  3 +1>&,
 const BlockMask&,
 std::vector<bool>&);

#endif


#if  3  == 3
template
void
DoFTools::count_dofs_per_component<DoFHandler<1,3> > (
 const DoFHandler<1,3>&,
 std::vector<types::global_dof_index>&, bool, std::vector<unsigned int>);

template
void
DoFTools::count_dofs_per_component<hp::DoFHandler<1,3> > (
 const hp::DoFHandler<1,3>&,
 std::vector<types::global_dof_index>&, bool, std::vector<unsigned int>);

template
void
DoFTools::extract_level_dofs<DoFHandler<1, 3> >
(const unsigned int level,
 const DoFHandler<1,3>&,
 const ComponentMask &,
 std::vector<bool>&);

template
void
DoFTools::extract_level_dofs<MGDoFHandler<1, 3> >
(const unsigned int level,
 const MGDoFHandler<1,3>&,
 const BlockMask &,
 std::vector<bool>&);

#endif


template
void
DoFTools::count_dofs_per_block<DoFHandler< 3 > > (
 const DoFHandler< 3 >&,
 std::vector<types::global_dof_index>&,
 const std::vector<unsigned int> &);

template
void
DoFTools::count_dofs_per_block<hp::DoFHandler< 3 > > (
 const hp::DoFHandler< 3 >&,
 std::vector<types::global_dof_index>&,
 const std::vector<unsigned int> &);

template
void
DoFTools::count_dofs_per_block<MGDoFHandler< 3 > > (
 const MGDoFHandler< 3 >&,
 std::vector<types::global_dof_index>&,
 const std::vector<unsigned int> &);

template
void
DoFTools::count_dofs_per_component< 3 > (
 const DoFHandler< 3 >&,
 std::vector<types::global_dof_index>&, std::vector<unsigned int>);

template
void
DoFTools::map_dof_to_boundary_indices<DoFHandler< 3 > >
(const DoFHandler< 3 > &,
 const std::set<types::boundary_id> &,
 std::vector<types::global_dof_index> &);

template
void
DoFTools::map_dof_to_boundary_indices<DoFHandler< 3 > >
(const DoFHandler< 3 > &,
 std::vector<types::global_dof_index> &);



template
void
DoFTools::map_dof_to_boundary_indices<hp::DoFHandler< 3 > >
(const hp::DoFHandler< 3 > &,
 const std::set<types::boundary_id> &,
 std::vector<types::global_dof_index> &);

template
void
DoFTools::map_dof_to_boundary_indices<hp::DoFHandler< 3 > >
(const hp::DoFHandler< 3 > &,
 std::vector<types::global_dof_index> &);



template
void
DoFTools::map_dofs_to_support_points< 3 >
(const Mapping< 3 , 3 >&,
 const DoFHandler< 3 >&,
 std::vector<Point< 3 > >&);


template
void
DoFTools::map_dofs_to_support_points< 3 >
(const hp::MappingCollection< 3 , 3 >&,
 const hp::DoFHandler< 3 >&,
 std::vector<Point< 3 > >&);


template
void
DoFTools::map_dofs_to_support_points< 3 >
(const Mapping< 3 , 3 >&,
 const DoFHandler< 3 >&,
 std::map<types::global_dof_index, Point< 3 > >&);


template
void
DoFTools::map_dofs_to_support_points< 3 >
(const hp::MappingCollection< 3 , 3 >&,
 const hp::DoFHandler< 3 >&,
 std::map<types::global_dof_index, Point< 3 > >&);

#if  3  < 3

template
void
DoFTools::map_dofs_to_support_points< 3 , 3 +1>
(const Mapping< 3 , 3 +1>&,
 const DoFHandler< 3 ,  3 +1>&,
 std::vector<Point< 3 +1> >&);

template
void
DoFTools::map_dofs_to_support_points< 3 , 3 +1>
(const hp::MappingCollection< 3 , 3 +1>&,
 const hp::DoFHandler< 3 ,  3 +1>&,
 std::vector<Point< 3 +1> >&);

template
void
DoFTools::map_dofs_to_support_points< 3 , 3 +1>
(const Mapping< 3 , 3 +1>&,
 const DoFHandler< 3 ,  3 +1>&,
 std::map<types::global_dof_index, Point< 3 +1> >&);

template
void
DoFTools::map_dofs_to_support_points< 3 , 3 +1>
(const hp::MappingCollection< 3 , 3 +1>&,
 const hp::DoFHandler< 3 ,  3 +1>&,
 std::map<types::global_dof_index, Point< 3 +1> >&);


template
void
DoFTools::count_dofs_per_block<DoFHandler< 3 , 3 +1> > (
 const DoFHandler< 3 , 3 +1>&,
 std::vector<types::global_dof_index>&,
 const std::vector<unsigned int> &);

template
void
DoFTools::count_dofs_per_block<hp::DoFHandler< 3 , 3 +1> > (
 const hp::DoFHandler< 3 , 3 +1>&,
 std::vector<types::global_dof_index>&,
 const std::vector<unsigned int> &);

template
void
DoFTools::count_dofs_per_block<MGDoFHandler< 3 , 3 +1> > (
 const MGDoFHandler< 3 , 3 +1>&,
 std::vector<types::global_dof_index>&,
 const std::vector<unsigned int> &);

#endif


#if  3  == 3

template
void
DoFTools::map_dofs_to_support_points<1,3>
(const Mapping<1,3>&,
 const DoFHandler<1,3>&,
 std::vector<Point<3> >&);

template
void
DoFTools::count_dofs_per_block<DoFHandler<1,3> > (
 const DoFHandler<1,3>&,
 std::vector<types::global_dof_index>&,
 const std::vector<unsigned int> &);

template
void
DoFTools::count_dofs_per_block<hp::DoFHandler<1,3> > (
 const hp::DoFHandler<1,3>&,
 std::vector<types::global_dof_index>&,
 const std::vector<unsigned int> &);

template
void
DoFTools::count_dofs_per_block<MGDoFHandler<1,3> > (
 const MGDoFHandler<1,3>&,
 std::vector<types::global_dof_index>&,
 const std::vector<unsigned int> &);

#endif

template
void
DoFTools::convert_couplings_to_blocks (
 const DoFHandler< 3 >&, const Table<2, Coupling>&,
 std::vector<Table<2,Coupling> >&);

template
void
DoFTools::convert_couplings_to_blocks (
 const hp::DoFHandler< 3 >&, const Table<2, Coupling>&,
 std::vector<Table<2,Coupling> >&);


#if  3  < 3

template
void
DoFTools::map_dof_to_boundary_indices<DoFHandler< 3 , 3 +1> >
(const DoFHandler< 3 , 3 +1> &,
 const std::set<types::boundary_id> &,
 std::vector<types::global_dof_index> &);

template
void
DoFTools::map_dof_to_boundary_indices<DoFHandler< 3 , 3 +1> >
(const DoFHandler< 3 , 3 +1> &,
 std::vector<types::global_dof_index> &);


template
void
DoFTools::extract_hanging_node_dofs
(const DoFHandler< 3 , 3 +1> &dof_handler,
 std::vector<bool> &selected_dofs);

 template
 void
 DoFTools::map_dof_to_boundary_indices<hp::DoFHandler< 3 , 3 +1> >
 (const hp::DoFHandler< 3 , 3 +1> &,
 const std::set<types::boundary_id> &,
 std::vector<types::global_dof_index> &);

 template
 void
 DoFTools::map_dof_to_boundary_indices<hp::DoFHandler< 3 , 3 +1> >
 (const hp::DoFHandler< 3 , 3 +1> &,
 std::vector<types::global_dof_index> &);

#endif

#if  3  == 3

template
void
DoFTools::map_dof_to_boundary_indices<DoFHandler<1,3> >
(const DoFHandler<1,3> &,
 const std::set<types::boundary_id> &,
 std::vector<types::global_dof_index> &);

template
void
DoFTools::map_dof_to_boundary_indices<DoFHandler<1,3> >
(const DoFHandler<1,3> &,
 std::vector<types::global_dof_index> &);


template
void
DoFTools::extract_hanging_node_dofs
(const DoFHandler<1,3> &dof_handler,
 std::vector<bool> &selected_dofs);

template
void
DoFTools::map_dof_to_boundary_indices<hp::DoFHandler<1,3> >
(const hp::DoFHandler<1,3> &,
 const std::set<unsigned char> &,
 std::vector<types::global_dof_index> &);

template
void
DoFTools::map_dof_to_boundary_indices<hp::DoFHandler<1,3> >
(const hp::DoFHandler<1,3> &,
 std::vector<types::global_dof_index> &);

#endif



