#if  1  <=  1 
 namespace DoFRenumbering
 {
 namespace boost
 {

 }



 template
 void Cuthill_McKee<DoFHandler< 1 , 1 > >
 (DoFHandler< 1 , 1 >&,
 const bool,
 const bool,
 const std::vector<types::global_dof_index>&);

 template
 void
 compute_Cuthill_McKee<DoFHandler< 1 , 1 > >
 (std::vector<types::global_dof_index>&,
 const DoFHandler< 1 , 1 >&,
 const bool,
 const bool,
 const std::vector<types::global_dof_index>&);

 template
 void component_wise< 1 , 1 >
 (DoFHandler< 1 , 1 >&,
 const std::vector<unsigned int>&);

 template
 void block_wise< 1 , 1 >
 (DoFHandler< 1 , 1 >&);

 template
 void subdomain_wise<DoFHandler< 1 , 1 > >
 (DoFHandler< 1 , 1 > &);

 template
 void
 compute_subdomain_wise (std::vector<types::global_dof_index> &new_dof_indices,
 const DoFHandler< 1 , 1 > &dof_handler);

 } 
#endif
 
#if  1  <=  2 
 namespace DoFRenumbering
 {
 namespace boost
 {

 }



 template
 void Cuthill_McKee<DoFHandler< 1 , 2 > >
 (DoFHandler< 1 , 2 >&,
 const bool,
 const bool,
 const std::vector<types::global_dof_index>&);

 template
 void
 compute_Cuthill_McKee<DoFHandler< 1 , 2 > >
 (std::vector<types::global_dof_index>&,
 const DoFHandler< 1 , 2 >&,
 const bool,
 const bool,
 const std::vector<types::global_dof_index>&);

 template
 void component_wise< 1 , 2 >
 (DoFHandler< 1 , 2 >&,
 const std::vector<unsigned int>&);

 template
 void block_wise< 1 , 2 >
 (DoFHandler< 1 , 2 >&);

 template
 void subdomain_wise<DoFHandler< 1 , 2 > >
 (DoFHandler< 1 , 2 > &);

 template
 void
 compute_subdomain_wise (std::vector<types::global_dof_index> &new_dof_indices,
 const DoFHandler< 1 , 2 > &dof_handler);

 } 
#endif
 
#if  1  <=  3 
 namespace DoFRenumbering
 {
 namespace boost
 {

 }



 template
 void Cuthill_McKee<DoFHandler< 1 , 3 > >
 (DoFHandler< 1 , 3 >&,
 const bool,
 const bool,
 const std::vector<types::global_dof_index>&);

 template
 void
 compute_Cuthill_McKee<DoFHandler< 1 , 3 > >
 (std::vector<types::global_dof_index>&,
 const DoFHandler< 1 , 3 >&,
 const bool,
 const bool,
 const std::vector<types::global_dof_index>&);

 template
 void component_wise< 1 , 3 >
 (DoFHandler< 1 , 3 >&,
 const std::vector<unsigned int>&);

 template
 void block_wise< 1 , 3 >
 (DoFHandler< 1 , 3 >&);

 template
 void subdomain_wise<DoFHandler< 1 , 3 > >
 (DoFHandler< 1 , 3 > &);

 template
 void
 compute_subdomain_wise (std::vector<types::global_dof_index> &new_dof_indices,
 const DoFHandler< 1 , 3 > &dof_handler);

 } 
#endif
 
#if  2  <=  1 
 namespace DoFRenumbering
 {
 namespace boost
 {

 }



 template
 void Cuthill_McKee<DoFHandler< 2 , 1 > >
 (DoFHandler< 2 , 1 >&,
 const bool,
 const bool,
 const std::vector<types::global_dof_index>&);

 template
 void
 compute_Cuthill_McKee<DoFHandler< 2 , 1 > >
 (std::vector<types::global_dof_index>&,
 const DoFHandler< 2 , 1 >&,
 const bool,
 const bool,
 const std::vector<types::global_dof_index>&);

 template
 void component_wise< 2 , 1 >
 (DoFHandler< 2 , 1 >&,
 const std::vector<unsigned int>&);

 template
 void block_wise< 2 , 1 >
 (DoFHandler< 2 , 1 >&);

 template
 void subdomain_wise<DoFHandler< 2 , 1 > >
 (DoFHandler< 2 , 1 > &);

 template
 void
 compute_subdomain_wise (std::vector<types::global_dof_index> &new_dof_indices,
 const DoFHandler< 2 , 1 > &dof_handler);

 } 
#endif
 
#if  2  <=  2 
 namespace DoFRenumbering
 {
 namespace boost
 {

 }



 template
 void Cuthill_McKee<DoFHandler< 2 , 2 > >
 (DoFHandler< 2 , 2 >&,
 const bool,
 const bool,
 const std::vector<types::global_dof_index>&);

 template
 void
 compute_Cuthill_McKee<DoFHandler< 2 , 2 > >
 (std::vector<types::global_dof_index>&,
 const DoFHandler< 2 , 2 >&,
 const bool,
 const bool,
 const std::vector<types::global_dof_index>&);

 template
 void component_wise< 2 , 2 >
 (DoFHandler< 2 , 2 >&,
 const std::vector<unsigned int>&);

 template
 void block_wise< 2 , 2 >
 (DoFHandler< 2 , 2 >&);

 template
 void subdomain_wise<DoFHandler< 2 , 2 > >
 (DoFHandler< 2 , 2 > &);

 template
 void
 compute_subdomain_wise (std::vector<types::global_dof_index> &new_dof_indices,
 const DoFHandler< 2 , 2 > &dof_handler);

 } 
#endif
 
#if  2  <=  3 
 namespace DoFRenumbering
 {
 namespace boost
 {

 }



 template
 void Cuthill_McKee<DoFHandler< 2 , 3 > >
 (DoFHandler< 2 , 3 >&,
 const bool,
 const bool,
 const std::vector<types::global_dof_index>&);

 template
 void
 compute_Cuthill_McKee<DoFHandler< 2 , 3 > >
 (std::vector<types::global_dof_index>&,
 const DoFHandler< 2 , 3 >&,
 const bool,
 const bool,
 const std::vector<types::global_dof_index>&);

 template
 void component_wise< 2 , 3 >
 (DoFHandler< 2 , 3 >&,
 const std::vector<unsigned int>&);

 template
 void block_wise< 2 , 3 >
 (DoFHandler< 2 , 3 >&);

 template
 void subdomain_wise<DoFHandler< 2 , 3 > >
 (DoFHandler< 2 , 3 > &);

 template
 void
 compute_subdomain_wise (std::vector<types::global_dof_index> &new_dof_indices,
 const DoFHandler< 2 , 3 > &dof_handler);

 } 
#endif
 
#if  3  <=  1 
 namespace DoFRenumbering
 {
 namespace boost
 {

 }



 template
 void Cuthill_McKee<DoFHandler< 3 , 1 > >
 (DoFHandler< 3 , 1 >&,
 const bool,
 const bool,
 const std::vector<types::global_dof_index>&);

 template
 void
 compute_Cuthill_McKee<DoFHandler< 3 , 1 > >
 (std::vector<types::global_dof_index>&,
 const DoFHandler< 3 , 1 >&,
 const bool,
 const bool,
 const std::vector<types::global_dof_index>&);

 template
 void component_wise< 3 , 1 >
 (DoFHandler< 3 , 1 >&,
 const std::vector<unsigned int>&);

 template
 void block_wise< 3 , 1 >
 (DoFHandler< 3 , 1 >&);

 template
 void subdomain_wise<DoFHandler< 3 , 1 > >
 (DoFHandler< 3 , 1 > &);

 template
 void
 compute_subdomain_wise (std::vector<types::global_dof_index> &new_dof_indices,
 const DoFHandler< 3 , 1 > &dof_handler);

 } 
#endif
 
#if  3  <=  2 
 namespace DoFRenumbering
 {
 namespace boost
 {

 }



 template
 void Cuthill_McKee<DoFHandler< 3 , 2 > >
 (DoFHandler< 3 , 2 >&,
 const bool,
 const bool,
 const std::vector<types::global_dof_index>&);

 template
 void
 compute_Cuthill_McKee<DoFHandler< 3 , 2 > >
 (std::vector<types::global_dof_index>&,
 const DoFHandler< 3 , 2 >&,
 const bool,
 const bool,
 const std::vector<types::global_dof_index>&);

 template
 void component_wise< 3 , 2 >
 (DoFHandler< 3 , 2 >&,
 const std::vector<unsigned int>&);

 template
 void block_wise< 3 , 2 >
 (DoFHandler< 3 , 2 >&);

 template
 void subdomain_wise<DoFHandler< 3 , 2 > >
 (DoFHandler< 3 , 2 > &);

 template
 void
 compute_subdomain_wise (std::vector<types::global_dof_index> &new_dof_indices,
 const DoFHandler< 3 , 2 > &dof_handler);

 } 
#endif
 
#if  3  <=  3 
 namespace DoFRenumbering
 {
 namespace boost
 {

 }



 template
 void Cuthill_McKee<DoFHandler< 3 , 3 > >
 (DoFHandler< 3 , 3 >&,
 const bool,
 const bool,
 const std::vector<types::global_dof_index>&);

 template
 void
 compute_Cuthill_McKee<DoFHandler< 3 , 3 > >
 (std::vector<types::global_dof_index>&,
 const DoFHandler< 3 , 3 >&,
 const bool,
 const bool,
 const std::vector<types::global_dof_index>&);

 template
 void component_wise< 3 , 3 >
 (DoFHandler< 3 , 3 >&,
 const std::vector<unsigned int>&);

 template
 void block_wise< 3 , 3 >
 (DoFHandler< 3 , 3 >&);

 template
 void subdomain_wise<DoFHandler< 3 , 3 > >
 (DoFHandler< 3 , 3 > &);

 template
 void
 compute_subdomain_wise (std::vector<types::global_dof_index> &new_dof_indices,
 const DoFHandler< 3 , 3 > &dof_handler);

 } 
#endif
 
#if  1  ==  1 
namespace DoFRenumbering
 {
 namespace boost
 {

 template
 void
 Cuthill_McKee (DoFHandler< 1 > &, bool, bool);

 template
 void
 compute_Cuthill_McKee (std::vector<dealii::types::global_dof_index> &,
 const DoFHandler< 1 > &, bool, bool);

 template
 void
 king_ordering (DoFHandler< 1 > &, bool, bool);

 template
 void
 compute_king_ordering (std::vector<dealii::types::global_dof_index> &,
 const DoFHandler< 1 > &, bool, bool);

 template
 void
 minimum_degree (DoFHandler< 1 > &, bool, bool);

 template
 void
 compute_minimum_degree (std::vector<dealii::types::global_dof_index> &,
 const DoFHandler< 1 > &, bool, bool);


 template
 void
 Cuthill_McKee (hp::DoFHandler< 1 > &, bool, bool);

 template
 void
 compute_Cuthill_McKee (std::vector<dealii::types::global_dof_index> &,
 const hp::DoFHandler< 1 > &, bool, bool);

 template
 void
 king_ordering (hp::DoFHandler< 1 > &, bool, bool);

 template
 void
 compute_king_ordering (std::vector<dealii::types::global_dof_index> &,
 const hp::DoFHandler< 1 > &, bool, bool);

 template
 void
 minimum_degree (hp::DoFHandler< 1 > &, bool, bool);

 template
 void
 compute_minimum_degree (std::vector<dealii::types::global_dof_index> &,
 const hp::DoFHandler< 1 > &, bool, bool);
 }




 template
 void Cuthill_McKee<hp::DoFHandler< 1 > >
 (hp::DoFHandler< 1 >&,
 const bool,
 const bool,
 const std::vector<types::global_dof_index>&);

 template
 void
 compute_Cuthill_McKee<hp::DoFHandler< 1 > >
 (std::vector<types::global_dof_index>&,
 const hp::DoFHandler< 1 >&,
 const bool,
 const bool,
 const std::vector<types::global_dof_index>&);

 template
 void component_wise
 (hp::DoFHandler< 1 >&,
 const std::vector<unsigned int>&);

 template
 void component_wise
 (DoFHandler< 1 >&,
 unsigned int,
 const std::vector<unsigned int>&);

 template
 void component_wise
 (MGDoFHandler< 1 >&,
 const std::vector<unsigned int>&);

 template
 void component_wise
 (MGDoFHandler< 1 >&,
 unsigned int,
 const std::vector<unsigned int>&);

 template
 void block_wise< 1 >
 (hp::DoFHandler< 1 >&);

 template
 void block_wise< 1 >
 (DoFHandler< 1 >&,
 unsigned int);

 template
 void hierarchical< 1 >
 (DoFHandler< 1 >&);

 template void
 cell_wise<DoFHandler< 1 > >
 (DoFHandler< 1 >&,
 const std::vector<DoFHandler< 1 >::active_cell_iterator>&);

 template void
 compute_cell_wise<DoFHandler< 1 > >
 (std::vector<types::global_dof_index>&, std::vector<types::global_dof_index>&,
 const DoFHandler< 1 >&,
 const std::vector<DoFHandler< 1 >::active_cell_iterator>&);

 template void
 cell_wise<DoFHandler< 1 > >
 (DoFHandler< 1 >&, unsigned int,
 const std::vector<DoFHandler< 1 >::level_cell_iterator>&);

 template void
 compute_cell_wise<DoFHandler< 1 > >
 (std::vector<types::global_dof_index>&, std::vector<types::global_dof_index>&,
 const DoFHandler< 1 >&, unsigned int,
 const std::vector<DoFHandler< 1 >::level_cell_iterator>&);

 template void
 compute_downstream<DoFHandler< 1 > >
 (std::vector<types::global_dof_index>&,std::vector<types::global_dof_index>&,
 const DoFHandler< 1 >&, const Point< 1 >&,
 const bool);

 template
 void
 clockwise_dg<DoFHandler< 1 > >
 (DoFHandler< 1 >&, const Point< 1 >&, bool);

 template
 void
 compute_clockwise_dg<DoFHandler< 1 > >
 (std::vector<types::global_dof_index>&, const DoFHandler< 1 >&,
 const Point< 1 >&, const bool);



 template void
 cell_wise<hp::DoFHandler< 1 > >
 (hp::DoFHandler< 1 >&,
 const std::vector<hp::DoFHandler< 1 >::active_cell_iterator>&);

 template void
 compute_cell_wise<hp::DoFHandler< 1 > >
 (std::vector<types::global_dof_index>&, std::vector<types::global_dof_index>&,
 const hp::DoFHandler< 1 >&,
 const std::vector<hp::DoFHandler< 1 >::active_cell_iterator>&);

 template void
 downstream<MGDoFHandler< 1 > >
 (MGDoFHandler< 1 >&,
 unsigned int,
 const Point< 1 >&,
 const bool);

 template void
 compute_downstream<hp::DoFHandler< 1 > >
 (std::vector<types::global_dof_index>&,std::vector<types::global_dof_index>&,
 const hp::DoFHandler< 1 >&,
 const Point< 1 >&,
 const bool);

 template
 void
 clockwise_dg<hp::DoFHandler< 1 > >
 (hp::DoFHandler< 1 >&,
 const Point< 1 >&, bool);

 template
 void
 compute_clockwise_dg<hp::DoFHandler< 1 > >
 (std::vector<types::global_dof_index>&,
 const hp::DoFHandler< 1 >&,
 const Point< 1 >&,
 const bool);



 template
 void downstream
 (DoFHandler< 1 >&,
 const unsigned int,
 const Point< 1 >&,
 const bool);

 template
 void clockwise_dg
 (DoFHandler< 1 >&,
 const unsigned int,
 const Point< 1 >&, bool);



 template
 void random<DoFHandler< 1 > >
 (DoFHandler< 1 > &);

 template
 void
 compute_random<DoFHandler< 1 > >
 (std::vector<types::global_dof_index>&,
 const DoFHandler< 1 > &);

 template
 void sort_selected_dofs_back<DoFHandler< 1 > >
 (DoFHandler< 1 > &,
 const std::vector<bool> &);

 template
 void sort_selected_dofs_back<MGDoFHandler< 1 > >
 (MGDoFHandler< 1 > &,
 const std::vector<bool> &,
 const unsigned int);

 template
 void
 compute_sort_selected_dofs_back<DoFHandler< 1 > >
 (std::vector<types::global_dof_index>&,
 const DoFHandler< 1 > &,
 const std::vector<bool> &);

 template
 void
 compute_sort_selected_dofs_back<MGDoFHandler< 1 > >
 (std::vector<types::global_dof_index>&,
 const MGDoFHandler< 1 > &,
 const std::vector<bool> &,
 const unsigned int);

 template
 void random<hp::DoFHandler< 1 > >
 (hp::DoFHandler< 1 > &);

 template
 void
 compute_random<hp::DoFHandler< 1 > >
 (std::vector<types::global_dof_index>&,
 const hp::DoFHandler< 1 > &);

 template
 void sort_selected_dofs_back<hp::DoFHandler< 1 > >
 (hp::DoFHandler< 1 > &,
 const std::vector<bool> &);

 template
 void
 compute_sort_selected_dofs_back<hp::DoFHandler< 1 > >
 (std::vector<types::global_dof_index>&,
 const hp::DoFHandler< 1 > &,
 const std::vector<bool> &);


 template
 void subdomain_wise<hp::DoFHandler< 1 > >
 (hp::DoFHandler< 1 > &);

 template
 void Cuthill_McKee<DoFHandler< 1 > >
 (DoFHandler< 1 >&,
 const unsigned int,
 const bool,
 const std::vector<types::global_dof_index>&);

 template
 void Cuthill_McKee<MGDoFHandler< 1 > >
 (MGDoFHandler< 1 >&,
 const unsigned int,
 const bool,
 const std::vector<types::global_dof_index>&);

 } 
#endif
 
#if  1  ==  2 
namespace DoFRenumbering
 {
 namespace boost
 {

 template
 void
 Cuthill_McKee (DoFHandler< 1 > &, bool, bool);

 template
 void
 compute_Cuthill_McKee (std::vector<dealii::types::global_dof_index> &,
 const DoFHandler< 1 > &, bool, bool);

 template
 void
 king_ordering (DoFHandler< 1 > &, bool, bool);

 template
 void
 compute_king_ordering (std::vector<dealii::types::global_dof_index> &,
 const DoFHandler< 1 > &, bool, bool);

 template
 void
 minimum_degree (DoFHandler< 1 > &, bool, bool);

 template
 void
 compute_minimum_degree (std::vector<dealii::types::global_dof_index> &,
 const DoFHandler< 1 > &, bool, bool);


 template
 void
 Cuthill_McKee (hp::DoFHandler< 1 > &, bool, bool);

 template
 void
 compute_Cuthill_McKee (std::vector<dealii::types::global_dof_index> &,
 const hp::DoFHandler< 1 > &, bool, bool);

 template
 void
 king_ordering (hp::DoFHandler< 1 > &, bool, bool);

 template
 void
 compute_king_ordering (std::vector<dealii::types::global_dof_index> &,
 const hp::DoFHandler< 1 > &, bool, bool);

 template
 void
 minimum_degree (hp::DoFHandler< 1 > &, bool, bool);

 template
 void
 compute_minimum_degree (std::vector<dealii::types::global_dof_index> &,
 const hp::DoFHandler< 1 > &, bool, bool);
 }




 template
 void Cuthill_McKee<hp::DoFHandler< 1 > >
 (hp::DoFHandler< 1 >&,
 const bool,
 const bool,
 const std::vector<types::global_dof_index>&);

 template
 void
 compute_Cuthill_McKee<hp::DoFHandler< 1 > >
 (std::vector<types::global_dof_index>&,
 const hp::DoFHandler< 1 >&,
 const bool,
 const bool,
 const std::vector<types::global_dof_index>&);

 template
 void component_wise
 (hp::DoFHandler< 1 >&,
 const std::vector<unsigned int>&);

 template
 void component_wise
 (DoFHandler< 1 >&,
 unsigned int,
 const std::vector<unsigned int>&);

 template
 void component_wise
 (MGDoFHandler< 1 >&,
 const std::vector<unsigned int>&);

 template
 void component_wise
 (MGDoFHandler< 1 >&,
 unsigned int,
 const std::vector<unsigned int>&);

 template
 void block_wise< 1 >
 (hp::DoFHandler< 1 >&);

 template
 void block_wise< 1 >
 (DoFHandler< 1 >&,
 unsigned int);

 template
 void hierarchical< 1 >
 (DoFHandler< 1 >&);

 template void
 cell_wise<DoFHandler< 1 > >
 (DoFHandler< 1 >&,
 const std::vector<DoFHandler< 1 >::active_cell_iterator>&);

 template void
 compute_cell_wise<DoFHandler< 1 > >
 (std::vector<types::global_dof_index>&, std::vector<types::global_dof_index>&,
 const DoFHandler< 1 >&,
 const std::vector<DoFHandler< 1 >::active_cell_iterator>&);

 template void
 cell_wise<DoFHandler< 1 > >
 (DoFHandler< 1 >&, unsigned int,
 const std::vector<DoFHandler< 1 >::level_cell_iterator>&);

 template void
 compute_cell_wise<DoFHandler< 1 > >
 (std::vector<types::global_dof_index>&, std::vector<types::global_dof_index>&,
 const DoFHandler< 1 >&, unsigned int,
 const std::vector<DoFHandler< 1 >::level_cell_iterator>&);

 template void
 compute_downstream<DoFHandler< 1 > >
 (std::vector<types::global_dof_index>&,std::vector<types::global_dof_index>&,
 const DoFHandler< 1 >&, const Point< 1 >&,
 const bool);

 template
 void
 clockwise_dg<DoFHandler< 1 > >
 (DoFHandler< 1 >&, const Point< 1 >&, bool);

 template
 void
 compute_clockwise_dg<DoFHandler< 1 > >
 (std::vector<types::global_dof_index>&, const DoFHandler< 1 >&,
 const Point< 1 >&, const bool);



 template void
 cell_wise<hp::DoFHandler< 1 > >
 (hp::DoFHandler< 1 >&,
 const std::vector<hp::DoFHandler< 1 >::active_cell_iterator>&);

 template void
 compute_cell_wise<hp::DoFHandler< 1 > >
 (std::vector<types::global_dof_index>&, std::vector<types::global_dof_index>&,
 const hp::DoFHandler< 1 >&,
 const std::vector<hp::DoFHandler< 1 >::active_cell_iterator>&);

 template void
 downstream<MGDoFHandler< 1 > >
 (MGDoFHandler< 1 >&,
 unsigned int,
 const Point< 1 >&,
 const bool);

 template void
 compute_downstream<hp::DoFHandler< 1 > >
 (std::vector<types::global_dof_index>&,std::vector<types::global_dof_index>&,
 const hp::DoFHandler< 1 >&,
 const Point< 1 >&,
 const bool);

 template
 void
 clockwise_dg<hp::DoFHandler< 1 > >
 (hp::DoFHandler< 1 >&,
 const Point< 1 >&, bool);

 template
 void
 compute_clockwise_dg<hp::DoFHandler< 1 > >
 (std::vector<types::global_dof_index>&,
 const hp::DoFHandler< 1 >&,
 const Point< 1 >&,
 const bool);



 template
 void downstream
 (DoFHandler< 1 >&,
 const unsigned int,
 const Point< 1 >&,
 const bool);

 template
 void clockwise_dg
 (DoFHandler< 1 >&,
 const unsigned int,
 const Point< 1 >&, bool);



 template
 void random<DoFHandler< 1 > >
 (DoFHandler< 1 > &);

 template
 void
 compute_random<DoFHandler< 1 > >
 (std::vector<types::global_dof_index>&,
 const DoFHandler< 1 > &);

 template
 void sort_selected_dofs_back<DoFHandler< 1 > >
 (DoFHandler< 1 > &,
 const std::vector<bool> &);

 template
 void sort_selected_dofs_back<MGDoFHandler< 1 > >
 (MGDoFHandler< 1 > &,
 const std::vector<bool> &,
 const unsigned int);

 template
 void
 compute_sort_selected_dofs_back<DoFHandler< 1 > >
 (std::vector<types::global_dof_index>&,
 const DoFHandler< 1 > &,
 const std::vector<bool> &);

 template
 void
 compute_sort_selected_dofs_back<MGDoFHandler< 1 > >
 (std::vector<types::global_dof_index>&,
 const MGDoFHandler< 1 > &,
 const std::vector<bool> &,
 const unsigned int);

 template
 void random<hp::DoFHandler< 1 > >
 (hp::DoFHandler< 1 > &);

 template
 void
 compute_random<hp::DoFHandler< 1 > >
 (std::vector<types::global_dof_index>&,
 const hp::DoFHandler< 1 > &);

 template
 void sort_selected_dofs_back<hp::DoFHandler< 1 > >
 (hp::DoFHandler< 1 > &,
 const std::vector<bool> &);

 template
 void
 compute_sort_selected_dofs_back<hp::DoFHandler< 1 > >
 (std::vector<types::global_dof_index>&,
 const hp::DoFHandler< 1 > &,
 const std::vector<bool> &);


 template
 void subdomain_wise<hp::DoFHandler< 1 > >
 (hp::DoFHandler< 1 > &);

 template
 void Cuthill_McKee<DoFHandler< 1 > >
 (DoFHandler< 1 >&,
 const unsigned int,
 const bool,
 const std::vector<types::global_dof_index>&);

 template
 void Cuthill_McKee<MGDoFHandler< 1 > >
 (MGDoFHandler< 1 >&,
 const unsigned int,
 const bool,
 const std::vector<types::global_dof_index>&);

 } 
#endif
 
#if  1  ==  3 
namespace DoFRenumbering
 {
 namespace boost
 {

 template
 void
 Cuthill_McKee (DoFHandler< 1 > &, bool, bool);

 template
 void
 compute_Cuthill_McKee (std::vector<dealii::types::global_dof_index> &,
 const DoFHandler< 1 > &, bool, bool);

 template
 void
 king_ordering (DoFHandler< 1 > &, bool, bool);

 template
 void
 compute_king_ordering (std::vector<dealii::types::global_dof_index> &,
 const DoFHandler< 1 > &, bool, bool);

 template
 void
 minimum_degree (DoFHandler< 1 > &, bool, bool);

 template
 void
 compute_minimum_degree (std::vector<dealii::types::global_dof_index> &,
 const DoFHandler< 1 > &, bool, bool);


 template
 void
 Cuthill_McKee (hp::DoFHandler< 1 > &, bool, bool);

 template
 void
 compute_Cuthill_McKee (std::vector<dealii::types::global_dof_index> &,
 const hp::DoFHandler< 1 > &, bool, bool);

 template
 void
 king_ordering (hp::DoFHandler< 1 > &, bool, bool);

 template
 void
 compute_king_ordering (std::vector<dealii::types::global_dof_index> &,
 const hp::DoFHandler< 1 > &, bool, bool);

 template
 void
 minimum_degree (hp::DoFHandler< 1 > &, bool, bool);

 template
 void
 compute_minimum_degree (std::vector<dealii::types::global_dof_index> &,
 const hp::DoFHandler< 1 > &, bool, bool);
 }




 template
 void Cuthill_McKee<hp::DoFHandler< 1 > >
 (hp::DoFHandler< 1 >&,
 const bool,
 const bool,
 const std::vector<types::global_dof_index>&);

 template
 void
 compute_Cuthill_McKee<hp::DoFHandler< 1 > >
 (std::vector<types::global_dof_index>&,
 const hp::DoFHandler< 1 >&,
 const bool,
 const bool,
 const std::vector<types::global_dof_index>&);

 template
 void component_wise
 (hp::DoFHandler< 1 >&,
 const std::vector<unsigned int>&);

 template
 void component_wise
 (DoFHandler< 1 >&,
 unsigned int,
 const std::vector<unsigned int>&);

 template
 void component_wise
 (MGDoFHandler< 1 >&,
 const std::vector<unsigned int>&);

 template
 void component_wise
 (MGDoFHandler< 1 >&,
 unsigned int,
 const std::vector<unsigned int>&);

 template
 void block_wise< 1 >
 (hp::DoFHandler< 1 >&);

 template
 void block_wise< 1 >
 (DoFHandler< 1 >&,
 unsigned int);

 template
 void hierarchical< 1 >
 (DoFHandler< 1 >&);

 template void
 cell_wise<DoFHandler< 1 > >
 (DoFHandler< 1 >&,
 const std::vector<DoFHandler< 1 >::active_cell_iterator>&);

 template void
 compute_cell_wise<DoFHandler< 1 > >
 (std::vector<types::global_dof_index>&, std::vector<types::global_dof_index>&,
 const DoFHandler< 1 >&,
 const std::vector<DoFHandler< 1 >::active_cell_iterator>&);

 template void
 cell_wise<DoFHandler< 1 > >
 (DoFHandler< 1 >&, unsigned int,
 const std::vector<DoFHandler< 1 >::level_cell_iterator>&);

 template void
 compute_cell_wise<DoFHandler< 1 > >
 (std::vector<types::global_dof_index>&, std::vector<types::global_dof_index>&,
 const DoFHandler< 1 >&, unsigned int,
 const std::vector<DoFHandler< 1 >::level_cell_iterator>&);

 template void
 compute_downstream<DoFHandler< 1 > >
 (std::vector<types::global_dof_index>&,std::vector<types::global_dof_index>&,
 const DoFHandler< 1 >&, const Point< 1 >&,
 const bool);

 template
 void
 clockwise_dg<DoFHandler< 1 > >
 (DoFHandler< 1 >&, const Point< 1 >&, bool);

 template
 void
 compute_clockwise_dg<DoFHandler< 1 > >
 (std::vector<types::global_dof_index>&, const DoFHandler< 1 >&,
 const Point< 1 >&, const bool);



 template void
 cell_wise<hp::DoFHandler< 1 > >
 (hp::DoFHandler< 1 >&,
 const std::vector<hp::DoFHandler< 1 >::active_cell_iterator>&);

 template void
 compute_cell_wise<hp::DoFHandler< 1 > >
 (std::vector<types::global_dof_index>&, std::vector<types::global_dof_index>&,
 const hp::DoFHandler< 1 >&,
 const std::vector<hp::DoFHandler< 1 >::active_cell_iterator>&);

 template void
 downstream<MGDoFHandler< 1 > >
 (MGDoFHandler< 1 >&,
 unsigned int,
 const Point< 1 >&,
 const bool);

 template void
 compute_downstream<hp::DoFHandler< 1 > >
 (std::vector<types::global_dof_index>&,std::vector<types::global_dof_index>&,
 const hp::DoFHandler< 1 >&,
 const Point< 1 >&,
 const bool);

 template
 void
 clockwise_dg<hp::DoFHandler< 1 > >
 (hp::DoFHandler< 1 >&,
 const Point< 1 >&, bool);

 template
 void
 compute_clockwise_dg<hp::DoFHandler< 1 > >
 (std::vector<types::global_dof_index>&,
 const hp::DoFHandler< 1 >&,
 const Point< 1 >&,
 const bool);



 template
 void downstream
 (DoFHandler< 1 >&,
 const unsigned int,
 const Point< 1 >&,
 const bool);

 template
 void clockwise_dg
 (DoFHandler< 1 >&,
 const unsigned int,
 const Point< 1 >&, bool);



 template
 void random<DoFHandler< 1 > >
 (DoFHandler< 1 > &);

 template
 void
 compute_random<DoFHandler< 1 > >
 (std::vector<types::global_dof_index>&,
 const DoFHandler< 1 > &);

 template
 void sort_selected_dofs_back<DoFHandler< 1 > >
 (DoFHandler< 1 > &,
 const std::vector<bool> &);

 template
 void sort_selected_dofs_back<MGDoFHandler< 1 > >
 (MGDoFHandler< 1 > &,
 const std::vector<bool> &,
 const unsigned int);

 template
 void
 compute_sort_selected_dofs_back<DoFHandler< 1 > >
 (std::vector<types::global_dof_index>&,
 const DoFHandler< 1 > &,
 const std::vector<bool> &);

 template
 void
 compute_sort_selected_dofs_back<MGDoFHandler< 1 > >
 (std::vector<types::global_dof_index>&,
 const MGDoFHandler< 1 > &,
 const std::vector<bool> &,
 const unsigned int);

 template
 void random<hp::DoFHandler< 1 > >
 (hp::DoFHandler< 1 > &);

 template
 void
 compute_random<hp::DoFHandler< 1 > >
 (std::vector<types::global_dof_index>&,
 const hp::DoFHandler< 1 > &);

 template
 void sort_selected_dofs_back<hp::DoFHandler< 1 > >
 (hp::DoFHandler< 1 > &,
 const std::vector<bool> &);

 template
 void
 compute_sort_selected_dofs_back<hp::DoFHandler< 1 > >
 (std::vector<types::global_dof_index>&,
 const hp::DoFHandler< 1 > &,
 const std::vector<bool> &);


 template
 void subdomain_wise<hp::DoFHandler< 1 > >
 (hp::DoFHandler< 1 > &);

 template
 void Cuthill_McKee<DoFHandler< 1 > >
 (DoFHandler< 1 >&,
 const unsigned int,
 const bool,
 const std::vector<types::global_dof_index>&);

 template
 void Cuthill_McKee<MGDoFHandler< 1 > >
 (MGDoFHandler< 1 >&,
 const unsigned int,
 const bool,
 const std::vector<types::global_dof_index>&);

 } 
#endif
 
#if  2  ==  1 
namespace DoFRenumbering
 {
 namespace boost
 {

 template
 void
 Cuthill_McKee (DoFHandler< 2 > &, bool, bool);

 template
 void
 compute_Cuthill_McKee (std::vector<dealii::types::global_dof_index> &,
 const DoFHandler< 2 > &, bool, bool);

 template
 void
 king_ordering (DoFHandler< 2 > &, bool, bool);

 template
 void
 compute_king_ordering (std::vector<dealii::types::global_dof_index> &,
 const DoFHandler< 2 > &, bool, bool);

 template
 void
 minimum_degree (DoFHandler< 2 > &, bool, bool);

 template
 void
 compute_minimum_degree (std::vector<dealii::types::global_dof_index> &,
 const DoFHandler< 2 > &, bool, bool);


 template
 void
 Cuthill_McKee (hp::DoFHandler< 2 > &, bool, bool);

 template
 void
 compute_Cuthill_McKee (std::vector<dealii::types::global_dof_index> &,
 const hp::DoFHandler< 2 > &, bool, bool);

 template
 void
 king_ordering (hp::DoFHandler< 2 > &, bool, bool);

 template
 void
 compute_king_ordering (std::vector<dealii::types::global_dof_index> &,
 const hp::DoFHandler< 2 > &, bool, bool);

 template
 void
 minimum_degree (hp::DoFHandler< 2 > &, bool, bool);

 template
 void
 compute_minimum_degree (std::vector<dealii::types::global_dof_index> &,
 const hp::DoFHandler< 2 > &, bool, bool);
 }




 template
 void Cuthill_McKee<hp::DoFHandler< 2 > >
 (hp::DoFHandler< 2 >&,
 const bool,
 const bool,
 const std::vector<types::global_dof_index>&);

 template
 void
 compute_Cuthill_McKee<hp::DoFHandler< 2 > >
 (std::vector<types::global_dof_index>&,
 const hp::DoFHandler< 2 >&,
 const bool,
 const bool,
 const std::vector<types::global_dof_index>&);

 template
 void component_wise
 (hp::DoFHandler< 2 >&,
 const std::vector<unsigned int>&);

 template
 void component_wise
 (DoFHandler< 2 >&,
 unsigned int,
 const std::vector<unsigned int>&);

 template
 void component_wise
 (MGDoFHandler< 2 >&,
 const std::vector<unsigned int>&);

 template
 void component_wise
 (MGDoFHandler< 2 >&,
 unsigned int,
 const std::vector<unsigned int>&);

 template
 void block_wise< 2 >
 (hp::DoFHandler< 2 >&);

 template
 void block_wise< 2 >
 (DoFHandler< 2 >&,
 unsigned int);

 template
 void hierarchical< 2 >
 (DoFHandler< 2 >&);

 template void
 cell_wise<DoFHandler< 2 > >
 (DoFHandler< 2 >&,
 const std::vector<DoFHandler< 2 >::active_cell_iterator>&);

 template void
 compute_cell_wise<DoFHandler< 2 > >
 (std::vector<types::global_dof_index>&, std::vector<types::global_dof_index>&,
 const DoFHandler< 2 >&,
 const std::vector<DoFHandler< 2 >::active_cell_iterator>&);

 template void
 cell_wise<DoFHandler< 2 > >
 (DoFHandler< 2 >&, unsigned int,
 const std::vector<DoFHandler< 2 >::level_cell_iterator>&);

 template void
 compute_cell_wise<DoFHandler< 2 > >
 (std::vector<types::global_dof_index>&, std::vector<types::global_dof_index>&,
 const DoFHandler< 2 >&, unsigned int,
 const std::vector<DoFHandler< 2 >::level_cell_iterator>&);

 template void
 compute_downstream<DoFHandler< 2 > >
 (std::vector<types::global_dof_index>&,std::vector<types::global_dof_index>&,
 const DoFHandler< 2 >&, const Point< 2 >&,
 const bool);

 template
 void
 clockwise_dg<DoFHandler< 2 > >
 (DoFHandler< 2 >&, const Point< 2 >&, bool);

 template
 void
 compute_clockwise_dg<DoFHandler< 2 > >
 (std::vector<types::global_dof_index>&, const DoFHandler< 2 >&,
 const Point< 2 >&, const bool);



 template void
 cell_wise<hp::DoFHandler< 2 > >
 (hp::DoFHandler< 2 >&,
 const std::vector<hp::DoFHandler< 2 >::active_cell_iterator>&);

 template void
 compute_cell_wise<hp::DoFHandler< 2 > >
 (std::vector<types::global_dof_index>&, std::vector<types::global_dof_index>&,
 const hp::DoFHandler< 2 >&,
 const std::vector<hp::DoFHandler< 2 >::active_cell_iterator>&);

 template void
 downstream<MGDoFHandler< 2 > >
 (MGDoFHandler< 2 >&,
 unsigned int,
 const Point< 2 >&,
 const bool);

 template void
 compute_downstream<hp::DoFHandler< 2 > >
 (std::vector<types::global_dof_index>&,std::vector<types::global_dof_index>&,
 const hp::DoFHandler< 2 >&,
 const Point< 2 >&,
 const bool);

 template
 void
 clockwise_dg<hp::DoFHandler< 2 > >
 (hp::DoFHandler< 2 >&,
 const Point< 2 >&, bool);

 template
 void
 compute_clockwise_dg<hp::DoFHandler< 2 > >
 (std::vector<types::global_dof_index>&,
 const hp::DoFHandler< 2 >&,
 const Point< 2 >&,
 const bool);



 template
 void downstream
 (DoFHandler< 2 >&,
 const unsigned int,
 const Point< 2 >&,
 const bool);

 template
 void clockwise_dg
 (DoFHandler< 2 >&,
 const unsigned int,
 const Point< 2 >&, bool);



 template
 void random<DoFHandler< 2 > >
 (DoFHandler< 2 > &);

 template
 void
 compute_random<DoFHandler< 2 > >
 (std::vector<types::global_dof_index>&,
 const DoFHandler< 2 > &);

 template
 void sort_selected_dofs_back<DoFHandler< 2 > >
 (DoFHandler< 2 > &,
 const std::vector<bool> &);

 template
 void sort_selected_dofs_back<MGDoFHandler< 2 > >
 (MGDoFHandler< 2 > &,
 const std::vector<bool> &,
 const unsigned int);

 template
 void
 compute_sort_selected_dofs_back<DoFHandler< 2 > >
 (std::vector<types::global_dof_index>&,
 const DoFHandler< 2 > &,
 const std::vector<bool> &);

 template
 void
 compute_sort_selected_dofs_back<MGDoFHandler< 2 > >
 (std::vector<types::global_dof_index>&,
 const MGDoFHandler< 2 > &,
 const std::vector<bool> &,
 const unsigned int);

 template
 void random<hp::DoFHandler< 2 > >
 (hp::DoFHandler< 2 > &);

 template
 void
 compute_random<hp::DoFHandler< 2 > >
 (std::vector<types::global_dof_index>&,
 const hp::DoFHandler< 2 > &);

 template
 void sort_selected_dofs_back<hp::DoFHandler< 2 > >
 (hp::DoFHandler< 2 > &,
 const std::vector<bool> &);

 template
 void
 compute_sort_selected_dofs_back<hp::DoFHandler< 2 > >
 (std::vector<types::global_dof_index>&,
 const hp::DoFHandler< 2 > &,
 const std::vector<bool> &);


 template
 void subdomain_wise<hp::DoFHandler< 2 > >
 (hp::DoFHandler< 2 > &);

 template
 void Cuthill_McKee<DoFHandler< 2 > >
 (DoFHandler< 2 >&,
 const unsigned int,
 const bool,
 const std::vector<types::global_dof_index>&);

 template
 void Cuthill_McKee<MGDoFHandler< 2 > >
 (MGDoFHandler< 2 >&,
 const unsigned int,
 const bool,
 const std::vector<types::global_dof_index>&);

 } 
#endif
 
#if  2  ==  2 
namespace DoFRenumbering
 {
 namespace boost
 {

 template
 void
 Cuthill_McKee (DoFHandler< 2 > &, bool, bool);

 template
 void
 compute_Cuthill_McKee (std::vector<dealii::types::global_dof_index> &,
 const DoFHandler< 2 > &, bool, bool);

 template
 void
 king_ordering (DoFHandler< 2 > &, bool, bool);

 template
 void
 compute_king_ordering (std::vector<dealii::types::global_dof_index> &,
 const DoFHandler< 2 > &, bool, bool);

 template
 void
 minimum_degree (DoFHandler< 2 > &, bool, bool);

 template
 void
 compute_minimum_degree (std::vector<dealii::types::global_dof_index> &,
 const DoFHandler< 2 > &, bool, bool);


 template
 void
 Cuthill_McKee (hp::DoFHandler< 2 > &, bool, bool);

 template
 void
 compute_Cuthill_McKee (std::vector<dealii::types::global_dof_index> &,
 const hp::DoFHandler< 2 > &, bool, bool);

 template
 void
 king_ordering (hp::DoFHandler< 2 > &, bool, bool);

 template
 void
 compute_king_ordering (std::vector<dealii::types::global_dof_index> &,
 const hp::DoFHandler< 2 > &, bool, bool);

 template
 void
 minimum_degree (hp::DoFHandler< 2 > &, bool, bool);

 template
 void
 compute_minimum_degree (std::vector<dealii::types::global_dof_index> &,
 const hp::DoFHandler< 2 > &, bool, bool);
 }




 template
 void Cuthill_McKee<hp::DoFHandler< 2 > >
 (hp::DoFHandler< 2 >&,
 const bool,
 const bool,
 const std::vector<types::global_dof_index>&);

 template
 void
 compute_Cuthill_McKee<hp::DoFHandler< 2 > >
 (std::vector<types::global_dof_index>&,
 const hp::DoFHandler< 2 >&,
 const bool,
 const bool,
 const std::vector<types::global_dof_index>&);

 template
 void component_wise
 (hp::DoFHandler< 2 >&,
 const std::vector<unsigned int>&);

 template
 void component_wise
 (DoFHandler< 2 >&,
 unsigned int,
 const std::vector<unsigned int>&);

 template
 void component_wise
 (MGDoFHandler< 2 >&,
 const std::vector<unsigned int>&);

 template
 void component_wise
 (MGDoFHandler< 2 >&,
 unsigned int,
 const std::vector<unsigned int>&);

 template
 void block_wise< 2 >
 (hp::DoFHandler< 2 >&);

 template
 void block_wise< 2 >
 (DoFHandler< 2 >&,
 unsigned int);

 template
 void hierarchical< 2 >
 (DoFHandler< 2 >&);

 template void
 cell_wise<DoFHandler< 2 > >
 (DoFHandler< 2 >&,
 const std::vector<DoFHandler< 2 >::active_cell_iterator>&);

 template void
 compute_cell_wise<DoFHandler< 2 > >
 (std::vector<types::global_dof_index>&, std::vector<types::global_dof_index>&,
 const DoFHandler< 2 >&,
 const std::vector<DoFHandler< 2 >::active_cell_iterator>&);

 template void
 cell_wise<DoFHandler< 2 > >
 (DoFHandler< 2 >&, unsigned int,
 const std::vector<DoFHandler< 2 >::level_cell_iterator>&);

 template void
 compute_cell_wise<DoFHandler< 2 > >
 (std::vector<types::global_dof_index>&, std::vector<types::global_dof_index>&,
 const DoFHandler< 2 >&, unsigned int,
 const std::vector<DoFHandler< 2 >::level_cell_iterator>&);

 template void
 compute_downstream<DoFHandler< 2 > >
 (std::vector<types::global_dof_index>&,std::vector<types::global_dof_index>&,
 const DoFHandler< 2 >&, const Point< 2 >&,
 const bool);

 template
 void
 clockwise_dg<DoFHandler< 2 > >
 (DoFHandler< 2 >&, const Point< 2 >&, bool);

 template
 void
 compute_clockwise_dg<DoFHandler< 2 > >
 (std::vector<types::global_dof_index>&, const DoFHandler< 2 >&,
 const Point< 2 >&, const bool);



 template void
 cell_wise<hp::DoFHandler< 2 > >
 (hp::DoFHandler< 2 >&,
 const std::vector<hp::DoFHandler< 2 >::active_cell_iterator>&);

 template void
 compute_cell_wise<hp::DoFHandler< 2 > >
 (std::vector<types::global_dof_index>&, std::vector<types::global_dof_index>&,
 const hp::DoFHandler< 2 >&,
 const std::vector<hp::DoFHandler< 2 >::active_cell_iterator>&);

 template void
 downstream<MGDoFHandler< 2 > >
 (MGDoFHandler< 2 >&,
 unsigned int,
 const Point< 2 >&,
 const bool);

 template void
 compute_downstream<hp::DoFHandler< 2 > >
 (std::vector<types::global_dof_index>&,std::vector<types::global_dof_index>&,
 const hp::DoFHandler< 2 >&,
 const Point< 2 >&,
 const bool);

 template
 void
 clockwise_dg<hp::DoFHandler< 2 > >
 (hp::DoFHandler< 2 >&,
 const Point< 2 >&, bool);

 template
 void
 compute_clockwise_dg<hp::DoFHandler< 2 > >
 (std::vector<types::global_dof_index>&,
 const hp::DoFHandler< 2 >&,
 const Point< 2 >&,
 const bool);



 template
 void downstream
 (DoFHandler< 2 >&,
 const unsigned int,
 const Point< 2 >&,
 const bool);

 template
 void clockwise_dg
 (DoFHandler< 2 >&,
 const unsigned int,
 const Point< 2 >&, bool);



 template
 void random<DoFHandler< 2 > >
 (DoFHandler< 2 > &);

 template
 void
 compute_random<DoFHandler< 2 > >
 (std::vector<types::global_dof_index>&,
 const DoFHandler< 2 > &);

 template
 void sort_selected_dofs_back<DoFHandler< 2 > >
 (DoFHandler< 2 > &,
 const std::vector<bool> &);

 template
 void sort_selected_dofs_back<MGDoFHandler< 2 > >
 (MGDoFHandler< 2 > &,
 const std::vector<bool> &,
 const unsigned int);

 template
 void
 compute_sort_selected_dofs_back<DoFHandler< 2 > >
 (std::vector<types::global_dof_index>&,
 const DoFHandler< 2 > &,
 const std::vector<bool> &);

 template
 void
 compute_sort_selected_dofs_back<MGDoFHandler< 2 > >
 (std::vector<types::global_dof_index>&,
 const MGDoFHandler< 2 > &,
 const std::vector<bool> &,
 const unsigned int);

 template
 void random<hp::DoFHandler< 2 > >
 (hp::DoFHandler< 2 > &);

 template
 void
 compute_random<hp::DoFHandler< 2 > >
 (std::vector<types::global_dof_index>&,
 const hp::DoFHandler< 2 > &);

 template
 void sort_selected_dofs_back<hp::DoFHandler< 2 > >
 (hp::DoFHandler< 2 > &,
 const std::vector<bool> &);

 template
 void
 compute_sort_selected_dofs_back<hp::DoFHandler< 2 > >
 (std::vector<types::global_dof_index>&,
 const hp::DoFHandler< 2 > &,
 const std::vector<bool> &);


 template
 void subdomain_wise<hp::DoFHandler< 2 > >
 (hp::DoFHandler< 2 > &);

 template
 void Cuthill_McKee<DoFHandler< 2 > >
 (DoFHandler< 2 >&,
 const unsigned int,
 const bool,
 const std::vector<types::global_dof_index>&);

 template
 void Cuthill_McKee<MGDoFHandler< 2 > >
 (MGDoFHandler< 2 >&,
 const unsigned int,
 const bool,
 const std::vector<types::global_dof_index>&);

 } 
#endif
 
#if  2  ==  3 
namespace DoFRenumbering
 {
 namespace boost
 {

 template
 void
 Cuthill_McKee (DoFHandler< 2 > &, bool, bool);

 template
 void
 compute_Cuthill_McKee (std::vector<dealii::types::global_dof_index> &,
 const DoFHandler< 2 > &, bool, bool);

 template
 void
 king_ordering (DoFHandler< 2 > &, bool, bool);

 template
 void
 compute_king_ordering (std::vector<dealii::types::global_dof_index> &,
 const DoFHandler< 2 > &, bool, bool);

 template
 void
 minimum_degree (DoFHandler< 2 > &, bool, bool);

 template
 void
 compute_minimum_degree (std::vector<dealii::types::global_dof_index> &,
 const DoFHandler< 2 > &, bool, bool);


 template
 void
 Cuthill_McKee (hp::DoFHandler< 2 > &, bool, bool);

 template
 void
 compute_Cuthill_McKee (std::vector<dealii::types::global_dof_index> &,
 const hp::DoFHandler< 2 > &, bool, bool);

 template
 void
 king_ordering (hp::DoFHandler< 2 > &, bool, bool);

 template
 void
 compute_king_ordering (std::vector<dealii::types::global_dof_index> &,
 const hp::DoFHandler< 2 > &, bool, bool);

 template
 void
 minimum_degree (hp::DoFHandler< 2 > &, bool, bool);

 template
 void
 compute_minimum_degree (std::vector<dealii::types::global_dof_index> &,
 const hp::DoFHandler< 2 > &, bool, bool);
 }




 template
 void Cuthill_McKee<hp::DoFHandler< 2 > >
 (hp::DoFHandler< 2 >&,
 const bool,
 const bool,
 const std::vector<types::global_dof_index>&);

 template
 void
 compute_Cuthill_McKee<hp::DoFHandler< 2 > >
 (std::vector<types::global_dof_index>&,
 const hp::DoFHandler< 2 >&,
 const bool,
 const bool,
 const std::vector<types::global_dof_index>&);

 template
 void component_wise
 (hp::DoFHandler< 2 >&,
 const std::vector<unsigned int>&);

 template
 void component_wise
 (DoFHandler< 2 >&,
 unsigned int,
 const std::vector<unsigned int>&);

 template
 void component_wise
 (MGDoFHandler< 2 >&,
 const std::vector<unsigned int>&);

 template
 void component_wise
 (MGDoFHandler< 2 >&,
 unsigned int,
 const std::vector<unsigned int>&);

 template
 void block_wise< 2 >
 (hp::DoFHandler< 2 >&);

 template
 void block_wise< 2 >
 (DoFHandler< 2 >&,
 unsigned int);

 template
 void hierarchical< 2 >
 (DoFHandler< 2 >&);

 template void
 cell_wise<DoFHandler< 2 > >
 (DoFHandler< 2 >&,
 const std::vector<DoFHandler< 2 >::active_cell_iterator>&);

 template void
 compute_cell_wise<DoFHandler< 2 > >
 (std::vector<types::global_dof_index>&, std::vector<types::global_dof_index>&,
 const DoFHandler< 2 >&,
 const std::vector<DoFHandler< 2 >::active_cell_iterator>&);

 template void
 cell_wise<DoFHandler< 2 > >
 (DoFHandler< 2 >&, unsigned int,
 const std::vector<DoFHandler< 2 >::level_cell_iterator>&);

 template void
 compute_cell_wise<DoFHandler< 2 > >
 (std::vector<types::global_dof_index>&, std::vector<types::global_dof_index>&,
 const DoFHandler< 2 >&, unsigned int,
 const std::vector<DoFHandler< 2 >::level_cell_iterator>&);

 template void
 compute_downstream<DoFHandler< 2 > >
 (std::vector<types::global_dof_index>&,std::vector<types::global_dof_index>&,
 const DoFHandler< 2 >&, const Point< 2 >&,
 const bool);

 template
 void
 clockwise_dg<DoFHandler< 2 > >
 (DoFHandler< 2 >&, const Point< 2 >&, bool);

 template
 void
 compute_clockwise_dg<DoFHandler< 2 > >
 (std::vector<types::global_dof_index>&, const DoFHandler< 2 >&,
 const Point< 2 >&, const bool);



 template void
 cell_wise<hp::DoFHandler< 2 > >
 (hp::DoFHandler< 2 >&,
 const std::vector<hp::DoFHandler< 2 >::active_cell_iterator>&);

 template void
 compute_cell_wise<hp::DoFHandler< 2 > >
 (std::vector<types::global_dof_index>&, std::vector<types::global_dof_index>&,
 const hp::DoFHandler< 2 >&,
 const std::vector<hp::DoFHandler< 2 >::active_cell_iterator>&);

 template void
 downstream<MGDoFHandler< 2 > >
 (MGDoFHandler< 2 >&,
 unsigned int,
 const Point< 2 >&,
 const bool);

 template void
 compute_downstream<hp::DoFHandler< 2 > >
 (std::vector<types::global_dof_index>&,std::vector<types::global_dof_index>&,
 const hp::DoFHandler< 2 >&,
 const Point< 2 >&,
 const bool);

 template
 void
 clockwise_dg<hp::DoFHandler< 2 > >
 (hp::DoFHandler< 2 >&,
 const Point< 2 >&, bool);

 template
 void
 compute_clockwise_dg<hp::DoFHandler< 2 > >
 (std::vector<types::global_dof_index>&,
 const hp::DoFHandler< 2 >&,
 const Point< 2 >&,
 const bool);



 template
 void downstream
 (DoFHandler< 2 >&,
 const unsigned int,
 const Point< 2 >&,
 const bool);

 template
 void clockwise_dg
 (DoFHandler< 2 >&,
 const unsigned int,
 const Point< 2 >&, bool);



 template
 void random<DoFHandler< 2 > >
 (DoFHandler< 2 > &);

 template
 void
 compute_random<DoFHandler< 2 > >
 (std::vector<types::global_dof_index>&,
 const DoFHandler< 2 > &);

 template
 void sort_selected_dofs_back<DoFHandler< 2 > >
 (DoFHandler< 2 > &,
 const std::vector<bool> &);

 template
 void sort_selected_dofs_back<MGDoFHandler< 2 > >
 (MGDoFHandler< 2 > &,
 const std::vector<bool> &,
 const unsigned int);

 template
 void
 compute_sort_selected_dofs_back<DoFHandler< 2 > >
 (std::vector<types::global_dof_index>&,
 const DoFHandler< 2 > &,
 const std::vector<bool> &);

 template
 void
 compute_sort_selected_dofs_back<MGDoFHandler< 2 > >
 (std::vector<types::global_dof_index>&,
 const MGDoFHandler< 2 > &,
 const std::vector<bool> &,
 const unsigned int);

 template
 void random<hp::DoFHandler< 2 > >
 (hp::DoFHandler< 2 > &);

 template
 void
 compute_random<hp::DoFHandler< 2 > >
 (std::vector<types::global_dof_index>&,
 const hp::DoFHandler< 2 > &);

 template
 void sort_selected_dofs_back<hp::DoFHandler< 2 > >
 (hp::DoFHandler< 2 > &,
 const std::vector<bool> &);

 template
 void
 compute_sort_selected_dofs_back<hp::DoFHandler< 2 > >
 (std::vector<types::global_dof_index>&,
 const hp::DoFHandler< 2 > &,
 const std::vector<bool> &);


 template
 void subdomain_wise<hp::DoFHandler< 2 > >
 (hp::DoFHandler< 2 > &);

 template
 void Cuthill_McKee<DoFHandler< 2 > >
 (DoFHandler< 2 >&,
 const unsigned int,
 const bool,
 const std::vector<types::global_dof_index>&);

 template
 void Cuthill_McKee<MGDoFHandler< 2 > >
 (MGDoFHandler< 2 >&,
 const unsigned int,
 const bool,
 const std::vector<types::global_dof_index>&);

 } 
#endif
 
#if  3  ==  1 
namespace DoFRenumbering
 {
 namespace boost
 {

 template
 void
 Cuthill_McKee (DoFHandler< 3 > &, bool, bool);

 template
 void
 compute_Cuthill_McKee (std::vector<dealii::types::global_dof_index> &,
 const DoFHandler< 3 > &, bool, bool);

 template
 void
 king_ordering (DoFHandler< 3 > &, bool, bool);

 template
 void
 compute_king_ordering (std::vector<dealii::types::global_dof_index> &,
 const DoFHandler< 3 > &, bool, bool);

 template
 void
 minimum_degree (DoFHandler< 3 > &, bool, bool);

 template
 void
 compute_minimum_degree (std::vector<dealii::types::global_dof_index> &,
 const DoFHandler< 3 > &, bool, bool);


 template
 void
 Cuthill_McKee (hp::DoFHandler< 3 > &, bool, bool);

 template
 void
 compute_Cuthill_McKee (std::vector<dealii::types::global_dof_index> &,
 const hp::DoFHandler< 3 > &, bool, bool);

 template
 void
 king_ordering (hp::DoFHandler< 3 > &, bool, bool);

 template
 void
 compute_king_ordering (std::vector<dealii::types::global_dof_index> &,
 const hp::DoFHandler< 3 > &, bool, bool);

 template
 void
 minimum_degree (hp::DoFHandler< 3 > &, bool, bool);

 template
 void
 compute_minimum_degree (std::vector<dealii::types::global_dof_index> &,
 const hp::DoFHandler< 3 > &, bool, bool);
 }




 template
 void Cuthill_McKee<hp::DoFHandler< 3 > >
 (hp::DoFHandler< 3 >&,
 const bool,
 const bool,
 const std::vector<types::global_dof_index>&);

 template
 void
 compute_Cuthill_McKee<hp::DoFHandler< 3 > >
 (std::vector<types::global_dof_index>&,
 const hp::DoFHandler< 3 >&,
 const bool,
 const bool,
 const std::vector<types::global_dof_index>&);

 template
 void component_wise
 (hp::DoFHandler< 3 >&,
 const std::vector<unsigned int>&);

 template
 void component_wise
 (DoFHandler< 3 >&,
 unsigned int,
 const std::vector<unsigned int>&);

 template
 void component_wise
 (MGDoFHandler< 3 >&,
 const std::vector<unsigned int>&);

 template
 void component_wise
 (MGDoFHandler< 3 >&,
 unsigned int,
 const std::vector<unsigned int>&);

 template
 void block_wise< 3 >
 (hp::DoFHandler< 3 >&);

 template
 void block_wise< 3 >
 (DoFHandler< 3 >&,
 unsigned int);

 template
 void hierarchical< 3 >
 (DoFHandler< 3 >&);

 template void
 cell_wise<DoFHandler< 3 > >
 (DoFHandler< 3 >&,
 const std::vector<DoFHandler< 3 >::active_cell_iterator>&);

 template void
 compute_cell_wise<DoFHandler< 3 > >
 (std::vector<types::global_dof_index>&, std::vector<types::global_dof_index>&,
 const DoFHandler< 3 >&,
 const std::vector<DoFHandler< 3 >::active_cell_iterator>&);

 template void
 cell_wise<DoFHandler< 3 > >
 (DoFHandler< 3 >&, unsigned int,
 const std::vector<DoFHandler< 3 >::level_cell_iterator>&);

 template void
 compute_cell_wise<DoFHandler< 3 > >
 (std::vector<types::global_dof_index>&, std::vector<types::global_dof_index>&,
 const DoFHandler< 3 >&, unsigned int,
 const std::vector<DoFHandler< 3 >::level_cell_iterator>&);

 template void
 compute_downstream<DoFHandler< 3 > >
 (std::vector<types::global_dof_index>&,std::vector<types::global_dof_index>&,
 const DoFHandler< 3 >&, const Point< 3 >&,
 const bool);

 template
 void
 clockwise_dg<DoFHandler< 3 > >
 (DoFHandler< 3 >&, const Point< 3 >&, bool);

 template
 void
 compute_clockwise_dg<DoFHandler< 3 > >
 (std::vector<types::global_dof_index>&, const DoFHandler< 3 >&,
 const Point< 3 >&, const bool);



 template void
 cell_wise<hp::DoFHandler< 3 > >
 (hp::DoFHandler< 3 >&,
 const std::vector<hp::DoFHandler< 3 >::active_cell_iterator>&);

 template void
 compute_cell_wise<hp::DoFHandler< 3 > >
 (std::vector<types::global_dof_index>&, std::vector<types::global_dof_index>&,
 const hp::DoFHandler< 3 >&,
 const std::vector<hp::DoFHandler< 3 >::active_cell_iterator>&);

 template void
 downstream<MGDoFHandler< 3 > >
 (MGDoFHandler< 3 >&,
 unsigned int,
 const Point< 3 >&,
 const bool);

 template void
 compute_downstream<hp::DoFHandler< 3 > >
 (std::vector<types::global_dof_index>&,std::vector<types::global_dof_index>&,
 const hp::DoFHandler< 3 >&,
 const Point< 3 >&,
 const bool);

 template
 void
 clockwise_dg<hp::DoFHandler< 3 > >
 (hp::DoFHandler< 3 >&,
 const Point< 3 >&, bool);

 template
 void
 compute_clockwise_dg<hp::DoFHandler< 3 > >
 (std::vector<types::global_dof_index>&,
 const hp::DoFHandler< 3 >&,
 const Point< 3 >&,
 const bool);



 template
 void downstream
 (DoFHandler< 3 >&,
 const unsigned int,
 const Point< 3 >&,
 const bool);

 template
 void clockwise_dg
 (DoFHandler< 3 >&,
 const unsigned int,
 const Point< 3 >&, bool);



 template
 void random<DoFHandler< 3 > >
 (DoFHandler< 3 > &);

 template
 void
 compute_random<DoFHandler< 3 > >
 (std::vector<types::global_dof_index>&,
 const DoFHandler< 3 > &);

 template
 void sort_selected_dofs_back<DoFHandler< 3 > >
 (DoFHandler< 3 > &,
 const std::vector<bool> &);

 template
 void sort_selected_dofs_back<MGDoFHandler< 3 > >
 (MGDoFHandler< 3 > &,
 const std::vector<bool> &,
 const unsigned int);

 template
 void
 compute_sort_selected_dofs_back<DoFHandler< 3 > >
 (std::vector<types::global_dof_index>&,
 const DoFHandler< 3 > &,
 const std::vector<bool> &);

 template
 void
 compute_sort_selected_dofs_back<MGDoFHandler< 3 > >
 (std::vector<types::global_dof_index>&,
 const MGDoFHandler< 3 > &,
 const std::vector<bool> &,
 const unsigned int);

 template
 void random<hp::DoFHandler< 3 > >
 (hp::DoFHandler< 3 > &);

 template
 void
 compute_random<hp::DoFHandler< 3 > >
 (std::vector<types::global_dof_index>&,
 const hp::DoFHandler< 3 > &);

 template
 void sort_selected_dofs_back<hp::DoFHandler< 3 > >
 (hp::DoFHandler< 3 > &,
 const std::vector<bool> &);

 template
 void
 compute_sort_selected_dofs_back<hp::DoFHandler< 3 > >
 (std::vector<types::global_dof_index>&,
 const hp::DoFHandler< 3 > &,
 const std::vector<bool> &);


 template
 void subdomain_wise<hp::DoFHandler< 3 > >
 (hp::DoFHandler< 3 > &);

 template
 void Cuthill_McKee<DoFHandler< 3 > >
 (DoFHandler< 3 >&,
 const unsigned int,
 const bool,
 const std::vector<types::global_dof_index>&);

 template
 void Cuthill_McKee<MGDoFHandler< 3 > >
 (MGDoFHandler< 3 >&,
 const unsigned int,
 const bool,
 const std::vector<types::global_dof_index>&);

 } 
#endif
 
#if  3  ==  2 
namespace DoFRenumbering
 {
 namespace boost
 {

 template
 void
 Cuthill_McKee (DoFHandler< 3 > &, bool, bool);

 template
 void
 compute_Cuthill_McKee (std::vector<dealii::types::global_dof_index> &,
 const DoFHandler< 3 > &, bool, bool);

 template
 void
 king_ordering (DoFHandler< 3 > &, bool, bool);

 template
 void
 compute_king_ordering (std::vector<dealii::types::global_dof_index> &,
 const DoFHandler< 3 > &, bool, bool);

 template
 void
 minimum_degree (DoFHandler< 3 > &, bool, bool);

 template
 void
 compute_minimum_degree (std::vector<dealii::types::global_dof_index> &,
 const DoFHandler< 3 > &, bool, bool);


 template
 void
 Cuthill_McKee (hp::DoFHandler< 3 > &, bool, bool);

 template
 void
 compute_Cuthill_McKee (std::vector<dealii::types::global_dof_index> &,
 const hp::DoFHandler< 3 > &, bool, bool);

 template
 void
 king_ordering (hp::DoFHandler< 3 > &, bool, bool);

 template
 void
 compute_king_ordering (std::vector<dealii::types::global_dof_index> &,
 const hp::DoFHandler< 3 > &, bool, bool);

 template
 void
 minimum_degree (hp::DoFHandler< 3 > &, bool, bool);

 template
 void
 compute_minimum_degree (std::vector<dealii::types::global_dof_index> &,
 const hp::DoFHandler< 3 > &, bool, bool);
 }




 template
 void Cuthill_McKee<hp::DoFHandler< 3 > >
 (hp::DoFHandler< 3 >&,
 const bool,
 const bool,
 const std::vector<types::global_dof_index>&);

 template
 void
 compute_Cuthill_McKee<hp::DoFHandler< 3 > >
 (std::vector<types::global_dof_index>&,
 const hp::DoFHandler< 3 >&,
 const bool,
 const bool,
 const std::vector<types::global_dof_index>&);

 template
 void component_wise
 (hp::DoFHandler< 3 >&,
 const std::vector<unsigned int>&);

 template
 void component_wise
 (DoFHandler< 3 >&,
 unsigned int,
 const std::vector<unsigned int>&);

 template
 void component_wise
 (MGDoFHandler< 3 >&,
 const std::vector<unsigned int>&);

 template
 void component_wise
 (MGDoFHandler< 3 >&,
 unsigned int,
 const std::vector<unsigned int>&);

 template
 void block_wise< 3 >
 (hp::DoFHandler< 3 >&);

 template
 void block_wise< 3 >
 (DoFHandler< 3 >&,
 unsigned int);

 template
 void hierarchical< 3 >
 (DoFHandler< 3 >&);

 template void
 cell_wise<DoFHandler< 3 > >
 (DoFHandler< 3 >&,
 const std::vector<DoFHandler< 3 >::active_cell_iterator>&);

 template void
 compute_cell_wise<DoFHandler< 3 > >
 (std::vector<types::global_dof_index>&, std::vector<types::global_dof_index>&,
 const DoFHandler< 3 >&,
 const std::vector<DoFHandler< 3 >::active_cell_iterator>&);

 template void
 cell_wise<DoFHandler< 3 > >
 (DoFHandler< 3 >&, unsigned int,
 const std::vector<DoFHandler< 3 >::level_cell_iterator>&);

 template void
 compute_cell_wise<DoFHandler< 3 > >
 (std::vector<types::global_dof_index>&, std::vector<types::global_dof_index>&,
 const DoFHandler< 3 >&, unsigned int,
 const std::vector<DoFHandler< 3 >::level_cell_iterator>&);

 template void
 compute_downstream<DoFHandler< 3 > >
 (std::vector<types::global_dof_index>&,std::vector<types::global_dof_index>&,
 const DoFHandler< 3 >&, const Point< 3 >&,
 const bool);

 template
 void
 clockwise_dg<DoFHandler< 3 > >
 (DoFHandler< 3 >&, const Point< 3 >&, bool);

 template
 void
 compute_clockwise_dg<DoFHandler< 3 > >
 (std::vector<types::global_dof_index>&, const DoFHandler< 3 >&,
 const Point< 3 >&, const bool);



 template void
 cell_wise<hp::DoFHandler< 3 > >
 (hp::DoFHandler< 3 >&,
 const std::vector<hp::DoFHandler< 3 >::active_cell_iterator>&);

 template void
 compute_cell_wise<hp::DoFHandler< 3 > >
 (std::vector<types::global_dof_index>&, std::vector<types::global_dof_index>&,
 const hp::DoFHandler< 3 >&,
 const std::vector<hp::DoFHandler< 3 >::active_cell_iterator>&);

 template void
 downstream<MGDoFHandler< 3 > >
 (MGDoFHandler< 3 >&,
 unsigned int,
 const Point< 3 >&,
 const bool);

 template void
 compute_downstream<hp::DoFHandler< 3 > >
 (std::vector<types::global_dof_index>&,std::vector<types::global_dof_index>&,
 const hp::DoFHandler< 3 >&,
 const Point< 3 >&,
 const bool);

 template
 void
 clockwise_dg<hp::DoFHandler< 3 > >
 (hp::DoFHandler< 3 >&,
 const Point< 3 >&, bool);

 template
 void
 compute_clockwise_dg<hp::DoFHandler< 3 > >
 (std::vector<types::global_dof_index>&,
 const hp::DoFHandler< 3 >&,
 const Point< 3 >&,
 const bool);



 template
 void downstream
 (DoFHandler< 3 >&,
 const unsigned int,
 const Point< 3 >&,
 const bool);

 template
 void clockwise_dg
 (DoFHandler< 3 >&,
 const unsigned int,
 const Point< 3 >&, bool);



 template
 void random<DoFHandler< 3 > >
 (DoFHandler< 3 > &);

 template
 void
 compute_random<DoFHandler< 3 > >
 (std::vector<types::global_dof_index>&,
 const DoFHandler< 3 > &);

 template
 void sort_selected_dofs_back<DoFHandler< 3 > >
 (DoFHandler< 3 > &,
 const std::vector<bool> &);

 template
 void sort_selected_dofs_back<MGDoFHandler< 3 > >
 (MGDoFHandler< 3 > &,
 const std::vector<bool> &,
 const unsigned int);

 template
 void
 compute_sort_selected_dofs_back<DoFHandler< 3 > >
 (std::vector<types::global_dof_index>&,
 const DoFHandler< 3 > &,
 const std::vector<bool> &);

 template
 void
 compute_sort_selected_dofs_back<MGDoFHandler< 3 > >
 (std::vector<types::global_dof_index>&,
 const MGDoFHandler< 3 > &,
 const std::vector<bool> &,
 const unsigned int);

 template
 void random<hp::DoFHandler< 3 > >
 (hp::DoFHandler< 3 > &);

 template
 void
 compute_random<hp::DoFHandler< 3 > >
 (std::vector<types::global_dof_index>&,
 const hp::DoFHandler< 3 > &);

 template
 void sort_selected_dofs_back<hp::DoFHandler< 3 > >
 (hp::DoFHandler< 3 > &,
 const std::vector<bool> &);

 template
 void
 compute_sort_selected_dofs_back<hp::DoFHandler< 3 > >
 (std::vector<types::global_dof_index>&,
 const hp::DoFHandler< 3 > &,
 const std::vector<bool> &);


 template
 void subdomain_wise<hp::DoFHandler< 3 > >
 (hp::DoFHandler< 3 > &);

 template
 void Cuthill_McKee<DoFHandler< 3 > >
 (DoFHandler< 3 >&,
 const unsigned int,
 const bool,
 const std::vector<types::global_dof_index>&);

 template
 void Cuthill_McKee<MGDoFHandler< 3 > >
 (MGDoFHandler< 3 >&,
 const unsigned int,
 const bool,
 const std::vector<types::global_dof_index>&);

 } 
#endif
 
#if  3  ==  3 
namespace DoFRenumbering
 {
 namespace boost
 {

 template
 void
 Cuthill_McKee (DoFHandler< 3 > &, bool, bool);

 template
 void
 compute_Cuthill_McKee (std::vector<dealii::types::global_dof_index> &,
 const DoFHandler< 3 > &, bool, bool);

 template
 void
 king_ordering (DoFHandler< 3 > &, bool, bool);

 template
 void
 compute_king_ordering (std::vector<dealii::types::global_dof_index> &,
 const DoFHandler< 3 > &, bool, bool);

 template
 void
 minimum_degree (DoFHandler< 3 > &, bool, bool);

 template
 void
 compute_minimum_degree (std::vector<dealii::types::global_dof_index> &,
 const DoFHandler< 3 > &, bool, bool);


 template
 void
 Cuthill_McKee (hp::DoFHandler< 3 > &, bool, bool);

 template
 void
 compute_Cuthill_McKee (std::vector<dealii::types::global_dof_index> &,
 const hp::DoFHandler< 3 > &, bool, bool);

 template
 void
 king_ordering (hp::DoFHandler< 3 > &, bool, bool);

 template
 void
 compute_king_ordering (std::vector<dealii::types::global_dof_index> &,
 const hp::DoFHandler< 3 > &, bool, bool);

 template
 void
 minimum_degree (hp::DoFHandler< 3 > &, bool, bool);

 template
 void
 compute_minimum_degree (std::vector<dealii::types::global_dof_index> &,
 const hp::DoFHandler< 3 > &, bool, bool);
 }




 template
 void Cuthill_McKee<hp::DoFHandler< 3 > >
 (hp::DoFHandler< 3 >&,
 const bool,
 const bool,
 const std::vector<types::global_dof_index>&);

 template
 void
 compute_Cuthill_McKee<hp::DoFHandler< 3 > >
 (std::vector<types::global_dof_index>&,
 const hp::DoFHandler< 3 >&,
 const bool,
 const bool,
 const std::vector<types::global_dof_index>&);

 template
 void component_wise
 (hp::DoFHandler< 3 >&,
 const std::vector<unsigned int>&);

 template
 void component_wise
 (DoFHandler< 3 >&,
 unsigned int,
 const std::vector<unsigned int>&);

 template
 void component_wise
 (MGDoFHandler< 3 >&,
 const std::vector<unsigned int>&);

 template
 void component_wise
 (MGDoFHandler< 3 >&,
 unsigned int,
 const std::vector<unsigned int>&);

 template
 void block_wise< 3 >
 (hp::DoFHandler< 3 >&);

 template
 void block_wise< 3 >
 (DoFHandler< 3 >&,
 unsigned int);

 template
 void hierarchical< 3 >
 (DoFHandler< 3 >&);

 template void
 cell_wise<DoFHandler< 3 > >
 (DoFHandler< 3 >&,
 const std::vector<DoFHandler< 3 >::active_cell_iterator>&);

 template void
 compute_cell_wise<DoFHandler< 3 > >
 (std::vector<types::global_dof_index>&, std::vector<types::global_dof_index>&,
 const DoFHandler< 3 >&,
 const std::vector<DoFHandler< 3 >::active_cell_iterator>&);

 template void
 cell_wise<DoFHandler< 3 > >
 (DoFHandler< 3 >&, unsigned int,
 const std::vector<DoFHandler< 3 >::level_cell_iterator>&);

 template void
 compute_cell_wise<DoFHandler< 3 > >
 (std::vector<types::global_dof_index>&, std::vector<types::global_dof_index>&,
 const DoFHandler< 3 >&, unsigned int,
 const std::vector<DoFHandler< 3 >::level_cell_iterator>&);

 template void
 compute_downstream<DoFHandler< 3 > >
 (std::vector<types::global_dof_index>&,std::vector<types::global_dof_index>&,
 const DoFHandler< 3 >&, const Point< 3 >&,
 const bool);

 template
 void
 clockwise_dg<DoFHandler< 3 > >
 (DoFHandler< 3 >&, const Point< 3 >&, bool);

 template
 void
 compute_clockwise_dg<DoFHandler< 3 > >
 (std::vector<types::global_dof_index>&, const DoFHandler< 3 >&,
 const Point< 3 >&, const bool);



 template void
 cell_wise<hp::DoFHandler< 3 > >
 (hp::DoFHandler< 3 >&,
 const std::vector<hp::DoFHandler< 3 >::active_cell_iterator>&);

 template void
 compute_cell_wise<hp::DoFHandler< 3 > >
 (std::vector<types::global_dof_index>&, std::vector<types::global_dof_index>&,
 const hp::DoFHandler< 3 >&,
 const std::vector<hp::DoFHandler< 3 >::active_cell_iterator>&);

 template void
 downstream<MGDoFHandler< 3 > >
 (MGDoFHandler< 3 >&,
 unsigned int,
 const Point< 3 >&,
 const bool);

 template void
 compute_downstream<hp::DoFHandler< 3 > >
 (std::vector<types::global_dof_index>&,std::vector<types::global_dof_index>&,
 const hp::DoFHandler< 3 >&,
 const Point< 3 >&,
 const bool);

 template
 void
 clockwise_dg<hp::DoFHandler< 3 > >
 (hp::DoFHandler< 3 >&,
 const Point< 3 >&, bool);

 template
 void
 compute_clockwise_dg<hp::DoFHandler< 3 > >
 (std::vector<types::global_dof_index>&,
 const hp::DoFHandler< 3 >&,
 const Point< 3 >&,
 const bool);



 template
 void downstream
 (DoFHandler< 3 >&,
 const unsigned int,
 const Point< 3 >&,
 const bool);

 template
 void clockwise_dg
 (DoFHandler< 3 >&,
 const unsigned int,
 const Point< 3 >&, bool);



 template
 void random<DoFHandler< 3 > >
 (DoFHandler< 3 > &);

 template
 void
 compute_random<DoFHandler< 3 > >
 (std::vector<types::global_dof_index>&,
 const DoFHandler< 3 > &);

 template
 void sort_selected_dofs_back<DoFHandler< 3 > >
 (DoFHandler< 3 > &,
 const std::vector<bool> &);

 template
 void sort_selected_dofs_back<MGDoFHandler< 3 > >
 (MGDoFHandler< 3 > &,
 const std::vector<bool> &,
 const unsigned int);

 template
 void
 compute_sort_selected_dofs_back<DoFHandler< 3 > >
 (std::vector<types::global_dof_index>&,
 const DoFHandler< 3 > &,
 const std::vector<bool> &);

 template
 void
 compute_sort_selected_dofs_back<MGDoFHandler< 3 > >
 (std::vector<types::global_dof_index>&,
 const MGDoFHandler< 3 > &,
 const std::vector<bool> &,
 const unsigned int);

 template
 void random<hp::DoFHandler< 3 > >
 (hp::DoFHandler< 3 > &);

 template
 void
 compute_random<hp::DoFHandler< 3 > >
 (std::vector<types::global_dof_index>&,
 const hp::DoFHandler< 3 > &);

 template
 void sort_selected_dofs_back<hp::DoFHandler< 3 > >
 (hp::DoFHandler< 3 > &,
 const std::vector<bool> &);

 template
 void
 compute_sort_selected_dofs_back<hp::DoFHandler< 3 > >
 (std::vector<types::global_dof_index>&,
 const hp::DoFHandler< 3 > &,
 const std::vector<bool> &);


 template
 void subdomain_wise<hp::DoFHandler< 3 > >
 (hp::DoFHandler< 3 > &);

 template
 void Cuthill_McKee<DoFHandler< 3 > >
 (DoFHandler< 3 >&,
 const unsigned int,
 const bool,
 const std::vector<types::global_dof_index>&);

 template
 void Cuthill_McKee<MGDoFHandler< 3 > >
 (MGDoFHandler< 3 >&,
 const unsigned int,
 const bool,
 const std::vector<types::global_dof_index>&);

 } 
#endif
 
