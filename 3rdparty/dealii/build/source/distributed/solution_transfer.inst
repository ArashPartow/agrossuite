namespace parallel
 {
 namespace distributed
 {
#if  1  > 1
 template class SolutionTransfer< 1 ,::dealii::Vector<double>, DoFHandler< 1 > >;
 template class SolutionTransfer< 1 ,::dealii::parallel::distributed::Vector<double>, DoFHandler< 1 > >;
 template class SolutionTransfer< 1 ,::dealii::parallel::distributed::Vector<float>, DoFHandler< 1 > >;
 template class SolutionTransfer< 1 ,::dealii::parallel::distributed::BlockVector<double>, DoFHandler< 1 > >;
 template class SolutionTransfer< 1 ,::dealii::parallel::distributed::BlockVector<float>, DoFHandler< 1 > >;


#ifdef DEAL_II_WITH_PETSC
 template class SolutionTransfer< 1 , PETScWrappers::Vector, DoFHandler< 1 > >;

 template class SolutionTransfer< 1 , PETScWrappers::BlockVector, DoFHandler< 1 > >;

 template class SolutionTransfer< 1 , PETScWrappers::MPI::Vector, DoFHandler< 1 > >;

 template class SolutionTransfer< 1 , PETScWrappers::MPI::BlockVector, DoFHandler< 1 > >;
#endif

#ifdef DEAL_II_WITH_TRILINOS
 template class SolutionTransfer< 1 , TrilinosWrappers::Vector, DoFHandler< 1 > >;

 template class SolutionTransfer< 1 , TrilinosWrappers::BlockVector, DoFHandler< 1 > >;

 template class SolutionTransfer< 1 , TrilinosWrappers::MPI::Vector, DoFHandler< 1 > >;

 template class SolutionTransfer< 1 , TrilinosWrappers::MPI::BlockVector, DoFHandler< 1 > >;
#endif
#endif
 }
 }

 
namespace parallel
 {
 namespace distributed
 {
#if  2  > 1
 template class SolutionTransfer< 2 ,::dealii::Vector<double>, DoFHandler< 2 > >;
 template class SolutionTransfer< 2 ,::dealii::parallel::distributed::Vector<double>, DoFHandler< 2 > >;
 template class SolutionTransfer< 2 ,::dealii::parallel::distributed::Vector<float>, DoFHandler< 2 > >;
 template class SolutionTransfer< 2 ,::dealii::parallel::distributed::BlockVector<double>, DoFHandler< 2 > >;
 template class SolutionTransfer< 2 ,::dealii::parallel::distributed::BlockVector<float>, DoFHandler< 2 > >;


#ifdef DEAL_II_WITH_PETSC
 template class SolutionTransfer< 2 , PETScWrappers::Vector, DoFHandler< 2 > >;

 template class SolutionTransfer< 2 , PETScWrappers::BlockVector, DoFHandler< 2 > >;

 template class SolutionTransfer< 2 , PETScWrappers::MPI::Vector, DoFHandler< 2 > >;

 template class SolutionTransfer< 2 , PETScWrappers::MPI::BlockVector, DoFHandler< 2 > >;
#endif

#ifdef DEAL_II_WITH_TRILINOS
 template class SolutionTransfer< 2 , TrilinosWrappers::Vector, DoFHandler< 2 > >;

 template class SolutionTransfer< 2 , TrilinosWrappers::BlockVector, DoFHandler< 2 > >;

 template class SolutionTransfer< 2 , TrilinosWrappers::MPI::Vector, DoFHandler< 2 > >;

 template class SolutionTransfer< 2 , TrilinosWrappers::MPI::BlockVector, DoFHandler< 2 > >;
#endif
#endif
 }
 }

 
namespace parallel
 {
 namespace distributed
 {
#if  3  > 1
 template class SolutionTransfer< 3 ,::dealii::Vector<double>, DoFHandler< 3 > >;
 template class SolutionTransfer< 3 ,::dealii::parallel::distributed::Vector<double>, DoFHandler< 3 > >;
 template class SolutionTransfer< 3 ,::dealii::parallel::distributed::Vector<float>, DoFHandler< 3 > >;
 template class SolutionTransfer< 3 ,::dealii::parallel::distributed::BlockVector<double>, DoFHandler< 3 > >;
 template class SolutionTransfer< 3 ,::dealii::parallel::distributed::BlockVector<float>, DoFHandler< 3 > >;


#ifdef DEAL_II_WITH_PETSC
 template class SolutionTransfer< 3 , PETScWrappers::Vector, DoFHandler< 3 > >;

 template class SolutionTransfer< 3 , PETScWrappers::BlockVector, DoFHandler< 3 > >;

 template class SolutionTransfer< 3 , PETScWrappers::MPI::Vector, DoFHandler< 3 > >;

 template class SolutionTransfer< 3 , PETScWrappers::MPI::BlockVector, DoFHandler< 3 > >;
#endif

#ifdef DEAL_II_WITH_TRILINOS
 template class SolutionTransfer< 3 , TrilinosWrappers::Vector, DoFHandler< 3 > >;

 template class SolutionTransfer< 3 , TrilinosWrappers::BlockVector, DoFHandler< 3 > >;

 template class SolutionTransfer< 3 , TrilinosWrappers::MPI::Vector, DoFHandler< 3 > >;

 template class SolutionTransfer< 3 , TrilinosWrappers::MPI::BlockVector, DoFHandler< 3 > >;
#endif
#endif
 }
 }

 
