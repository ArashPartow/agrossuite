namespace MeshWorker
 {
 template class VectorDataBase< 1 >;
 }

namespace MeshWorker
 {
 template class VectorDataBase< 2 >;
 }

namespace MeshWorker
 {
 template class VectorDataBase< 3 >;
 }

namespace MeshWorker
 {
 template class VectorData< Vector<double> , 1 >;
 template class VectorData<const  Vector<double> , 1 >;
 template class MGVectorData< Vector<double> , 1 >;
 template class MGVectorData<const  Vector<double> , 1 >;
 }

namespace MeshWorker
 {
 template class VectorData< Vector<double> , 2 >;
 template class VectorData<const  Vector<double> , 2 >;
 template class MGVectorData< Vector<double> , 2 >;
 template class MGVectorData<const  Vector<double> , 2 >;
 }

namespace MeshWorker
 {
 template class VectorData< Vector<double> , 3 >;
 template class VectorData<const  Vector<double> , 3 >;
 template class MGVectorData< Vector<double> , 3 >;
 template class MGVectorData<const  Vector<double> , 3 >;
 }

namespace MeshWorker
 {
 template class VectorData< Vector<float> , 1 >;
 template class VectorData<const  Vector<float> , 1 >;
 template class MGVectorData< Vector<float> , 1 >;
 template class MGVectorData<const  Vector<float> , 1 >;
 }

namespace MeshWorker
 {
 template class VectorData< Vector<float> , 2 >;
 template class VectorData<const  Vector<float> , 2 >;
 template class MGVectorData< Vector<float> , 2 >;
 template class MGVectorData<const  Vector<float> , 2 >;
 }

namespace MeshWorker
 {
 template class VectorData< Vector<float> , 3 >;
 template class VectorData<const  Vector<float> , 3 >;
 template class MGVectorData< Vector<float> , 3 >;
 template class MGVectorData<const  Vector<float> , 3 >;
 }

namespace MeshWorker
 {
 template class VectorData< Vector<long double> , 1 >;
 template class VectorData<const  Vector<long double> , 1 >;
 template class MGVectorData< Vector<long double> , 1 >;
 template class MGVectorData<const  Vector<long double> , 1 >;
 }

namespace MeshWorker
 {
 template class VectorData< Vector<long double> , 2 >;
 template class VectorData<const  Vector<long double> , 2 >;
 template class MGVectorData< Vector<long double> , 2 >;
 template class MGVectorData<const  Vector<long double> , 2 >;
 }

namespace MeshWorker
 {
 template class VectorData< Vector<long double> , 3 >;
 template class VectorData<const  Vector<long double> , 3 >;
 template class MGVectorData< Vector<long double> , 3 >;
 template class MGVectorData<const  Vector<long double> , 3 >;
 }

namespace MeshWorker
 {
 template class VectorData< BlockVector<double> , 1 >;
 template class VectorData<const  BlockVector<double> , 1 >;
 template class MGVectorData< BlockVector<double> , 1 >;
 template class MGVectorData<const  BlockVector<double> , 1 >;
 }

namespace MeshWorker
 {
 template class VectorData< BlockVector<double> , 2 >;
 template class VectorData<const  BlockVector<double> , 2 >;
 template class MGVectorData< BlockVector<double> , 2 >;
 template class MGVectorData<const  BlockVector<double> , 2 >;
 }

namespace MeshWorker
 {
 template class VectorData< BlockVector<double> , 3 >;
 template class VectorData<const  BlockVector<double> , 3 >;
 template class MGVectorData< BlockVector<double> , 3 >;
 template class MGVectorData<const  BlockVector<double> , 3 >;
 }

namespace MeshWorker
 {
 template class VectorData< BlockVector<float> , 1 >;
 template class VectorData<const  BlockVector<float> , 1 >;
 template class MGVectorData< BlockVector<float> , 1 >;
 template class MGVectorData<const  BlockVector<float> , 1 >;
 }

namespace MeshWorker
 {
 template class VectorData< BlockVector<float> , 2 >;
 template class VectorData<const  BlockVector<float> , 2 >;
 template class MGVectorData< BlockVector<float> , 2 >;
 template class MGVectorData<const  BlockVector<float> , 2 >;
 }

namespace MeshWorker
 {
 template class VectorData< BlockVector<float> , 3 >;
 template class VectorData<const  BlockVector<float> , 3 >;
 template class MGVectorData< BlockVector<float> , 3 >;
 template class MGVectorData<const  BlockVector<float> , 3 >;
 }

namespace MeshWorker
 {
 template class VectorData< BlockVector<long double> , 1 >;
 template class VectorData<const  BlockVector<long double> , 1 >;
 template class MGVectorData< BlockVector<long double> , 1 >;
 template class MGVectorData<const  BlockVector<long double> , 1 >;
 }

namespace MeshWorker
 {
 template class VectorData< BlockVector<long double> , 2 >;
 template class VectorData<const  BlockVector<long double> , 2 >;
 template class MGVectorData< BlockVector<long double> , 2 >;
 template class MGVectorData<const  BlockVector<long double> , 2 >;
 }

namespace MeshWorker
 {
 template class VectorData< BlockVector<long double> , 3 >;
 template class VectorData<const  BlockVector<long double> , 3 >;
 template class MGVectorData< BlockVector<long double> , 3 >;
 template class MGVectorData<const  BlockVector<long double> , 3 >;
 }

namespace MeshWorker
 {
 template class VectorData< parallel::distributed::Vector<double> , 1 >;
 template class VectorData<const  parallel::distributed::Vector<double> , 1 >;
 template class MGVectorData< parallel::distributed::Vector<double> , 1 >;
 template class MGVectorData<const  parallel::distributed::Vector<double> , 1 >;
 }

namespace MeshWorker
 {
 template class VectorData< parallel::distributed::Vector<double> , 2 >;
 template class VectorData<const  parallel::distributed::Vector<double> , 2 >;
 template class MGVectorData< parallel::distributed::Vector<double> , 2 >;
 template class MGVectorData<const  parallel::distributed::Vector<double> , 2 >;
 }

namespace MeshWorker
 {
 template class VectorData< parallel::distributed::Vector<double> , 3 >;
 template class VectorData<const  parallel::distributed::Vector<double> , 3 >;
 template class MGVectorData< parallel::distributed::Vector<double> , 3 >;
 template class MGVectorData<const  parallel::distributed::Vector<double> , 3 >;
 }

namespace MeshWorker
 {
 template class VectorData< parallel::distributed::Vector<float> , 1 >;
 template class VectorData<const  parallel::distributed::Vector<float> , 1 >;
 template class MGVectorData< parallel::distributed::Vector<float> , 1 >;
 template class MGVectorData<const  parallel::distributed::Vector<float> , 1 >;
 }

namespace MeshWorker
 {
 template class VectorData< parallel::distributed::Vector<float> , 2 >;
 template class VectorData<const  parallel::distributed::Vector<float> , 2 >;
 template class MGVectorData< parallel::distributed::Vector<float> , 2 >;
 template class MGVectorData<const  parallel::distributed::Vector<float> , 2 >;
 }

namespace MeshWorker
 {
 template class VectorData< parallel::distributed::Vector<float> , 3 >;
 template class VectorData<const  parallel::distributed::Vector<float> , 3 >;
 template class MGVectorData< parallel::distributed::Vector<float> , 3 >;
 template class MGVectorData<const  parallel::distributed::Vector<float> , 3 >;
 }

namespace MeshWorker
 {
 template class VectorData< parallel::distributed::Vector<long double> , 1 >;
 template class VectorData<const  parallel::distributed::Vector<long double> , 1 >;
 template class MGVectorData< parallel::distributed::Vector<long double> , 1 >;
 template class MGVectorData<const  parallel::distributed::Vector<long double> , 1 >;
 }

namespace MeshWorker
 {
 template class VectorData< parallel::distributed::Vector<long double> , 2 >;
 template class VectorData<const  parallel::distributed::Vector<long double> , 2 >;
 template class MGVectorData< parallel::distributed::Vector<long double> , 2 >;
 template class MGVectorData<const  parallel::distributed::Vector<long double> , 2 >;
 }

namespace MeshWorker
 {
 template class VectorData< parallel::distributed::Vector<long double> , 3 >;
 template class VectorData<const  parallel::distributed::Vector<long double> , 3 >;
 template class MGVectorData< parallel::distributed::Vector<long double> , 3 >;
 template class MGVectorData<const  parallel::distributed::Vector<long double> , 3 >;
 }

namespace MeshWorker
 {
 template class VectorData< parallel::distributed::BlockVector<double> , 1 >;
 template class VectorData<const  parallel::distributed::BlockVector<double> , 1 >;
 template class MGVectorData< parallel::distributed::BlockVector<double> , 1 >;
 template class MGVectorData<const  parallel::distributed::BlockVector<double> , 1 >;
 }

namespace MeshWorker
 {
 template class VectorData< parallel::distributed::BlockVector<double> , 2 >;
 template class VectorData<const  parallel::distributed::BlockVector<double> , 2 >;
 template class MGVectorData< parallel::distributed::BlockVector<double> , 2 >;
 template class MGVectorData<const  parallel::distributed::BlockVector<double> , 2 >;
 }

namespace MeshWorker
 {
 template class VectorData< parallel::distributed::BlockVector<double> , 3 >;
 template class VectorData<const  parallel::distributed::BlockVector<double> , 3 >;
 template class MGVectorData< parallel::distributed::BlockVector<double> , 3 >;
 template class MGVectorData<const  parallel::distributed::BlockVector<double> , 3 >;
 }

namespace MeshWorker
 {
 template class VectorData< parallel::distributed::BlockVector<float> , 1 >;
 template class VectorData<const  parallel::distributed::BlockVector<float> , 1 >;
 template class MGVectorData< parallel::distributed::BlockVector<float> , 1 >;
 template class MGVectorData<const  parallel::distributed::BlockVector<float> , 1 >;
 }

namespace MeshWorker
 {
 template class VectorData< parallel::distributed::BlockVector<float> , 2 >;
 template class VectorData<const  parallel::distributed::BlockVector<float> , 2 >;
 template class MGVectorData< parallel::distributed::BlockVector<float> , 2 >;
 template class MGVectorData<const  parallel::distributed::BlockVector<float> , 2 >;
 }

namespace MeshWorker
 {
 template class VectorData< parallel::distributed::BlockVector<float> , 3 >;
 template class VectorData<const  parallel::distributed::BlockVector<float> , 3 >;
 template class MGVectorData< parallel::distributed::BlockVector<float> , 3 >;
 template class MGVectorData<const  parallel::distributed::BlockVector<float> , 3 >;
 }

namespace MeshWorker
 {
 template class VectorData< parallel::distributed::BlockVector<long double> , 1 >;
 template class VectorData<const  parallel::distributed::BlockVector<long double> , 1 >;
 template class MGVectorData< parallel::distributed::BlockVector<long double> , 1 >;
 template class MGVectorData<const  parallel::distributed::BlockVector<long double> , 1 >;
 }

namespace MeshWorker
 {
 template class VectorData< parallel::distributed::BlockVector<long double> , 2 >;
 template class VectorData<const  parallel::distributed::BlockVector<long double> , 2 >;
 template class MGVectorData< parallel::distributed::BlockVector<long double> , 2 >;
 template class MGVectorData<const  parallel::distributed::BlockVector<long double> , 2 >;
 }

namespace MeshWorker
 {
 template class VectorData< parallel::distributed::BlockVector<long double> , 3 >;
 template class VectorData<const  parallel::distributed::BlockVector<long double> , 3 >;
 template class MGVectorData< parallel::distributed::BlockVector<long double> , 3 >;
 template class MGVectorData<const  parallel::distributed::BlockVector<long double> , 3 >;
 }

