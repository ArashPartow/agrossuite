template
 void
 GridRefinement::
 refine< 1 ,dealii::Vector< double >, 1 >
 (Triangulation< 1 > &,
 const dealii::Vector< double > &,
 const double,
 const unsigned int);

 template
 void
 GridRefinement::
 coarsen< 1 ,dealii::Vector< double >, 1 >
 (Triangulation< 1 > &,
 const dealii::Vector< double > &,
 const double);

 template
 void
 GridRefinement::
 refine_and_coarsen_fixed_number< 1 ,dealii::Vector< double >, 1 >
 (Triangulation< 1 > &,
 const dealii::Vector< double > &,
 const double,
 const double,
 const unsigned int);

 template
 void
 GridRefinement::
 refine_and_coarsen_fixed_fraction< 1 ,dealii::Vector< double >, 1 >
 (Triangulation< 1 > &,
 const dealii::Vector< double > &,
 const double,
 const double,
 const unsigned int);

 template
 void
 GridRefinement::
 refine_and_coarsen_optimize< 1 ,dealii::Vector< double >, 1 >
 (Triangulation< 1 > &,
 const dealii::Vector< double > &,
 const unsigned int);

#if  1  < 3
 template
 void
 GridRefinement::
 refine< 1 ,dealii::Vector< double >, 1 +1>
 (Triangulation< 1 , 1 +1> &,
 const dealii::Vector< double > &,
 const double,
 const unsigned int);

 template
 void
 GridRefinement::
 coarsen< 1 ,dealii::Vector< double >, 1 +1>
 (Triangulation< 1 , 1 +1> &,
 const dealii::Vector< double > &,
 const double);

 template
 void
 GridRefinement::
 refine_and_coarsen_fixed_number< 1 ,dealii::Vector< double >, 1 +1>
 (Triangulation< 1 , 1 +1> &,
 const dealii::Vector< double > &,
 const double,
 const double,
 const unsigned int);

 template
 void
 GridRefinement::
 refine_and_coarsen_fixed_fraction< 1 ,dealii::Vector< double >, 1 +1>
 (Triangulation< 1 , 1 +1> &,
 const dealii::Vector< double > &,
 const double,
 const double,
 const unsigned int);

 template
 void
 GridRefinement::
 refine_and_coarsen_optimize< 1 ,dealii::Vector< double >, 1 +1>
 (Triangulation< 1 , 1 +1> &,
 const dealii::Vector< double > &,
 const unsigned int);
#endif

template
 void
 GridRefinement::
 refine< 2 ,dealii::Vector< double >, 2 >
 (Triangulation< 2 > &,
 const dealii::Vector< double > &,
 const double,
 const unsigned int);

 template
 void
 GridRefinement::
 coarsen< 2 ,dealii::Vector< double >, 2 >
 (Triangulation< 2 > &,
 const dealii::Vector< double > &,
 const double);

 template
 void
 GridRefinement::
 refine_and_coarsen_fixed_number< 2 ,dealii::Vector< double >, 2 >
 (Triangulation< 2 > &,
 const dealii::Vector< double > &,
 const double,
 const double,
 const unsigned int);

 template
 void
 GridRefinement::
 refine_and_coarsen_fixed_fraction< 2 ,dealii::Vector< double >, 2 >
 (Triangulation< 2 > &,
 const dealii::Vector< double > &,
 const double,
 const double,
 const unsigned int);

 template
 void
 GridRefinement::
 refine_and_coarsen_optimize< 2 ,dealii::Vector< double >, 2 >
 (Triangulation< 2 > &,
 const dealii::Vector< double > &,
 const unsigned int);

#if  2  < 3
 template
 void
 GridRefinement::
 refine< 2 ,dealii::Vector< double >, 2 +1>
 (Triangulation< 2 , 2 +1> &,
 const dealii::Vector< double > &,
 const double,
 const unsigned int);

 template
 void
 GridRefinement::
 coarsen< 2 ,dealii::Vector< double >, 2 +1>
 (Triangulation< 2 , 2 +1> &,
 const dealii::Vector< double > &,
 const double);

 template
 void
 GridRefinement::
 refine_and_coarsen_fixed_number< 2 ,dealii::Vector< double >, 2 +1>
 (Triangulation< 2 , 2 +1> &,
 const dealii::Vector< double > &,
 const double,
 const double,
 const unsigned int);

 template
 void
 GridRefinement::
 refine_and_coarsen_fixed_fraction< 2 ,dealii::Vector< double >, 2 +1>
 (Triangulation< 2 , 2 +1> &,
 const dealii::Vector< double > &,
 const double,
 const double,
 const unsigned int);

 template
 void
 GridRefinement::
 refine_and_coarsen_optimize< 2 ,dealii::Vector< double >, 2 +1>
 (Triangulation< 2 , 2 +1> &,
 const dealii::Vector< double > &,
 const unsigned int);
#endif

template
 void
 GridRefinement::
 refine< 3 ,dealii::Vector< double >, 3 >
 (Triangulation< 3 > &,
 const dealii::Vector< double > &,
 const double,
 const unsigned int);

 template
 void
 GridRefinement::
 coarsen< 3 ,dealii::Vector< double >, 3 >
 (Triangulation< 3 > &,
 const dealii::Vector< double > &,
 const double);

 template
 void
 GridRefinement::
 refine_and_coarsen_fixed_number< 3 ,dealii::Vector< double >, 3 >
 (Triangulation< 3 > &,
 const dealii::Vector< double > &,
 const double,
 const double,
 const unsigned int);

 template
 void
 GridRefinement::
 refine_and_coarsen_fixed_fraction< 3 ,dealii::Vector< double >, 3 >
 (Triangulation< 3 > &,
 const dealii::Vector< double > &,
 const double,
 const double,
 const unsigned int);

 template
 void
 GridRefinement::
 refine_and_coarsen_optimize< 3 ,dealii::Vector< double >, 3 >
 (Triangulation< 3 > &,
 const dealii::Vector< double > &,
 const unsigned int);

#if  3  < 3
 template
 void
 GridRefinement::
 refine< 3 ,dealii::Vector< double >, 3 +1>
 (Triangulation< 3 , 3 +1> &,
 const dealii::Vector< double > &,
 const double,
 const unsigned int);

 template
 void
 GridRefinement::
 coarsen< 3 ,dealii::Vector< double >, 3 +1>
 (Triangulation< 3 , 3 +1> &,
 const dealii::Vector< double > &,
 const double);

 template
 void
 GridRefinement::
 refine_and_coarsen_fixed_number< 3 ,dealii::Vector< double >, 3 +1>
 (Triangulation< 3 , 3 +1> &,
 const dealii::Vector< double > &,
 const double,
 const double,
 const unsigned int);

 template
 void
 GridRefinement::
 refine_and_coarsen_fixed_fraction< 3 ,dealii::Vector< double >, 3 +1>
 (Triangulation< 3 , 3 +1> &,
 const dealii::Vector< double > &,
 const double,
 const double,
 const unsigned int);

 template
 void
 GridRefinement::
 refine_and_coarsen_optimize< 3 ,dealii::Vector< double >, 3 +1>
 (Triangulation< 3 , 3 +1> &,
 const dealii::Vector< double > &,
 const unsigned int);
#endif

template
 void
 GridRefinement::
 refine< 1 ,dealii::Vector< float >, 1 >
 (Triangulation< 1 > &,
 const dealii::Vector< float > &,
 const double,
 const unsigned int);

 template
 void
 GridRefinement::
 coarsen< 1 ,dealii::Vector< float >, 1 >
 (Triangulation< 1 > &,
 const dealii::Vector< float > &,
 const double);

 template
 void
 GridRefinement::
 refine_and_coarsen_fixed_number< 1 ,dealii::Vector< float >, 1 >
 (Triangulation< 1 > &,
 const dealii::Vector< float > &,
 const double,
 const double,
 const unsigned int);

 template
 void
 GridRefinement::
 refine_and_coarsen_fixed_fraction< 1 ,dealii::Vector< float >, 1 >
 (Triangulation< 1 > &,
 const dealii::Vector< float > &,
 const double,
 const double,
 const unsigned int);

 template
 void
 GridRefinement::
 refine_and_coarsen_optimize< 1 ,dealii::Vector< float >, 1 >
 (Triangulation< 1 > &,
 const dealii::Vector< float > &,
 const unsigned int);

#if  1  < 3
 template
 void
 GridRefinement::
 refine< 1 ,dealii::Vector< float >, 1 +1>
 (Triangulation< 1 , 1 +1> &,
 const dealii::Vector< float > &,
 const double,
 const unsigned int);

 template
 void
 GridRefinement::
 coarsen< 1 ,dealii::Vector< float >, 1 +1>
 (Triangulation< 1 , 1 +1> &,
 const dealii::Vector< float > &,
 const double);

 template
 void
 GridRefinement::
 refine_and_coarsen_fixed_number< 1 ,dealii::Vector< float >, 1 +1>
 (Triangulation< 1 , 1 +1> &,
 const dealii::Vector< float > &,
 const double,
 const double,
 const unsigned int);

 template
 void
 GridRefinement::
 refine_and_coarsen_fixed_fraction< 1 ,dealii::Vector< float >, 1 +1>
 (Triangulation< 1 , 1 +1> &,
 const dealii::Vector< float > &,
 const double,
 const double,
 const unsigned int);

 template
 void
 GridRefinement::
 refine_and_coarsen_optimize< 1 ,dealii::Vector< float >, 1 +1>
 (Triangulation< 1 , 1 +1> &,
 const dealii::Vector< float > &,
 const unsigned int);
#endif

template
 void
 GridRefinement::
 refine< 2 ,dealii::Vector< float >, 2 >
 (Triangulation< 2 > &,
 const dealii::Vector< float > &,
 const double,
 const unsigned int);

 template
 void
 GridRefinement::
 coarsen< 2 ,dealii::Vector< float >, 2 >
 (Triangulation< 2 > &,
 const dealii::Vector< float > &,
 const double);

 template
 void
 GridRefinement::
 refine_and_coarsen_fixed_number< 2 ,dealii::Vector< float >, 2 >
 (Triangulation< 2 > &,
 const dealii::Vector< float > &,
 const double,
 const double,
 const unsigned int);

 template
 void
 GridRefinement::
 refine_and_coarsen_fixed_fraction< 2 ,dealii::Vector< float >, 2 >
 (Triangulation< 2 > &,
 const dealii::Vector< float > &,
 const double,
 const double,
 const unsigned int);

 template
 void
 GridRefinement::
 refine_and_coarsen_optimize< 2 ,dealii::Vector< float >, 2 >
 (Triangulation< 2 > &,
 const dealii::Vector< float > &,
 const unsigned int);

#if  2  < 3
 template
 void
 GridRefinement::
 refine< 2 ,dealii::Vector< float >, 2 +1>
 (Triangulation< 2 , 2 +1> &,
 const dealii::Vector< float > &,
 const double,
 const unsigned int);

 template
 void
 GridRefinement::
 coarsen< 2 ,dealii::Vector< float >, 2 +1>
 (Triangulation< 2 , 2 +1> &,
 const dealii::Vector< float > &,
 const double);

 template
 void
 GridRefinement::
 refine_and_coarsen_fixed_number< 2 ,dealii::Vector< float >, 2 +1>
 (Triangulation< 2 , 2 +1> &,
 const dealii::Vector< float > &,
 const double,
 const double,
 const unsigned int);

 template
 void
 GridRefinement::
 refine_and_coarsen_fixed_fraction< 2 ,dealii::Vector< float >, 2 +1>
 (Triangulation< 2 , 2 +1> &,
 const dealii::Vector< float > &,
 const double,
 const double,
 const unsigned int);

 template
 void
 GridRefinement::
 refine_and_coarsen_optimize< 2 ,dealii::Vector< float >, 2 +1>
 (Triangulation< 2 , 2 +1> &,
 const dealii::Vector< float > &,
 const unsigned int);
#endif

template
 void
 GridRefinement::
 refine< 3 ,dealii::Vector< float >, 3 >
 (Triangulation< 3 > &,
 const dealii::Vector< float > &,
 const double,
 const unsigned int);

 template
 void
 GridRefinement::
 coarsen< 3 ,dealii::Vector< float >, 3 >
 (Triangulation< 3 > &,
 const dealii::Vector< float > &,
 const double);

 template
 void
 GridRefinement::
 refine_and_coarsen_fixed_number< 3 ,dealii::Vector< float >, 3 >
 (Triangulation< 3 > &,
 const dealii::Vector< float > &,
 const double,
 const double,
 const unsigned int);

 template
 void
 GridRefinement::
 refine_and_coarsen_fixed_fraction< 3 ,dealii::Vector< float >, 3 >
 (Triangulation< 3 > &,
 const dealii::Vector< float > &,
 const double,
 const double,
 const unsigned int);

 template
 void
 GridRefinement::
 refine_and_coarsen_optimize< 3 ,dealii::Vector< float >, 3 >
 (Triangulation< 3 > &,
 const dealii::Vector< float > &,
 const unsigned int);

#if  3  < 3
 template
 void
 GridRefinement::
 refine< 3 ,dealii::Vector< float >, 3 +1>
 (Triangulation< 3 , 3 +1> &,
 const dealii::Vector< float > &,
 const double,
 const unsigned int);

 template
 void
 GridRefinement::
 coarsen< 3 ,dealii::Vector< float >, 3 +1>
 (Triangulation< 3 , 3 +1> &,
 const dealii::Vector< float > &,
 const double);

 template
 void
 GridRefinement::
 refine_and_coarsen_fixed_number< 3 ,dealii::Vector< float >, 3 +1>
 (Triangulation< 3 , 3 +1> &,
 const dealii::Vector< float > &,
 const double,
 const double,
 const unsigned int);

 template
 void
 GridRefinement::
 refine_and_coarsen_fixed_fraction< 3 ,dealii::Vector< float >, 3 +1>
 (Triangulation< 3 , 3 +1> &,
 const dealii::Vector< float > &,
 const double,
 const double,
 const unsigned int);

 template
 void
 GridRefinement::
 refine_and_coarsen_optimize< 3 ,dealii::Vector< float >, 3 +1>
 (Triangulation< 3 , 3 +1> &,
 const dealii::Vector< float > &,
 const unsigned int);
#endif

template
 void
 GridRefinement::
 refine< 1 ,dealii::Vector< long double >, 1 >
 (Triangulation< 1 > &,
 const dealii::Vector< long double > &,
 const double,
 const unsigned int);

 template
 void
 GridRefinement::
 coarsen< 1 ,dealii::Vector< long double >, 1 >
 (Triangulation< 1 > &,
 const dealii::Vector< long double > &,
 const double);

 template
 void
 GridRefinement::
 refine_and_coarsen_fixed_number< 1 ,dealii::Vector< long double >, 1 >
 (Triangulation< 1 > &,
 const dealii::Vector< long double > &,
 const double,
 const double,
 const unsigned int);

 template
 void
 GridRefinement::
 refine_and_coarsen_fixed_fraction< 1 ,dealii::Vector< long double >, 1 >
 (Triangulation< 1 > &,
 const dealii::Vector< long double > &,
 const double,
 const double,
 const unsigned int);

 template
 void
 GridRefinement::
 refine_and_coarsen_optimize< 1 ,dealii::Vector< long double >, 1 >
 (Triangulation< 1 > &,
 const dealii::Vector< long double > &,
 const unsigned int);

#if  1  < 3
 template
 void
 GridRefinement::
 refine< 1 ,dealii::Vector< long double >, 1 +1>
 (Triangulation< 1 , 1 +1> &,
 const dealii::Vector< long double > &,
 const double,
 const unsigned int);

 template
 void
 GridRefinement::
 coarsen< 1 ,dealii::Vector< long double >, 1 +1>
 (Triangulation< 1 , 1 +1> &,
 const dealii::Vector< long double > &,
 const double);

 template
 void
 GridRefinement::
 refine_and_coarsen_fixed_number< 1 ,dealii::Vector< long double >, 1 +1>
 (Triangulation< 1 , 1 +1> &,
 const dealii::Vector< long double > &,
 const double,
 const double,
 const unsigned int);

 template
 void
 GridRefinement::
 refine_and_coarsen_fixed_fraction< 1 ,dealii::Vector< long double >, 1 +1>
 (Triangulation< 1 , 1 +1> &,
 const dealii::Vector< long double > &,
 const double,
 const double,
 const unsigned int);

 template
 void
 GridRefinement::
 refine_and_coarsen_optimize< 1 ,dealii::Vector< long double >, 1 +1>
 (Triangulation< 1 , 1 +1> &,
 const dealii::Vector< long double > &,
 const unsigned int);
#endif

template
 void
 GridRefinement::
 refine< 2 ,dealii::Vector< long double >, 2 >
 (Triangulation< 2 > &,
 const dealii::Vector< long double > &,
 const double,
 const unsigned int);

 template
 void
 GridRefinement::
 coarsen< 2 ,dealii::Vector< long double >, 2 >
 (Triangulation< 2 > &,
 const dealii::Vector< long double > &,
 const double);

 template
 void
 GridRefinement::
 refine_and_coarsen_fixed_number< 2 ,dealii::Vector< long double >, 2 >
 (Triangulation< 2 > &,
 const dealii::Vector< long double > &,
 const double,
 const double,
 const unsigned int);

 template
 void
 GridRefinement::
 refine_and_coarsen_fixed_fraction< 2 ,dealii::Vector< long double >, 2 >
 (Triangulation< 2 > &,
 const dealii::Vector< long double > &,
 const double,
 const double,
 const unsigned int);

 template
 void
 GridRefinement::
 refine_and_coarsen_optimize< 2 ,dealii::Vector< long double >, 2 >
 (Triangulation< 2 > &,
 const dealii::Vector< long double > &,
 const unsigned int);

#if  2  < 3
 template
 void
 GridRefinement::
 refine< 2 ,dealii::Vector< long double >, 2 +1>
 (Triangulation< 2 , 2 +1> &,
 const dealii::Vector< long double > &,
 const double,
 const unsigned int);

 template
 void
 GridRefinement::
 coarsen< 2 ,dealii::Vector< long double >, 2 +1>
 (Triangulation< 2 , 2 +1> &,
 const dealii::Vector< long double > &,
 const double);

 template
 void
 GridRefinement::
 refine_and_coarsen_fixed_number< 2 ,dealii::Vector< long double >, 2 +1>
 (Triangulation< 2 , 2 +1> &,
 const dealii::Vector< long double > &,
 const double,
 const double,
 const unsigned int);

 template
 void
 GridRefinement::
 refine_and_coarsen_fixed_fraction< 2 ,dealii::Vector< long double >, 2 +1>
 (Triangulation< 2 , 2 +1> &,
 const dealii::Vector< long double > &,
 const double,
 const double,
 const unsigned int);

 template
 void
 GridRefinement::
 refine_and_coarsen_optimize< 2 ,dealii::Vector< long double >, 2 +1>
 (Triangulation< 2 , 2 +1> &,
 const dealii::Vector< long double > &,
 const unsigned int);
#endif

template
 void
 GridRefinement::
 refine< 3 ,dealii::Vector< long double >, 3 >
 (Triangulation< 3 > &,
 const dealii::Vector< long double > &,
 const double,
 const unsigned int);

 template
 void
 GridRefinement::
 coarsen< 3 ,dealii::Vector< long double >, 3 >
 (Triangulation< 3 > &,
 const dealii::Vector< long double > &,
 const double);

 template
 void
 GridRefinement::
 refine_and_coarsen_fixed_number< 3 ,dealii::Vector< long double >, 3 >
 (Triangulation< 3 > &,
 const dealii::Vector< long double > &,
 const double,
 const double,
 const unsigned int);

 template
 void
 GridRefinement::
 refine_and_coarsen_fixed_fraction< 3 ,dealii::Vector< long double >, 3 >
 (Triangulation< 3 > &,
 const dealii::Vector< long double > &,
 const double,
 const double,
 const unsigned int);

 template
 void
 GridRefinement::
 refine_and_coarsen_optimize< 3 ,dealii::Vector< long double >, 3 >
 (Triangulation< 3 > &,
 const dealii::Vector< long double > &,
 const unsigned int);

#if  3  < 3
 template
 void
 GridRefinement::
 refine< 3 ,dealii::Vector< long double >, 3 +1>
 (Triangulation< 3 , 3 +1> &,
 const dealii::Vector< long double > &,
 const double,
 const unsigned int);

 template
 void
 GridRefinement::
 coarsen< 3 ,dealii::Vector< long double >, 3 +1>
 (Triangulation< 3 , 3 +1> &,
 const dealii::Vector< long double > &,
 const double);

 template
 void
 GridRefinement::
 refine_and_coarsen_fixed_number< 3 ,dealii::Vector< long double >, 3 +1>
 (Triangulation< 3 , 3 +1> &,
 const dealii::Vector< long double > &,
 const double,
 const double,
 const unsigned int);

 template
 void
 GridRefinement::
 refine_and_coarsen_fixed_fraction< 3 ,dealii::Vector< long double >, 3 +1>
 (Triangulation< 3 , 3 +1> &,
 const dealii::Vector< long double > &,
 const double,
 const double,
 const unsigned int);

 template
 void
 GridRefinement::
 refine_and_coarsen_optimize< 3 ,dealii::Vector< long double >, 3 +1>
 (Triangulation< 3 , 3 +1> &,
 const dealii::Vector< long double > &,
 const unsigned int);
#endif

